Index: gvsun-business/independent/limsproduct/src/main/java/net/gvsun/lims/web/labroom/lab/LabRoomController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package net.gvsun.lims.web.labroom.lab;\r\n\r\nimport com.alibaba.fastjson.JSON;\r\nimport net.gvsun.datasource.ClientDatabaseContext;\r\nimport net.gvsun.lims.common.constant.CommonConstantInterface;\r\nimport net.gvsun.lims.common.constant.ConstantInterface;\r\nimport net.gvsun.lims.common.constant.LabAttendance;\r\nimport net.gvsun.lims.dao.*;\r\nimport net.gvsun.lims.domain.*;\r\nimport net.gvsun.lims.domain.respositiry.OperationItemJPA;\r\nimport net.gvsun.lims.domain.respositiry.SchoolCourseInfoJPA;\r\nimport net.gvsun.lims.dto.common.EasyCacheDTO;\r\nimport net.gvsun.lims.dto.common.MessageDTO;\r\nimport net.gvsun.lims.dto.common.PConfigDTO;\r\nimport net.gvsun.lims.dto.common.VideoEnum;\r\nimport net.gvsun.lims.dto.timetable.TimetableParamVO;\r\nimport net.gvsun.lims.dto.vo.labRoom.LabRoomVO;\r\nimport net.gvsun.lims.dto.vo.zjcc.LabRoomDeviceVo;\r\nimport net.gvsun.lims.dto.vo.zjcc.LabRoomVo;\r\nimport net.gvsun.feign.AuditServerFeign;\r\nimport net.gvsun.lims.service.common.CommonDocumentService;\r\nimport net.gvsun.lims.service.common.EmptyUtil;\r\nimport net.gvsun.lims.service.common.ShareService;\r\nimport net.gvsun.lims.service.common.dictionary.CDictionaryService;\r\nimport net.gvsun.lims.service.device.LabRoomDeviceReservationCreditService;\r\nimport net.gvsun.lims.service.device.LabRoomDeviceService;\r\nimport net.gvsun.lims.service.device.SchoolDeviceService;\r\nimport net.gvsun.lims.service.labroom.lab.*;\r\nimport net.gvsun.lims.service.labroom.software.SoftwareService;\r\nimport net.gvsun.lims.service.message.MessageService;\r\nimport net.gvsun.lims.service.operation.LaboratoryReportService;\r\nimport net.gvsun.lims.service.operation.OperationService;\r\nimport net.gvsun.lims.service.reports.LabWorkerService;\r\nimport net.gvsun.lims.service.reservation.credit.CreditOptionService;\r\nimport net.gvsun.lims.service.system.SchoolAcademyService;\r\nimport net.gvsun.lims.service.system.SystemBuildService;\r\nimport net.gvsun.lims.service.system.SystemService;\r\nimport net.gvsun.lims.service.system.iot.IotService;\r\nimport net.gvsun.lims.service.timetable.OuterApplicationService;\r\nimport net.gvsun.lims.service.visualization.VisualizationService;\r\nimport net.gvsun.lims.utils.util.HttpClientUtil;\r\nimport net.gvsun.lims.utils.util.JsonDateValueProcessor;\r\nimport net.sf.json.JSONArray;\r\nimport net.sf.json.JSONObject;\r\nimport net.sf.json.JsonConfig;\r\nimport org.hibernate.SQLQuery;\r\nimport org.hibernate.Session;\r\nimport org.hibernate.SessionFactory;\r\nimport org.hibernate.cfg.Configuration;\r\nimport org.hibernate.criterion.CriteriaSpecification;\r\nimport org.springframework.beans.factory.annotation.Autowired;\r\nimport org.springframework.beans.factory.annotation.Qualifier;\r\nimport org.springframework.stereotype.Controller;\r\nimport org.springframework.transaction.annotation.Transactional;\r\nimport org.springframework.web.bind.WebDataBinder;\r\nimport org.springframework.web.bind.annotation.*;\r\nimport org.springframework.web.client.RestTemplate;\r\nimport org.springframework.web.servlet.ModelAndView;\r\n\r\nimport javax.persistence.EntityManager;\r\nimport javax.persistence.PersistenceContext;\r\nimport javax.persistence.Query;\r\nimport javax.servlet.http.HttpServletRequest;\r\nimport javax.servlet.http.HttpServletResponse;\r\nimport java.io.*;\r\nimport java.math.BigDecimal;\r\nimport java.net.*;\r\nimport java.text.DateFormat;\r\nimport java.text.NumberFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\n\r\n@Controller(\"LabRoomController\")\r\n@SessionAttributes({\"selected_academy\", \"isAudit\"})\r\n@RequestMapping(\"/labRoom\")\r\npublic class LabRoomController {\r\n\r\n    @Autowired\r\n    LabRoomDAO labRoomDAO;\r\n    @Autowired\r\n    LabRoomFurnitureDAO labRoomFurnitureDAO;\r\n    @Autowired\r\n    LabRoomFurnitureService labRoomFurnitureService;\r\n    @Autowired\r\n    OuterApplicationService outerApplicationService;\r\n    @Autowired\r\n    AuditServerFeign auditServerFeign;\r\n    @Autowired\r\n    LabWorkerTrainingService labWorkerTrainingService;\r\n    @Autowired\r\n    IotService iotService;\r\n    @Autowired\r\n    LabRoomLendingDAO labRoomLendingDAO;\r\n    @Autowired\r\n    LabRoomLendingResultDAO labRoomLendingResultDAO;\r\n    @Autowired\r\n    LabWorkerTrainingDAO labWorkerTrainingDAO;\r\n    @Autowired\r\n    RemoteOpenDoorDAO remoteOpenDoorDAO;\r\n    @Autowired\r\n    CreditOptionDAO creditOptionDAO;\r\n    @Autowired\r\n    ViewUseOfLcDAO viewUseOfLcDAO;\r\n    @Autowired\r\n    private LabReservationService labReservationService;\r\n    @Autowired\r\n    RefuseItemBackupDAO refuseItemBackupDAO;\r\n    @Autowired\r\n    LabRoomLimitTimeDAO labRoomLimitTimeDAO;\r\n    @Autowired\r\n    private LabRelevantConfigDAO labRelevantConfigDAO;\r\n    @Autowired\r\n    private SystemCampusDAO systemCampusDAO;\r\n    @Autowired\r\n    private LaboratoryReportService laboratoryReportService;\r\n    @Autowired\r\n    private SchoolCourseInfoJPA schoolCourseInfoJPA;\r\n    private RestTemplate restTemplate;\r\n\r\n    //注入RestTemplate\r\n    @Autowired\r\n    @Qualifier(\"datasourceRestTemplate\")\r\n    public void setRestTemplate(RestTemplate restTemplate) {\r\n        this.restTemplate = restTemplate;\r\n    }\r\n\r\n    @InitBinder\r\n    public void initBinder(WebDataBinder binder, HttpServletRequest request) { // Register\r\n        // //\r\n        // static\r\n        // //\r\n        // property\r\n        // //\r\n        // editors.\r\n        binder.registerCustomEditor(java.util.Calendar.class,\r\n                new org.skyway.spring.util.databinding.CustomCalendarEditor());\r\n        binder.registerCustomEditor(\r\n                byte[].class,\r\n                new org.springframework.web.multipart.support.ByteArrayMultipartFileEditor());\r\n        binder.registerCustomEditor(Boolean.class,\r\n                new org.skyway.spring.util.databinding.EnhancedBooleanEditor(\r\n                        true));\r\n        binder.registerCustomEditor(java.math.BigDecimal.class,\r\n                new org.skyway.spring.util.databinding.NaNHandlingNumberEditor(\r\n                        java.math.BigDecimal.class, true));\r\n        binder.registerCustomEditor(Integer.class,\r\n                new org.skyway.spring.util.databinding.NaNHandlingNumberEditor(\r\n                        Integer.class, true));\r\n        binder.registerCustomEditor(java.util.Date.class,\r\n                new org.skyway.spring.util.databinding.CustomDateEditor());\r\n        binder.registerCustomEditor(String.class,\r\n                new org.skyway.spring.util.databinding.StringEditor());\r\n        binder.registerCustomEditor(Long.class,\r\n                new org.skyway.spring.util.databinding.NaNHandlingNumberEditor(\r\n                        Long.class, true));\r\n        binder.registerCustomEditor(Double.class,\r\n                new org.skyway.spring.util.databinding.NaNHandlingNumberEditor(\r\n                        Double.class, true));\r\n    }\r\n\r\n    @PersistenceContext\r\n    private EntityManager entityManager;\r\n    @Autowired\r\n    private ShareService shareService;\r\n    @Autowired\r\n    private SystemService systemService;\r\n    @Autowired\r\n    private LabRoomService labRoomService;\r\n    @Autowired\r\n    CDictionaryService cDictionaryService;\r\n    @Autowired\r\n    private LabCenterService labCenterService;\r\n    @Autowired\r\n    private LabBaseService labBaseService;\r\n    @Autowired\r\n    private SchoolAcademyService schoolAcademyService;\r\n    @Autowired\r\n    SoftwareDAO softwareDAO;\r\n    @Autowired\r\n    SoftwareRoomRelatedDAO softwareRoomRelatedDAO;\r\n    @Autowired\r\n    SoftwareService softwareService;\r\n    @Autowired\r\n    LabRoomDeviceService labRoomDeviceService;\r\n    @Autowired\r\n    CommonServerDAO commonServerDAO;\r\n    @Autowired\r\n    OperationItemDAO operationItemDAO;\r\n    @Autowired\r\n    CDictionaryDAO cDictionaryDAO;\r\n    @Autowired\r\n    LabRoomAgentDAO labRoomAgentDAO;\r\n    @Autowired\r\n    UserDAO userDAO;\r\n    @Autowired\r\n    LabRoomAdminDAO labRoomAdminDAO;\r\n    @Autowired\r\n    AuthorityDAO authorityDAO;\r\n    @Autowired\r\n    SchoolDeviceService schoolDeviceService;\r\n    @Autowired\r\n    LabRoomDeviceDAO labRoomDeviceDAO;\r\n    @Autowired\r\n    LabAnnexService labAnnexService;\r\n    @Autowired\r\n    LabRoomReservationService labRoomReservationService;\r\n    @Autowired\r\n    MessageService messageService;\r\n    @Autowired\r\n    LabWorkerService labWorkerService;\r\n    @Autowired\r\n    LabWorkerDAO labWorkerDAO;\r\n    @Autowired\r\n    LabRoomPermitUserDAO labRoomPermitUserDAO;\r\n    @Autowired\r\n    LabRoomTrainingPeopleDAO labRoomTrainingPeopleDAO;\r\n    @Autowired\r\n    LabRoomTrainingDAO labRoomTrainingDAO;\r\n    @Autowired\r\n    CommonDocumentService commonDocumentService;\r\n    @Autowired\r\n    LabRoomDeviceReservationCreditService labRoomDeviceReservationCreditService;\r\n    @Autowired\r\n    OperationService operationService;\r\n    @Autowired\r\n    CreditOptionService creditOptionService;\r\n    @Autowired\r\n    private SystemBuildService systemBuildService;\r\n    @Autowired\r\n    private VisualizationService visualizationService;\r\n    private ClientDatabaseContext clientDatabaseContext;\r\n    @Autowired\r\n    public void Test(ClientDatabaseContext clientDatabaseContext) {\r\n        this.clientDatabaseContext = clientDatabaseContext;\r\n    }\r\n    @Autowired\r\n    private OperationItemJPA operationItemJPA;\r\n    /**\r\n     * 实验室列表\r\n     * <p>\r\n     * author hly 2015.07.28\r\n     */\r\n    @RequestMapping(\"/listLabRoom\")\r\n    public ModelAndView listLabRoom(@RequestParam int currpage, int orderBy, int type,\r\n                                    @ModelAttribute LabRoom labRoom,\r\n                                    @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        int pageSize = CommonConstantInterface.INT_PAGESIZE;\r\n        int totalRecords = 0;\r\n        if (type == ConstantInterface.LAB_FOR_ROOM) {// 实验室\r\n            List<LabRoom> listLabRoom = labRoomService.findLabRoomByLabCenter(currpage, pageSize, 1, labRoom, orderBy, request, acno);\r\n            mav.addObject(\"listLabRoom\", listLabRoom);\r\n            List<LabRoomVO> labRoomVOList = labRoomService.getLabRoomVOList(listLabRoom);\r\n            totalRecords = labRoomService.findLabRoomByLabCenter(null, null, 1, labRoom, 9, request, acno).size();\r\n            mav.addObject(\"labRoomVOList\", labRoomVOList);\r\n            mav.setViewName(\"labroom/lab/lab_room/listLabRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_WORKSPACE) {// 工作室\r\n            totalRecords = labRoomService.findLabRoomByLabCenter(null, null, 2, labRoom, 9, request, acno).size();\r\n            mav.addObject(\"listLabWorkRoom\", labRoomService.findLabRoomByLabCenter(currpage, pageSize, 2, labRoom, orderBy, request, acno));\r\n            mav.setViewName(\"labroom/lab/lab_workroom/listLabWorkRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_MEETING) {// 会议室,哈工大项目则改为教室\r\n            totalRecords = labRoomService.findLabRoomByLabCenter(null, null, 3, labRoom, 9, request, acno).size();\r\n            mav.addObject(\"listLabMeetingRoom\", labRoomService.findLabRoomByLabCenter(currpage, pageSize, 3, labRoom, orderBy, request, acno));\r\n            mav.setViewName(\"labroom/lab/lab_meeting/listLabMeetingRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_CLASSROOM) {// 班级\r\n            totalRecords = labRoomService.findLabRoomByLabCenter(null, null, 4, labRoom, 9, request, acno).size();\r\n            mav.addObject(\"listClassRoom\", labRoomService.findLabRoomByLabCenter(currpage, pageSize, 4, labRoom, orderBy, request, acno));\r\n            mav.setViewName(\"labroom/lab/lab_room/listClassRoom.jsp\");\r\n        }\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        mav.addObject(\"pageModel\",\r\n                shareService.getPage(currpage, pageSize, totalRecords));\r\n\r\n        // 决定升序还是降序\r\n        boolean asc = true;\r\n        if (orderBy < 10) {\r\n            asc = false;\r\n        }\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            mav.addObject(\"newServer\", \"true\");\r\n        } else {\r\n            mav.addObject(\"newServer\", pConfigDTO.newServer);\r\n        }\r\n\r\n        mav.addObject(\"asc\", asc);\r\n        mav.addObject(\"orderBy\", orderBy);\r\n        mav.addObject(\"worker\", request.getParameter(\"worker\"));\r\n        mav.addObject(\"area\", request.getParameter(\"area\"));\r\n        mav.addObject(\"searchflg\", request.getParameter(\"searchflg\"));\r\n        mav.addObject(\"searchflg1\", request.getParameter(\"searchflg1\"));\r\n        mav.addObject(\"searchflag2\", request.getParameter(\"searchflag2\"));\r\n        // 有无多媒体\r\n        mav.addObject(\"isMultimedia\", shareService.getCDictionaryData(\"c_is_multimedia\"));\r\n        //读取左侧栏显示配置文件\r\n        mav.addObject(\"baseManage\", pConfigDTO.baseManage);\r\n        //获取数据源\r\n        mav.addObject(\"project\", pConfigDTO.PROJECT_NAME);\r\n        //实验中心下拉框\r\n        mav.addObject(\"listLabCenter\", labCenterService.findAllCenters());\r\n        mav.addObject(\"type\", type);\r\n        mav.addObject(\"page\", currpage);\r\n        // 获取权限等级\r\n        String auth = request.getSession().getAttribute(\"selected_role\").toString();\r\n        int authLevel = shareService.getLevelByAuthName(auth);\r\n        mav.addObject(\"authLevel\", authLevel);\r\n        // 当前用户\r\n        mav.addObject(\"username\", shareService.getUserDetail().getUsername());\r\n\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 导出实验室列表\r\n     * author lay 2019-03-24\r\n     */\r\n    @RequestMapping(\"/exportLabRoomList\")\r\n    public void exportLabRoomList(HttpServletRequest request, HttpServletResponse response, int orderBy, @ModelAttribute LabRoom labRoom, @ModelAttribute(\"selected_academy\") String acno)throws Exception{\r\n        List<LabRoom> listLabRoom = labRoomService.findLabRoomByLabCenter(null, null, 1, labRoom, orderBy, request, acno);\r\n        labRoomService.exportLabRoomList(request,response,listLabRoom);\r\n    }\r\n\r\n    /************************************************************\r\n     * Description：实验室可开门列表页面\r\n     * author 刘博越\r\n     * date 2019.5.29\r\n     ************************************************************/\r\n    @RequestMapping(\"/listLabRoomOpenDoor\")\r\n    public ModelAndView listLabRoomOpenDoor(@RequestParam int currpage,\r\n                                            @ModelAttribute LabRoom labRoom,\r\n                                            @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = CommonConstantInterface.INT_PAGESIZE;\r\n        int totalRecords = 0;\r\n        // 当前用户\r\n        String username = shareService.getUserDetail().getUsername();\r\n        mav.addObject(\"username\", username);\r\n\r\n        totalRecords = labRoomService.findLabRoomOpenDoorByLabCenter(null, null, labRoom, username, request, acno).size();\r\n        List<LabRoom> listLabRoom = labRoomService.findLabRoomOpenDoorByLabCenter(1, 20, labRoom, username, request, acno);\r\n        mav.addObject(\"listLabRoom\", listLabRoom);\r\n        mav.setViewName(\"labroom/lab/lab_room/listLabRoomOpenDoor.jsp\");\r\n\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        mav.addObject(\"pageModel\", shareService.getPage(currpage, pageSize, totalRecords));\r\n\r\n        mav.addObject(\"page\", currpage);\r\n\r\n        return mav;\r\n    }\r\n\r\n    /************************************************************\r\n     * Description：实验室与设备联动查询\r\n     * author 廖文辉\r\n     * date 2018.9.5\r\n     ************************************************************/\r\n    @RequestMapping(\"findLabAnnexByLabCenter\")\r\n    @ResponseBody\r\n    public Map<String, String> findLabAnnexByLabCenter(@RequestParam String labCenter) {\r\n        Map<String, String> map = new HashMap<>();\r\n        String labAnnexValue = labAnnexService.findLabAnnexByLabCenter(labCenter);\r\n        map.put(\"labAnnex\", labAnnexValue);\r\n        return map;\r\n    }\r\n\r\n    /**\r\n     * Description 编辑实验分室\r\n     *\r\n     * @param type\r\n     * @param labRoomId\r\n     * @param acno      return\r\n     *                  author 陈乐为 2018-9-27\r\n     */\r\n    @RequestMapping(\"/editLabRoom\")\r\n    public ModelAndView editLabRoom(@RequestParam int labRoomId, int type, @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request, int page) {\r\n        ModelAndView mav = new ModelAndView();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        if (labRoomId > 0) {\r\n            LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(labRoomId);\r\n            mav.addObject(\"labRoom\", labRoom);\r\n            // 楼层名\r\n            if (labRoom.getSystemBuild() != null && !\"\".equals(labRoom.getSystemBuild().getBuildNumber())) {\r\n                List<SystemFloorPic> systemFloorPics = visualizationService.findSystemFloorPic(labRoom.getSystemBuild().getBuildNumber(), null);\r\n                mav.addObject(\"floors\", systemFloorPics);\r\n            }\r\n        } else {\r\n            mav.addObject(\"labRoom\", new LabRoom());\r\n        }\r\n//        mav.addObject(\"labRoomId\",labRoomId);\r\n        //读取左侧栏显示配置文件\r\n        mav.addObject(\"annexManage\", pConfigDTO.annexManage);\r\n        mav.addObject(\"baseManage\", pConfigDTO.baseManage);\r\n        if (pConfigDTO.annexManage) {\r\n            List<LabAnnex> labAnnexList = new ArrayList<>();\r\n            if (labRoomId != 0) {\r\n                if (labRoomService.findLabRoomByPrimaryKey(labRoomId).getLabAnnex() != null) {\r\n                    LabAnnex labAnnex = labAnnexService.findLabAnnexByPrimaryKey(labRoomService.findLabRoomByPrimaryKey(labRoomId).getLabAnnex().getId());\r\n                    labAnnexList.add(labAnnex);\r\n                } else if (labRoomService.findLabRoomByPrimaryKey(labRoomId).getLabCenter() != null) {\r\n                    labAnnexList = labAnnexService.findLabAnnexByLabCenter2(labRoomService.findLabRoomByPrimaryKey(labRoomId).getLabCenter().getId());\r\n                }\r\n\r\n            } else {\r\n                labAnnexList = labAnnexService.findLabAnnexByLabType(-1, acno);\r\n                ;\r\n            }\r\n            mav.addObject(\"labAnnexList\", labAnnexList);\r\n        }\r\n        if (pConfigDTO.baseManage) {\r\n            List<LabAnnex> labBaseList = labAnnexService.findLabAnnexByLabType(4, acno);\r\n            mav.addObject(\"labBaseList\", labBaseList);\r\n        }\r\n        mav.addObject(\"stationNum\", pConfigDTO.stationNum);\r\n        mav.addObject(\"schoolName\", pConfigDTO.getSchoolName());\r\n        mav.addObject(\"project\", pConfigDTO.PROJECT_NAME);\r\n\r\n        // 实验室类型\r\n        mav.addObject(\"labRoomTypes\", shareService.getCDictionaryData(\"c_lab_room_type\"));\r\n        // 实验室分类\r\n        mav.addObject(\"labRoomSorts\", shareService.getCDictionaryData(\"c_lab_room_sort\"));\r\n        // 有无多媒体\r\n        mav.addObject(\"isMultimedia\", shareService.getCDictionaryData(\"c_is_multimedia\"));\r\n        // 实验室类别\r\n        mav.addObject(\"labRoomClassifications\", shareService.getCDictionaryData(\"c_lab_room_classification\"));\r\n        // 实验室地点\r\n//        mav.addObject(\"listSystemRoom\", systemRoomService.findAllSystemRoomByQuery(new SystemRoom(), 1, -1));\r\n        //实验室性质\r\n        mav.addObject(\"CDictionaryNature\", shareService.getCDictionaryData(\"c_lab_room_nature_type\"));\r\n        // 学科\r\n        mav.addObject(\"subject12s\", systemService.getAllSystemSubject12(1, -1)); // 学科数据(12版)\r\n//        if(type==ConstantInterface.LAB_FOR_MEETING){\r\n//            //管理员\r\n//            List<User> userList=labRoomService.findUserByAcademy(labRoomId,acno);\r\n//            mav.addObject(\"userList\",userList);\r\n//        }\r\n        // 中心\r\n        LabCenter labCenter = new LabCenter();\r\n        labCenter.setSchoolAcademy(shareService.findSchoolAcademyByPrimaryKey(acno));\r\n        mav.addObject(\"listLabCenter\", labCenterService.findAllLabCenterByQuery(request, labCenter, 1, -1));\r\n        mav.addObject(\"page\", page);\r\n        //校区\r\n        Set<SystemCampus> systemCampusSet = systemCampusDAO.findAllSystemCampuss();\r\n        mav.addObject(\"systemCampusSet\", systemCampusSet);\r\n        // 楼宇\r\n        List<SystemBuild> systemBuilds = systemBuildService.finAllSystemBuilds();\r\n        mav.addObject(\"systemBuilds\", systemBuilds);\r\n        if (type == ConstantInterface.LAB_FOR_ROOM) {\r\n            mav.setViewName(\"labroom/lab/lab_room/editLabRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_WORKSPACE) {\r\n            mav.setViewName(\"labroom/lab/lab_workroom/editLabWorkRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_MEETING) {\r\n            //哈工大项目原本没有教室这一模块，会议室模块换成教室模块\r\n            mav.setViewName(\"labroom/lab/lab_meeting/editLabMeetingRoom.jsp\");\r\n        } else if (type == ConstantInterface.LAB_FOR_CLASSROOM) {\r\n            mav.setViewName(\"labroom/lab/lab_room/editClassRoom.jsp\");\r\n        }\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * Description 保存实验分室\r\n     *\r\n     * @param labRoom\r\n     * @param type\r\n     * @param request return\r\n     *                author 陈乐为 2018-9-27\r\n     */\r\n    @RequestMapping(\"/saveLabRoom\")\r\n    public ModelAndView saveLabRoom(@ModelAttribute LabRoom labRoom, int type,\r\n                                    HttpServletRequest request, @ModelAttribute(\"selected_academy\") String acno, int page) {\r\n        ModelAndView mav = new ModelAndView();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        //开放范围\r\n\r\n        LabRoom labRoom1 = labRoomDAO.findLabRoomByPrimaryKey(labRoom.getId());\r\n        if (labRoom1 == null) {\r\n            labRoom1 = new LabRoom();\r\n            //周末是否允许预约默认为否\r\n            labRoom1.setOpenInweekend(0);\r\n        }\r\n        /////////////////////////////////编辑字段开始///////////////////////////////////\r\n        // 实验室编号\r\n        labRoom1.setLabRoomNumber(labRoom.getLabRoomNumber());\r\n        // 实验室名称\r\n        labRoom1.setLabRoomName(labRoom.getLabRoomName());\r\n        //实验室英文名称\r\n        labRoom1.setLabRoomEnName(labRoom.getLabRoomEnName());\r\n        // 所属中心\r\n        //labRoom1.setLabCenter(labRoom.getLabCenter());\r\n        if (!EmptyUtil.isObjectEmpty(labRoom) && !EmptyUtil.isObjectEmpty(labRoom.getLabCenter())\r\n                && !EmptyUtil.isIntegerEmpty(labRoom.getLabCenter().getId())) {\r\n            labRoom1.setLabCenter(labCenterService.findLabCenterByPrimaryKey(labRoom.getLabCenter().getId()));\r\n        } else {\r\n            labRoom1.setLabCenter(null);\r\n        }\r\n        // 所属实验室\r\n        if (!EmptyUtil.isObjectEmpty(labRoom) && !EmptyUtil.isObjectEmpty(labRoom.getLabAnnex())\r\n                && !EmptyUtil.isIntegerEmpty(labRoom.getLabAnnex().getId())) {\r\n            labRoom1.setLabAnnex(labBaseService.findLabAnnexByPrimaryKey(labRoom.getLabAnnex().getId()));\r\n        } else {\r\n            labRoom1.setLabAnnex(null);\r\n        }\r\n        // 所属楼宇\r\n        labRoom1.setSystemBuild(labRoom.getSystemBuild());\r\n        // 所在楼层\r\n        labRoom1.setFloorNo(labRoom.getFloorNo());\r\n        //所属校区\r\n        labRoom1.setSystemCampus(labRoom.getSystemCampus());\r\n        // 浙江建设--所有实验室允许跨学院排课\r\n        if (\"zjcclims\".equals(pConfigDTO.PROJECT_NAME)) {\r\n            labRoom1.setIsOpen(1);\r\n        }\r\n        // 可预约工位数\r\n        //labRoom1.setLabRoomWorker(labRoom.getLabRoomWorker());\r\n        // 会议室信息\r\n        labRoom1.setLabRoomAddress(labRoom.getLabRoomAddress());\r\n        //////////////////////////////////页面附加信息/////////////////////////////////\r\n        // 基地\r\n        if (!EmptyUtil.isObjectEmpty(labRoom) && !EmptyUtil.isObjectEmpty(labRoom.getLabBase())\r\n                && !EmptyUtil.isIntegerEmpty(labRoom.getLabBase().getId())) {\r\n            labRoom1.setLabBase(labBaseService.findLabAnnexByPrimaryKey(labRoom.getLabBase().getId()));\r\n        } else {\r\n            labRoom1.setLabBase(null);\r\n        }\r\n        // 地点\r\n        if (labRoom.getSystemRoom() == null || EmptyUtil.isStringEmpty(labRoom.getSystemRoom().getRoomNumber())) {\r\n            labRoom1.setSystemRoom(null);\r\n        } else {\r\n            labRoom1.setSystemRoom(labRoom.getSystemRoom());\r\n        }\r\n        // 实验室等级\r\n        labRoom1.setLabRoomLevel(labRoom.getLabRoomLevel());\r\n\r\n        // 是否可预约\r\n        labRoom1.setIsOpen(labRoom.getIsOpen());\r\n        // 实验室类别\r\n        if (labRoom.getCDictionaryByLabRoomClassification() == null || labRoom.getCDictionaryByLabRoomClassification().getId() == null) {\r\n            labRoom1.setCDictionaryByLabRoomClassification(null);\r\n        } else {\r\n            labRoom1.setCDictionaryByLabRoomClassification(labRoom.getCDictionaryByLabRoomClassification());\r\n        }\r\n        // 建立时间\r\n        labRoom1.setLabRoomTimeCreate(labRoom.getLabRoomTimeCreate());\r\n        // 实验室容量\r\n        labRoom1.setLabRoomCapacity(labRoom.getLabRoomCapacity());\r\n        // 实验室性质\r\n        labRoom1.setLabRoomNature(labRoom.getLabRoomNature());\r\n        // 使用面积\r\n        labRoom1.setLabRoomArea(labRoom.getLabRoomArea());\r\n        // 实验室分类\r\n        if (labRoom.getCDictionaryByLabRoomSort() == null || labRoom.getCDictionaryByLabRoomSort().getId() == null) {\r\n            labRoom1.setCDictionaryByLabRoomSort(null);\r\n        } else {\r\n            labRoom1.setCDictionaryByLabRoomSort(labRoom.getCDictionaryByLabRoomSort());\r\n        }\r\n        // 实验室类型\r\n        if (labRoom.getCDictionaryByLabRoom() == null || labRoom.getCDictionaryByLabRoom().getId() == null) {\r\n            labRoom1.setCDictionaryByLabRoom(null);\r\n        } else {\r\n            labRoom1.setCDictionaryByLabRoom(labRoom.getCDictionaryByLabRoom());\r\n        }\r\n        // 有无多媒体\r\n        if (labRoom.getCDictionaryByIsMultimedia() == null || labRoom.getCDictionaryByIsMultimedia().getId() == null) {\r\n            labRoom1.setCDictionaryByIsMultimedia(null);\r\n        } else {\r\n            labRoom1.setCDictionaryByIsMultimedia(labRoom.getCDictionaryByIsMultimedia());\r\n        }\r\n        // 所属学科\r\n        if (labRoom.getSystemSubject12() == null || labRoom.getSystemSubject12().getSNumber() == null\r\n                || \"\".equals(labRoom.getSystemSubject12().getSNumber())) {\r\n            labRoom1.setSystemSubject12(null);\r\n        } else {\r\n            labRoom1.setSystemSubject12(labRoom.getSystemSubject12());\r\n        }\r\n        // 是否校企共建\r\n        labRoom1.setIsSchoolEnterpriseCooperation(labRoom.getIsSchoolEnterpriseCooperation());\r\n        // 是否生产性实验室\r\n        labRoom1.setIsRoductivity(labRoom.getIsRoductivity());\r\n        // 是否仿真实验室\r\n        labRoom1.setIsSimulation(labRoom.getIsSimulation());\r\n        // 实验室描述\r\n        labRoom1.setLabRoomIntroduction(labRoom.getLabRoomIntroduction());\r\n        // 规章制度\r\n        labRoom1.setLabRoomRegulations(labRoom.getLabRoomRegulations());\r\n        // 实验室注意事项\r\n        labRoom1.setLabRoomAttentions(labRoom.getLabRoomAttentions());\r\n        // 获奖信息\r\n        labRoom1.setLabRoomPrizeInformation(labRoom.getLabRoomPrizeInformation());\r\n        ///////////////////////////页面编辑字段结束///////////////////////////////////\r\n        ///////////////////////////关联更新数据开始///////////////////////////////////\r\n        LabCenter labCenter = new LabCenter();\r\n        if (labRoom.getLabCenter() != null) {\r\n            labCenter = labCenterService.findLabCenterByPrimaryKey(labRoom.getLabCenter().getId());\r\n        }\r\n        // 学院\r\n        if (labCenter != null && labCenter.getSchoolAcademy() != null\r\n                && labCenter.getSchoolAcademy().getAcademyNumber() != null) {\r\n            labRoom1.setSchoolAcademy(labCenter.getSchoolAcademy());\r\n        } else if (acno != null && !\"-1\".equals(acno)) {\r\n            SchoolAcademy academy = shareService.findSchoolAcademyByPrimaryKey(acno);\r\n            labRoom1.setSchoolAcademy(academy);\r\n            for (LabCenter center : academy.getLabCenters()) {// 会议室等新建时没有所属中心项，后台用数据\r\n                labRoom1.setLabCenter(center);\r\n            }\r\n//            labRoom1.setSchoolAcademy(shareService.findSchoolAcademyByPrimaryKey(acno));\r\n        }\r\n        ///////////////////////////关联更新数据结束///////////////////////////////////\r\n\r\n//        // 审核\r\n//        if(labRoom.getCDictionaryByIsAudit()==null || labRoom.getCDictionaryByIsAudit().getId()==null) {\r\n//            labRoom1.setCDictionaryByIsAudit(null);\r\n//        }else {\r\n//            labRoom1.setCDictionaryByIsAudit(labRoom.getCDictionaryByIsAudit());\r\n//        }\r\n//        // 借用\r\n//        if(labRoom.getCDictionaryByAllowLending()==null || labRoom.getCDictionaryByAllowLending().getId()==null) {\r\n//            labRoom1.setCDictionaryByAllowLending(null);\r\n//        }else {\r\n//            labRoom1.setCDictionaryByAllowLending(labRoom.getCDictionaryByAllowLending());\r\n//        }\r\n//        // 安全准入\r\n//        if(labRoom.getCDictionaryByAllowSecurityAccess()==null || labRoom.getCDictionaryByAllowSecurityAccess().getId()==null) {\r\n//            labRoom1.setCDictionaryByAllowSecurityAccess(null);\r\n//        }else {\r\n//            labRoom1.setCDictionaryByAllowSecurityAccess(labRoom.getCDictionaryByAllowSecurityAccess());\r\n//        }\r\n//        // 培训形式\r\n//        if(labRoom.getCDictionaryByTrainType()==null || labRoom.getCDictionaryByTrainType().getId()==null) {\r\n//            labRoom1.setCDictionaryByTrainType(null);\r\n//        }else {\r\n//            labRoom1.setCDictionaryByTrainType(labRoom.getCDictionaryByTrainType());\r\n//        }\r\n        if (labRoom.getId() == null) {\r\n            labRoom1.setIsUsed(1);\r\n            labRoom1.setReservationNumber(1);\r\n        }\r\n        if (type == ConstantInterface.LAB_FOR_ROOM) {\r\n            labRoom1.setLabCategory(1);\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=1\");\r\n        } else if (type == ConstantInterface.LAB_FOR_WORKSPACE) {\r\n            labRoom1.setLabCategory(2);\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=2\");\r\n        } else if (type == ConstantInterface.LAB_FOR_MEETING) {\r\n            labRoom1.setLabCategory(3);\r\n            CDictionary cDictionary = cDictionaryDAO.findCDictionaryById(labRoom.getCDictionaryByIsMultimedia().getId());\r\n            labRoom1.setCDictionaryByIsMultimedia(cDictionary);\r\n//            labRoom1=labRoomService.saveLabRoom(labRoom1);\r\n//            String username=request.getParameter(\"labRoomAdmin\");\r\n//            User user=userDAO.findUserByUsername(username);\r\n//            LabRoomAdmin labRoomAdmin=new LabRoomAdmin();\r\n//            labRoomAdmin.setUser(user);\r\n//            labRoomAdmin.setLabRoom(labRoom);\r\n//            labRoomAdmin.setTypeId(1);\r\n//            labRoomAdminDAO.store(labRoomAdmin);\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=3\");\r\n        } else if (type == ConstantInterface.LAB_FOR_CLASSROOM) {\r\n            labRoom1.setLabCategory(4);\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=4\");\r\n        }\r\n        labRoomService.saveLabRoom(labRoom1);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 删除实验室数据\r\n     * <p>\r\n     * author hly 2015.07.28\r\n     */\r\n    @RequestMapping(\"/deleteLabRoom\")\r\n    public ModelAndView deleteLabRoom(@RequestParam int labRoomId, int type, int page,Integer deviceType) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(labRoomId);\r\n        room.setIsUsed(0);// 假删\r\n        labRoomService.saveLabRoom(room);\r\n        //释放绑定的设备\r\n        List<LabRoomDevice> labRoomDevices = labRoomDeviceService.findLabRoomDeviceByRoomId(labRoomId,deviceType);\r\n        for (LabRoomDevice labRoomDevice : labRoomDevices) {\r\n            labRoomDeviceDAO.remove(labRoomDevice);\r\n            labRoomDeviceDAO.flush();\r\n        }\r\n        // labRoomService.deleteLabRoom(labRoomId); 真删 由于和实验项目的外键关系，会报错删不掉\r\n        if (type == ConstantInterface.LAB_FOR_ROOM) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=1\");\r\n        } else if (type == ConstantInterface.LAB_FOR_WORKSPACE) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=2\");\r\n        } else if (type == ConstantInterface.LAB_FOR_MEETING) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=3\");\r\n        } else if (type == ConstantInterface.LAB_FOR_CLASSROOM) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoom?currpage=\" + page + \"&orderBy=9&type=4\");\r\n        }\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 实验室工作人员列表\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/listLabWorker\")\r\n    public ModelAndView listLabWorker(HttpServletRequest request, @ModelAttribute(\"selected_academy\") String acno, @RequestParam int currpage,\r\n                                      @ModelAttribute LabWorker labWorker) {\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = CommonConstantInterface.INT_PAGESIZE;\r\n        //编辑权限-超管和实验中心主任可以编辑所有\r\n        String userRole = request.getSession().getAttribute(\"selected_role\").toString();\r\n        int totalRecords = labRoomService.findAllLabWorkerByQuery(1, -1,\r\n                labWorker, acno, userRole).size();\r\n\r\n        mav.addObject(\"listLabWorker\", labRoomService.findAllLabWorkerByQuery(\r\n                currpage, pageSize, labWorker, acno, userRole));\r\n        mav.addObject(\"pageModel\",\r\n                shareService.getPage(currpage, pageSize, totalRecords));\r\n        boolean editAuth = false;\r\n        if ((\"ROLE_SUPERADMIN\").equals(userRole) || (\"ROLE_EXCENTERDIRECTOR\").equals(userRole)) {\r\n            editAuth = true;\r\n        }\r\n        //用户可以编辑自身\r\n        User user = shareService.getUserDetail();\r\n        String loginUser = user.getCname() + \"(\" + user.getUsername() + \")\";\r\n        mav.addObject(\"loginUser\", loginUser);\r\n        mav.addObject(\"editAuth\", editAuth);\r\n        mav.setViewName(\"labroom/lab/lab_worker/listLabWorker.jsp\");\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", currpage);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 新建实验室工作人员\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/newLabWorker\")\r\n    public ModelAndView newLabWorker(\r\n            @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request, int page) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        mav.addObject(\"labWorker\", new LabWorker());\r\n        mav.addObject(\"listLabCenter\", labCenterService\r\n                .findAllLabCenterByQuery(request, new LabCenter(), 1, -1));\r\n        // mav.addObject(\"listUser\",\r\n        // outerApplicationService.getTimetableTearcherMap());\r\n        String userRole = request.getSession().getAttribute(\"selected_role\").toString();\r\n//        mav.addObject(\"listUser\",\r\n//                outerApplicationService.getAllTearchersMap(acno, userRole));\r\n        mav.addObject(\"listAcademicDegree\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_academic_degree\")); // 文化程度\r\n        mav.addObject(\"listSubject\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_subject\")); // 所属学科\r\n        mav.addObject(\"listSpecialtyDuty\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_specialty_duty\")); // 专业职称\r\n        mav.addObject(\"listCategoryStaff\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_category_staff\")); // 人员类别\r\n        mav.addObject(\"listEmployment\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_employment\")); // 聘任情况\r\n        mav.addObject(\"listReward\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_reward\")); // 成果奖励\r\n        mav.addObject(\"listForeignLanguage\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_foreign_language\")); // 外语语种\r\n        mav.addObject(\r\n                \"listForeignLanguageLevel\",\r\n                shareService\r\n                        .getCDictionaryData(\"category_lab_worker_foreign_language_level\")); // 外语水平\r\n        mav.addObject(\"listDegree\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_degree\")); // 学位\r\n        mav.addObject(\"listMainWork\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_main_work\")); // 主要工作\r\n        mav.addObject(\"listPaperLevel\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_paper_level\")); // 论文级别\r\n        mav.addObject(\"listBookLevel\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_book_level\")); // 著作级别\r\n        mav.addObject(\"listCategoryExpert\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_category_expert\")); // 专家类别\r\n        mav.addObject(\"listSpecialtyDuty\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_specialty_duty\"));// 专业技术职务\r\n        mav.addObject(\"listLabRoom\", labRoomService.findLabRoomList());// 所属实训室\r\n        mav.addObject(\"page\", page);\r\n        //所有学院\r\n        List<SchoolAcademy> allSchoolAcademys = shareService.findAllSchoolAcademys();\r\n        mav.addObject(\"listSchoolAcademy\", allSchoolAcademys);\r\n        //页面标识，用于区分新建/编辑页面 1新建 2编辑\r\n        mav.addObject(\"pageIdentification\", 1);\r\n        mav.setViewName(\"labroom/lab/lab_worker/editLabWorker.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 编辑实验室工作人员\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/editLabWorker\")\r\n    public ModelAndView editLabWorker(@RequestParam int labWorkerId,\r\n                                      @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request, int page) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        LabWorker labWorker = labRoomService.findLabWorkerByPrimaryKey(labWorkerId);\r\n        mav.addObject(\"labWorker\",\r\n                labWorker);\r\n        mav.addObject(\"listLabCenter\", labCenterService\r\n                .findAllLabCenterByQuery(request, new LabCenter(), 1, -1));\r\n        mav.addObject(\"labWorkerUserName\", labWorker.getLwCodeCustom());\r\n        String userRole = request.getSession().getAttribute(\"selected_role\").toString();\r\n//        mav.addObject(\"listUser\",\r\n//                outerApplicationService.getAllTearchersMap(acno, userRole));\r\n        mav.addObject(\"listAcademicDegree\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_academic_degree\")); // 文化程度\r\n        mav.addObject(\"listSubject\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_subject\")); // 所属学科\r\n        mav.addObject(\"listSpecialtyDuty\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_specialty_duty\")); // 专业职称\r\n        mav.addObject(\"listCategoryStaff\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_category_staff\")); // 人员类别\r\n        mav.addObject(\"listEmployment\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_employment\")); // 聘任情况\r\n        mav.addObject(\"listReward\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_reward\")); // 成果奖励\r\n        mav.addObject(\"listForeignLanguage\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_foreign_language\")); // 外语语种\r\n        mav.addObject(\r\n                \"listForeignLanguageLevel\",\r\n                shareService\r\n                        .getCDictionaryData(\"category_lab_worker_foreign_language_level\")); // 外语水平\r\n        mav.addObject(\"listDegree\",\r\n                shareService.getCDictionaryData(\"category_lab_worker_degree\")); // 学位\r\n        mav.addObject(\"listMainWork\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_main_work\")); // 主要工作\r\n        mav.addObject(\"listPaperLevel\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_paper_level\")); // 论文级别\r\n        mav.addObject(\"listBookLevel\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_book_level\")); // 著作级别\r\n        mav.addObject(\"listCategoryExpert\", shareService\r\n                .getCDictionaryData(\"category_lab_worker_category_expert\")); // 专家类别\r\n        mav.addObject(\"listLabRoom\", labRoomService.findLabRoomList());// 所属实训室\r\n        mav.addObject(\"listSchoolAcademy\", schoolAcademyService.findAllSchoolAcademyByQuery(new SchoolAcademy(), -1, -1));//所属学院\r\n        mav.addObject(\"page\", page);\r\n        //页面标识，用于区分新建/编辑页面 1新建 2编辑\r\n        mav.addObject(\"pageIdentification\", 2);\r\n        mav.setViewName(\"labroom/lab/lab_worker/editLabWorker.jsp\");\r\n        return mav;\r\n    }\r\n    /**\r\n     * 查看实验室工作人员\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/viewLabWorker\")\r\n    public ModelAndView viewLabWorker(@RequestParam int labWorkerId,\r\n                                      @ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request, int page) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        LabWorker labWorker = labRoomService.findLabWorkerByPrimaryKey(labWorkerId);\r\n        mav.addObject(\"labWorker\",\r\n                labWorker);\r\n        mav.setViewName(\"labroom/lab/lab_worker/viewLabWorker.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 保存实验室工作人员数据\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/saveLabWorker\")\r\n    public String saveLabWorker(@ModelAttribute LabWorker labWorker, int page) {\r\n        labRoomService.saveLabWorker(labWorker);\r\n        return \"redirect:/labRoom/listLabWorker?currpage=\" + page;\r\n    }\r\n\r\n    /**\r\n     * 删除实验室工作人员\r\n     * <p>\r\n     * author hly 2015.07.29\r\n     */\r\n    @RequestMapping(\"/deleteLabWorker\")\r\n    public String deleteLabWorker(@RequestParam int labWorkerId, int page) {\r\n        if (labWorkerTrainingService.findLabWorkerTrainingDetailByLabWorkerId(\r\n                labWorkerId).isEmpty()) {\r\n            labRoomService.deleteLabWorker(labWorkerId);\r\n        }\r\n\r\n        return \"redirect:/labRoom/listLabWorker?currpage=\" + page;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：查看实验分室详情 作者：贺子龙 时间：2015-09-03\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/getLabRoom\")\r\n    public ModelAndView getLabRoom(@RequestParam Integer id, String labRoomName, @RequestParam int type,\r\n                                   @ModelAttribute SchoolDevice schoolDevice, OperationItem operationItem, ViewUseOfLc viewUseOfLc,\r\n                                   @ModelAttribute Software software, @RequestParam Integer currpage, HttpServletRequest request) {\r\n        // 新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        User user = shareService.getUser();\r\n        boolean flag = labRoomService.getLabRoomAdminReturn(id, user);\r\n        mav.addObject(\"flag\", flag);\r\n        // System.out.println(flag);\r\n        // id对应的实验分室信息\r\n        LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(id);\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        // 获取所有实验项目\r\n        List<OperationItem> ops =  operationService.findItemByQuery(null, labRoom.getId());\r\n        //Set<OperationItem> ops = labRoom.getOperationItems();\r\n        mav.addObject(\"operationItems\", ops);\r\n\r\n        // 获取課程\r\n        List<SchoolCourseInfo> sci =  schoolCourseInfoJPA.findByLabId(labRoom.getId());\r\n        //Set<OperationItem> ops = labRoom.getOperationItems();\r\n        mav.addObject(\"schoolCourseInfoList\", sci);\r\n        // 根据查询条件获取实验项目\r\n        List<OperationItem> itemList = operationService.findItemByQuery(operationItem, labRoom.getId());\r\n        mav.addObject(\"operationItem1\", itemList);\r\n\r\n        // 获取所有电脑使用记录\r\n        Set<ViewUseOfLc> allViewUseOfLcLists = viewUseOfLcDAO.findViewUseOfLcByLabRoomName(labRoomName);\r\n        mav.addObject(\"allViewUseOfLcLists\", allViewUseOfLcLists);\r\n        // 根据查询条件获取电脑使用记录\r\n        List<ViewUseOfLc> allViewUseOfLcList = labRoomDeviceService.findAllallViewUseOfLcListByLabRoomName(viewUseOfLc, labRoomName, request);\r\n        mav.addObject(\"allViewUseOfLcList\", allViewUseOfLcList);\r\n\r\n        // 实验室家具\r\n//        List<LabRoomFurniture> labRoomFurniture = labRoomFurnitureService.findLabRoomFurnitureByRooId(id);\r\n//        mav.addObject(\"labRoomFurniture\", labRoomFurniture);\r\n//        mav.addObject(\"labRoomFurnitures\", new LabRoomFurniture());\r\n        // 根据实验室查询实验室管理员\r\n        List<LabRoomAdmin> adminList = labRoomDeviceService.findLabRoomAdminByRoomId(id, 1);\r\n        mav.addObject(\"adminList\", adminList);\r\n        // 实验室物联管理员\r\n        List<LabRoomAdmin> agentAdmin = labRoomDeviceService.findLabRoomAdminByRoomId(id, 2);\r\n        mav.addObject(\"agentAdmin\", agentAdmin);\r\n        // 被授权人员\r\n        List<LabRoomAdmin> authorizeUsers = labRoomDeviceService.findLabRoomAdminByRoomId(id, 3);\r\n        mav.addObject(\"authorizeUsers\", authorizeUsers);\r\n        // 实验室管理员\r\n        mav.addObject(\"admin\", new LabRoomAdmin());\r\n        // 物联硬件\r\n        mav.addObject(\"agent\", new LabRoomAgent());\r\n        List<LabRoomAgent> agentList = labRoomService.findLabRoomAgentByRoomId(id);\r\n        mav.addObject(\"agentList\", agentList);\r\n        // 判断中控是否已经添加\r\n        for (LabRoomAgent agent : agentList) {\r\n            if (\"7\".equals(agent.getCDictionary().getCNumber())) {\r\n                mav.addObject(\"isCtrl\", true);\r\n            }\r\n        }\r\n        // 物联硬件类型\r\n        List<CDictionary> types = cDictionaryService.findallCType();\r\n        mav.addObject(\"types\", types);\r\n        // 物联硬件服务器\r\n        Set<CommonServer> serverList = commonServerDAO.findAllCommonServers();\r\n        mav.addObject(\"serverList\", serverList);\r\n\r\n        // 根据实验室id查询实验室软件\r\n        List<Software> softwareList = softwareService.findSoftwareByRoomId(id);\r\n        mav.addObject(\"softwareList\", softwareList);\r\n\r\n        // 根据实验分室id查询实验室设备\r\n        List<LabRoomDevice> labDeviceList = labRoomDeviceService.findLabRoomDeviceByRoomId(id,0);\r\n        mav.addObject(\"labDeviceList\", labDeviceList);\r\n        // 设备查询表单对象\r\n        mav.addObject(\"schoolDevice\", schoolDevice);\r\n        // 设备信息设置表单对象\r\n        mav.addObject(\"labRoomDevice\", new LabRoomDevice());\r\n        // 实验室家具\r\n        List<LabRoomDevice> labRoomFurnitureList = labRoomDeviceService.findLabRoomDeviceByRoomId(id,1);\r\n        mav.addObject(\"labRoomFurnitureList\", labRoomFurnitureList);\r\n        // 设备信息设置表单对象\r\n        mav.addObject(\"labRoomFurniture\", new LabRoomDevice());\r\n        mav.addObject(\"pageModel\", shareService.getPage(currpage, 1, 1));\r\n        mav.addObject(\"type\", type);\r\n        // 门禁\r\n        for (LabRoomAgent a : agentList) {\r\n            if (\"c_agent_type\".equals(a.getCDictionary().getCCategory()) && \"2\".equals(a.getCDictionary().getCNumber())) {\r\n                mav.addObject(\"Access\", a);\r\n            }\r\n        }\r\n        // 云台参数\r\n        mav.addObject(\"yuntai\", pConfigDTO.getYuntai());\r\n        //禁用时间段\r\n        // 实验室禁用时间段列表\r\n        mav.addObject(\"labRoomLimitTimes\",\r\n                labRoomLimitTimeDAO.executeQuery(\"select c from LabRoomLimitTime c where (c.type IS NULL OR c.type = 1) and c.labId= \" + id, 0, -1));\r\n        //开放设置\r\n        if (labRoom.getOpenInweekend() == null\r\n                || labRoom.getOpenInweekend() != null && labRoom.getOpenInweekend() == 0) {\r\n            mav.addObject(\"openInweekend\", 0);\r\n        } else {\r\n            mav.addObject(\"openInweekend\", 1);\r\n        }\r\n        if (labRoom.getStartHour() != null) {\r\n            Double startTime = labRoom.getStartHour().doubleValue();\r\n            Integer startHour = (int) Math.floor(startTime);\r\n            mav.addObject(\"startHour\", startHour);\r\n            Double startMinute = (startTime - startHour) * 60;\r\n            String result = new BigDecimal(startMinute.toString()).stripTrailingZeros().toPlainString();\r\n            mav.addObject(\"startMinute\", result);\r\n        } else {\r\n            mav.addObject(\"startHour\", -1);\r\n            mav.addObject(\"startMinute\", -1);\r\n        }\r\n        if (labRoom.getEndHour() != null) {\r\n            Double endTime = labRoom.getEndHour().doubleValue();\r\n            Integer endHour = (int) Math.floor(endTime);\r\n            mav.addObject(\"endHour\", endHour);\r\n            Double endMinute = (endTime - endHour) * 60;\r\n            String result = new BigDecimal(endMinute.toString()).stripTrailingZeros().toPlainString();\r\n            mav.addObject(\"endMinute\", result);\r\n        } else {\r\n            mav.addObject(\"endHour\", -1);\r\n            mav.addObject(\"endMinute\", -1);\r\n        }\r\n        if (labRoom.getStartHourInweekend() != null) {\r\n            Double startWeekendTime = labRoom.getStartHourInweekend().doubleValue();\r\n            Integer startWeekendHour = (int) Math.floor(startWeekendTime);\r\n            mav.addObject(\"startWeekendHour\", startWeekendHour);\r\n            Double startWeekendMinute = (startWeekendTime - startWeekendHour) * 60;\r\n            String result = new BigDecimal(startWeekendMinute.toString()).stripTrailingZeros().toPlainString();\r\n            mav.addObject(\"startWeekendMinute\", result);\r\n        } else {\r\n            mav.addObject(\"startWeekendHour\", -1);\r\n            mav.addObject(\"startWeekendMinute\", -1);\r\n        }\r\n        if (labRoom.getEndHourInweekend() != null) {\r\n            Double endWeekendTime = labRoom.getEndHourInweekend().doubleValue();\r\n            Integer endWeekendHour = (int) Math.floor(endWeekendTime);\r\n            mav.addObject(\"endWeekendHour\", endWeekendHour);\r\n            Double endWeekendMinute = (endWeekendTime - endWeekendHour) * 60;\r\n            String result = new BigDecimal(endWeekendMinute.toString()).stripTrailingZeros().toPlainString();\r\n            mav.addObject(\"endWeekendMinute\", result);\r\n        } else {\r\n            mav.addObject(\"endWeekendHour\", -1);\r\n            mav.addObject(\"endWeekendMinute\", -1);\r\n        }\r\n        // 权限等级\r\n        int authLevel = shareService.getLevelByAuthName(request.getSession().getAttribute(\"selected_role\").toString());\r\n        mav.addObject(\"authLevel\", authLevel);\r\n        List<Object[]> logs = labRoomService.getRefuseItemBackup(id);\r\n        mav.addObject(\"logs\", logs);\r\n        mav.addObject(\"newServer\", pConfigDTO.getNewServer());\r\n        mav.addObject(\"proj_name\", pConfigDTO.getPROJECT_NAME());\r\n        //如果是哈工大项目 会议室模块改教室模块\r\n        if (type == 3 && \"hitszlims\".equals(pConfigDTO.getPROJECT_NAME())) {\r\n            mav.setViewName(\"labroom/lab/lab_room/labMeetingRoomDetail.jsp\");\r\n        } else {\r\n            mav.setViewName(\"labroom/lab/lab_room/labRoomDetail.jsp\");\r\n        }\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存实验室项目卡 作者：贺子龙 时间：2015-09-07\r\n     ****************************************************************************/\r\n    @ResponseBody\r\n    @RequestMapping(\"/saveLabRoomOperationItem\")\r\n    public String saveLabRoomOperationItem(@RequestParam String[] array, @RequestParam Integer roomId) {\r\n        // roomId对应的实验室\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n\r\n        labRoomService.saveLabRoomOperationItem(room, array);\r\n        return \"success\";\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验项目卡 作者：贺子龙 时间：2015-09-07\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomOperationItem\")\r\n    public ModelAndView deleteLabRoomOperationItem(\r\n            @RequestParam Integer roomId, @RequestParam int type, Integer id) {\r\n        System.out.println(\"delete coming in\");\r\n        ModelAndView mav = new ModelAndView();\r\n        // roomId对应的实验室\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n        // id对应的实验项目卡\r\n        OperationItem m = operationItemDAO.findOperationItemByPrimaryKey(id);\r\n        System.out.println(\"**********\" + m.getLpName());\r\n        labRoomService.deleteLabRoomOperationItem(room, m);\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存实验室物联硬件 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomAgent\")\r\n    public ModelAndView saveLabRoomAgent(@ModelAttribute LabRoomAgent agent,\r\n                                         @RequestParam Integer roomId, @RequestParam int type, HttpServletRequest request) {\r\n        System.out.println(\"saveLabRoomAgent coming in\");\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室\r\n        LabRoom room = labRoomDAO.findLabRoomByPrimaryKey(roomId);\r\n        // System.out.println(\"实验室号\"+roomId);\r\n        agent.setLabRoom(room);\r\n        // 物联服务器\r\n        System.out.println(agent.getCommonServer().getId());\r\n        int serverId = agent.getCommonServer().getId();\r\n        System.out.println(\"物联服务器号\" + serverId);\r\n        CommonServer server = commonServerDAO\r\n                .findCommonServerByPrimaryKey(serverId);\r\n        System.out.println(server.getServerName());\r\n        if (request.getParameter(\"doorIndexInput\") != null && !\"\".equals(request.getParameter(\"doorIndexInput\"))) {\r\n            agent.setDoorindex(Integer.parseInt(request.getParameter(\"doorIndexInput\")));\r\n        }\r\n        if (request.getParameter(\"harewareModuleInput\") != null && !\"\".equals(request.getParameter(\"harewareModuleInput\"))) {\r\n            agent.setHarewareModule(request.getParameter(\"harewareModuleInput\"));\r\n        }\r\n        agent.setCommonServer(server);\r\n        // agent.setId(50);\r\n        labRoomAgentDAO.store(agent);\r\n        // System.out.println(agent+\"00000\");\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /*\r\n     * 判断物联设备名称是否重复\r\n     * gyz\r\n     * 2020-6-29\r\n     * */\r\n    @ResponseBody\r\n    @RequestMapping(\"/judgeAgentName\")\r\n    public String judgeAgentName(@RequestParam Integer id, String hardwareName) {\r\n        if (id == -1) {\r\n            List<LabRoomAgent> agentList = labRoomService.agentList(hardwareName);\r\n            if (agentList.size() > 0) {\r\n                return \"201\";\r\n            } else {\r\n                return \"200\";\r\n            }\r\n        } else {\r\n            LabRoomAgent labRoomAgent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n            if (hardwareName.equals(labRoomAgent.getHardwareName())) {\r\n                return \"200\";\r\n            } else {\r\n                List<LabRoomAgent> agentList = labRoomService.agentList(hardwareName);\r\n                if (agentList.size() > 0) {\r\n                    return \"201\";\r\n                } else {\r\n                    return \"200\";\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验室物联硬件 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomAgent\")\r\n    public ModelAndView deleteLabRoomAgent(@RequestParam Integer id, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室物联硬件\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n        labRoomAgentDAO.remove(agent);\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\"\r\n                + agent.getLabRoom().getId() + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：修改实验室物联硬件 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/updateLabRoomAgent\")\r\n    public ModelAndView updateLabRoomAgent(@RequestParam Integer id, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室物联硬件\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n        mav.addObject(\"agent\", agent);\r\n        // 物联硬件类型\r\n        List<CDictionary> types = cDictionaryService.findallCType();\r\n        mav.addObject(\"types\", types);\r\n        // 物联硬件服务器\r\n        Set<CommonServer> serverList = commonServerDAO.findAllCommonServers();\r\n        mav.addObject(\"serverList\", serverList);\r\n        mav.addObject(\"type\", type);\r\n        if (\"4\".equals(agent.getCDictionary().getCNumber()) && \"c_agent_type\".equals(agent.getCDictionary().getCCategory())) {// 电源控制器\r\n            mav.setViewName(\"labroom/lab/lab_room/updateLabRoomAgent.jsp\");\r\n        } else if (!\"4\".equals(agent.getCDictionary().getCNumber()) && \"c_agent_type\".equals(agent.getCDictionary().getCCategory())) {\r\n            mav.setViewName(\"labroom/lab/lab_room/elseUpdateLabRoomAgent.jsp\");\r\n        }\r\n\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：处理ajax中文乱码 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    public static String htmlEncode(String str) {\r\n        StringBuilder sb = new StringBuilder();\r\n        for (int i = 0; i < str.length(); i++) {\r\n            int c = (int) str.charAt(i);\r\n            if (c > 127 && c != 160) {\r\n                sb.append(\"&#\").append(c).append(\";\");\r\n            } else {\r\n                sb.append((char) c);\r\n            }\r\n        }\r\n        return sb.toString();\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据姓名、工号查询当前登录人所在学院的用户 作者：贺子龙 时间：2015-09-08\r\n     *\r\n     * @throws UnsupportedEncodingException\r\n     ****************************************************************************/\r\n    @SuppressWarnings(\"deprecation\")\r\n    @RequestMapping(\"/findUserByCnameAndUsername\")\r\n    public @ResponseBody\r\n    String findUserByCnameAndUsername(@RequestParam String cname,\r\n                                      String username, Integer roomId, Integer page, Integer typeId)\r\n            throws UnsupportedEncodingException {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n\r\n        if (cname != null) {\r\n            // cname = java.net.URLDecoder.decode(cname, \"UTF-8\");// 转成utf-8；\r\n        }\r\n        User u = shareService.getUser();\r\n        String academyNumber = \"\";\r\n        if (u.getSchoolAcademy() != null) {\r\n            academyNumber = u.getSchoolAcademy().getAcademyNumber();\r\n        }\r\n        if (pConfigDTO.labAddAdim) {\r\n            academyNumber = null;\r\n        }\r\n        User user = new User();\r\n        user.setCname(java.net.URLDecoder.decode(cname, \"UTF-8\"));\r\n        //借用一个字段临时存放类型\r\n        user.setUserType(typeId);\r\n        user.setUsername(username);\r\n\r\n        int pageSize = 20;\r\n        // 根据分页信息查询出来的记录\r\n        List<User> userList = labRoomService.findUserByUserAndSchoolAcademy(\r\n                user, roomId, academyNumber, page, pageSize);\r\n        // 分页开始\r\n        int totalRecords = labRoomService.findUserByUserAndSchoolAcademy(\r\n                user, roomId, academyNumber);\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        String s = \"\";\r\n        for (User d : userList) {\r\n            String academy = \"\";\r\n            if (d.getSchoolAcademy() != null) {\r\n                academy = d.getSchoolAcademy().getAcademyName();\r\n            }\r\n            s += \"<tr>\" + \"<td><input type='checkbox' name='CK_name' value='\"\r\n                    + d.getUsername() + \"'/></td>\" + \"<td>\" + d.getCname()\r\n                    + \"</td>\" + \"<td>\" + d.getUsername() + \"</td>\" + \"<td>\"\r\n                    + academy + \"</td>\" +\r\n\r\n                    \"</tr>\";\r\n        }\r\n        s += \"<tr><td colspan='6'>\"\r\n                + \"<a href='javascript:void(0)' onclick='firstPage(1,\" + typeId + \");'>\"\r\n                + \"首页\" + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='previousPage(\"\r\n                + page\r\n                + \",\" + typeId + \");'>\"\r\n                + \"上一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='nextPage(\"\r\n                + page\r\n                + \",\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \",\" + typeId + \");'>\"\r\n                + \"下一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='lastPage(\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \",\" + typeId + \");'>\"\r\n                + \"末页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"当前第\"\r\n                + page\r\n                + \"页&nbsp; 共\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \"页  \" + totalRecords + \"条记录\" + \"</td></tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存实验室管理员 作者：贺子龙 时间：2015-09-08   update:gyz   2020-06-12\r\n     ****************************************************************************/\r\n    @ResponseBody\r\n    @RequestMapping(\"/saveLabRoomAdmin\")\r\n    public String saveLabRoomAdmin(@RequestParam Integer roomId, @RequestParam int type,\r\n                                   String[] array, Integer typeId) {\r\n        // roomId对应的实验分室\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        // 下发物联数据所需参数\r\n        String labRoomAdminIds = \"\";\r\n\r\n        for (String i : array) {\r\n            // username对应的用户\r\n            User u = userDAO.findUserByPrimaryKey(i);\r\n            LabRoomAdmin admin = new LabRoomAdmin();\r\n            admin.setLabRoom(room);\r\n            admin.setUser(u);\r\n            admin.setTypeId(typeId);\r\n            if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n                admin = labRoomAdminDAO.store(admin);\r\n                // 拼接物联数据所需参数\r\n                labRoomAdminIds += (admin.getId() + \",\");\r\n            } else {\r\n                labRoomAdminDAO.store(admin);\r\n            }\r\n\r\n            // 给用户赋予权限\r\n            Set<Authority> ahths = u.getAuthorities();\r\n            String authorityName = null;\r\n            if (typeId == 2) {\r\n                authorityName = \"CABINETADMIN\";\r\n            }\r\n            else {\r\n                authorityName = \"LABMANAGER\";\r\n            }\r\n            Set<Authority> tmp = authorityDAO.findAuthorityByAuthorityName(authorityName);\r\n            if (tmp.size() != 0) {\r\n                Authority tmpItem = tmp.iterator().next();\r\n                if (tmpItem != null) {\r\n                    ahths.add(tmpItem);\r\n                    u.setAuthorities(ahths);\r\n                    userDAO.store(u);\r\n                }\r\n            }\r\n\r\n            RefuseItemBackup refuseItemBackup = new RefuseItemBackup();\r\n            refuseItemBackup.setBusinessId(roomId.toString());\r\n            if (typeId == 2) {\r\n                refuseItemBackup.setType(\"LabAgentAdmin\");\r\n                refuseItemBackup.setOperationItemName(\"添加物联管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n            } else {\r\n                refuseItemBackup.setType(\"LabRoomAdmin\");\r\n                refuseItemBackup.setOperationItemName(\"添加实验室管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n            }\r\n            refuseItemBackup.setTerm(shareService.getBelongsSchoolTerm(Calendar.getInstance()).getId());\r\n            refuseItemBackup.setLabRoomName(room.getLabRoomName());\r\n            refuseItemBackup.setCreator(shareService.getUserDetail().getUsername());\r\n            refuseItemBackup.setOperationTime(Calendar.getInstance());\r\n            refuseItemBackupDAO.store(refuseItemBackup);\r\n        }\r\n        String message = \"success\";\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            if (!\"\".equals(labRoomAdminIds)) {\r\n                // 去掉多余，号\r\n                labRoomAdminIds = labRoomAdminIds.substring(0, labRoomAdminIds.length() - 1);\r\n                // 物联权限下发\r\n                message = iotService.changeAgentInfoTodayToIOT(shareService.getCurrUsername(), roomId, labRoomAdminIds, \"REFRESHAUTH\", \"ADD\");\r\n            }\r\n        }\r\n        return message;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验室管理员 作者：贺子龙 时间：2015-09-15\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomAdmin\")\r\n    @Transactional\r\n    public ModelAndView deleteLabRoomAdmin(@RequestParam Integer id, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        // id对应的实验室物联管理员\r\n        LabRoomAdmin admin = labRoomAdminDAO.findLabRoomAdminByPrimaryKey(id);\r\n        if (\"zisulims\".equals(pConfigDTO.PROJECT_NAME)) {//浙外临时方法\r\n            List<LabRoomAgent> agentList = labRoomService.findLabRoomAgentAccessByRoomId(admin.getLabRoom().getId());\r\n            String str = \"{\\\"Table1\\\":[\";\r\n            // 遍历门禁\r\n            for (LabRoomAgent agent : agentList) {\r\n                if (\"2\".equals(agent.getCDictionary().getCNumber())) {\r\n                    str += \"{\\\"IDNo\\\":\\\"\" + admin.getUser().getCardno() + \"\\\",\\\"DoorNum\\\":\" + agent.getDoorindex() + \"},\";\r\n                }\r\n            }\r\n            if (str.length() > 11) {// 删除最后多余的“,”\r\n                str = str.substring(0, str.length() - 1);\r\n            }\r\n            str += \"]}\";\r\n\r\n            Map<String, String> params = new HashMap<>();\r\n            params.put(\"updatedata\", str);\r\n\r\n            HttpClientUtil.doPost(\"http://10.50.20.100:85/deleteManager\", params);\r\n        } else if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            // 删除当前管理员的物联权限\r\n            iotService.changeAgentInfoTodayToIOT(shareService.getCurrUsername(), admin.getLabRoom().getId(), admin.getId().toString(), \"REFRESHAUTH\", \"DELETE\");\r\n        }\r\n\r\n\r\n        // 权限管理\r\n        String auth_name = \"\";\r\n        if (admin.getTypeId() == 2) {\r\n            auth_name = \"CABINETADMIN\";\r\n        } else {\r\n            auth_name = \"LABMANAGER\";\r\n        }\r\n        String sql = \"{call proc_lab_managers(:username,:authName,:typeId,:labRoomId)}\";\r\n        Query query = entityManager.createNativeQuery(sql);\r\n        query.setParameter(\"username\", admin.getUser().getUsername());\r\n        query.setParameter(\"authName\", auth_name);\r\n        query.setParameter(\"typeId\", admin.getTypeId());\r\n        query.setParameter(\"labRoomId\", admin.getLabRoom().getId());\r\n        query.executeUpdate();\r\n        // 保存操作日志\r\n        User u = admin.getUser();\r\n        RefuseItemBackup refuseItemBackup = new RefuseItemBackup();\r\n        refuseItemBackup.setBusinessId(admin.getLabRoom().getId().toString());\r\n        if (admin.getTypeId() == 2) {\r\n            refuseItemBackup.setType(\"LabAgentAdmin\");\r\n            refuseItemBackup.setOperationItemName(\"删除物联管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n        } else {\r\n            refuseItemBackup.setType(\"LabRoomAdmin\");\r\n            refuseItemBackup.setOperationItemName(\"删除实验室管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n        }\r\n        refuseItemBackup.setOperationTime(Calendar.getInstance());\r\n        refuseItemBackup.setTerm(shareService.getBelongsSchoolTerm(Calendar.getInstance()).getId());\r\n        refuseItemBackup.setLabRoomName(admin.getLabRoom().getLabRoomName());\r\n        refuseItemBackup.setCreator(shareService.getUserDetail().getUsername());\r\n        refuseItemBackupDAO.store(refuseItemBackup);\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + admin.getLabRoom().getId() + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 批量删除实验项目\r\n     * author 廖文辉\r\n     * 2018-12-24\r\n     */\r\n    @RequestMapping(\"/batchDeleteLabRoomOperationItem\")\r\n    public ModelAndView batchDeleteLabRoomOperationItem(@RequestParam int[] array, @RequestParam Integer roomId, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n        for (int operationItemId : array) {\r\n            OperationItem m = operationItemDAO.findOperationItemByPrimaryKey(operationItemId);\r\n            Set<OperationItem> currents = labRoom.getOperationItems();\r\n            currents.remove(m);\r\n            labRoom.setOperationItems(currents);\r\n            labRoom = labRoomDAO.store(labRoom);\r\n            labRoomDAO.flush();\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 批量删除物联管理员\r\n     * author 廖文辉\r\n     * 2018-12-24\r\n     */\r\n    @RequestMapping(\"/batchDeleteLabRoomAdmin\")\r\n    @Transactional\r\n    public ModelAndView batchDeleteLabRoomAdmin(@RequestParam int[] array, @RequestParam Integer roomId, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 拼接物联参数，删除相关权限\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            String labRoomAdminIds = \"\";\r\n            for (int id : array) {\r\n                labRoomAdminIds += (id + \",\");\r\n            }\r\n            if (!\"\".equals(labRoomAdminIds)) {\r\n                labRoomAdminIds = labRoomAdminIds.substring(0, labRoomAdminIds.length() - 1);\r\n                iotService.changeAgentInfoTodayToIOT(shareService.getCurrUsername(), roomId, labRoomAdminIds, \"REFRESHAUTH\", \"DELETE\");\r\n            }\r\n        }\r\n\r\n        //开始删除管理员相关操作\r\n\r\n\r\n        for (int id : array) {\r\n            // id对应的实验室物联管理员\r\n            LabRoomAdmin admin = labRoomAdminDAO.findLabRoomAdminByPrimaryKey(id);\r\n            // 权限管理\r\n            String auth_name = \"\";\r\n            if (admin.getTypeId() == 2) {\r\n                auth_name = \"CABINETADMIN\";\r\n            } else {\r\n                auth_name = \"LABMANAGER\";\r\n            }\r\n            String sql = \"{call proc_lab_managers(:username,:authName,:typeId,:labRoomId)}\";\r\n            Query query = entityManager.createNativeQuery(sql);\r\n            query.setParameter(\"username\", admin.getUser().getUsername());\r\n            query.setParameter(\"authName\", auth_name);\r\n            query.setParameter(\"typeId\", admin.getTypeId());\r\n            query.setParameter(\"labRoomId\", admin.getLabRoom().getId());\r\n            query.executeUpdate();\r\n\r\n            User u = admin.getUser();\r\n            LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(roomId);\r\n            RefuseItemBackup refuseItemBackup = new RefuseItemBackup();\r\n            refuseItemBackup.setBusinessId(roomId.toString());\r\n            if (admin.getTypeId() == 2) {\r\n                refuseItemBackup.setType(\"LabAgentAdmin\");\r\n                refuseItemBackup.setOperationItemName(\"删除物联管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n            } else {\r\n                refuseItemBackup.setType(\"LabRoomAdmin\");\r\n                refuseItemBackup.setOperationItemName(\"删除实验室管理员\" + \"(\" + u.getCname() + u.getUsername() + \")\");\r\n            }\r\n            refuseItemBackup.setTerm(shareService.getBelongsSchoolTerm(Calendar.getInstance()).getId());\r\n            refuseItemBackup.setLabRoomName(labRoom.getLabRoomName());\r\n            refuseItemBackup.setCreator(shareService.getUserDetail().getUsername());\r\n            refuseItemBackup.setOperationTime(Calendar.getInstance());\r\n            refuseItemBackupDAO.store(refuseItemBackup);\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据软件名称、软件版本查询当前登录人所在学院的软件 作者：周志辉 时间：2017-08-01\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/findSoftwareByNameAndEdition\")\r\n    public @ResponseBody\r\n    String findSoftwareByNameAndEdition(@RequestParam String name,\r\n                                        String edition, Integer roomId, Integer page,\r\n                                        @ModelAttribute(\"selected_academy\") String acno) {\r\n        String academyNumber = shareService.getUser().getSchoolAcademy()\r\n                .getAcademyNumber();\r\n        Software software = new Software();\r\n        software.setName(name);\r\n        software.setEdition(edition);\r\n        // 分页开始\r\n        int totalRecords = softwareService\r\n                .findSoftwareByAcademyNumberAndSoftware(academyNumber,\r\n                        software, roomId);\r\n        int pageSize = 100;\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<Software> softwareList = softwareService\r\n                .findSoftwareByAcademyNumberAndSoftware(academyNumber,\r\n                        software, roomId, page, pageSize);\r\n\r\n        String s = \"\";\r\n        for (Software d : softwareList) {\r\n            String dongle = \"\";\r\n            if (d.getDongle() == null) {\r\n                dongle = \"无\";\r\n            } else if (d.getDongle() != null) {\r\n                if (d.getDongle() == 1) {\r\n                    dongle = \"有\";\r\n                } else {\r\n                    dongle = \"无\";\r\n                }\r\n            }\r\n\r\n            s += \"<tr>\" + \"<td>\" + d.getId() + \"</td>\" + \"<td>\" + d.getName()\r\n                    + \"</td>\" + \"<td>\" + d.getEdition() + \"</td>\" + \"<td>\"\r\n                    + d.getPrice() + \"</td>\" + \"<td>\" + dongle + \"</td>\"\r\n                    + \"<td><input type='checkbox' name='CK' value='\"\r\n                    + d.getId() + \"'/></td>\" + \"</tr>\";\r\n        }\r\n        s += \"<tr><td colspan='7'>\"\r\n                + \"<a href='javascript:void(0)' onclick='firstSoft(1);'>\" + \"首页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='previousSoft(\"\r\n                + page\r\n                + \");'>\"\r\n                + \"上一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='nextSoft(\"\r\n                + page\r\n                + \",\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"下一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='lastSoft(\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"末页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"当前第\"\r\n                + page\r\n                + \"页&nbsp; 共\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \"页  \" + totalRecords + \"条记录\" + \"</td></tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据设备名称、设备编号查询当前登录人所在学院的设备 作者：贺子龙 时间：2015-09-08\r\n     *\r\n     * @throws UnsupportedEncodingException\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/findSchoolDeviceByNameAndNumber\")\r\n    public @ResponseBody\r\n    String findSchoolDeviceByNameAndNumber(@RequestParam String name,\r\n                                           String number, String deviceAddress, Integer page,\r\n                                           @ModelAttribute(\"selected_academy\") String acno)\r\n            throws UnsupportedEncodingException {\r\n        String academyNumber = shareService.getUser().getSchoolAcademy()\r\n                .getAcademyNumber();\r\n        SchoolDevice schoolDevice = new SchoolDevice();\r\n        schoolDevice.setDeviceName(name);\r\n        schoolDevice.setDeviceNumber(number);\r\n        schoolDevice.setDeviceAddress(deviceAddress);\r\n        /*\r\n         * //设备保管员 if(keepUser!=null&&!keepUser.equals(\"\")){ User u=new User();\r\n         * u.setCname(keepUser); schoolDevice.setUserByKeepUser(u); }\r\n         */\r\n        // 分页开始\r\n        int totalRecords = schoolDeviceService\r\n                .findSchoolDeviceByAcademyNumberAndSchoolDeviceInLabRoomDevice(academyNumber,\r\n                        schoolDevice);\r\n        int pageSize = 20;\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SchoolDevice> deviceList = schoolDeviceService\r\n                .findSchoolDeviceByAcademyNumberAndSchoolDeviceInLabRoomDevice(academyNumber,\r\n                        schoolDevice, page, pageSize);\r\n\r\n        String s = \"\";\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n        for (SchoolDevice d : deviceList) {\r\n            String time = \"\";// 购买日期\r\n            if (d.getDeviceBuyDate() != null) {\r\n                time = sdf.format(d.getDeviceBuyDate().getTime());\r\n            }\r\n            String academy = \"\";// 部门\r\n            if (d.getSchoolAcademy() != null) {\r\n                academy = d.getSchoolAcademy().getAcademyName();\r\n            }\r\n            String cname = \"\";// 保管员\r\n            if (d.getUserByKeepUser() != null) {\r\n                cname = d.getUserByKeepUser().getCname();\r\n            }\r\n            s += \"<tr>\" + \"<td>\" + d.getDeviceNumber() + \"</td>\" + \"<td>\"\r\n                    + d.getDeviceName() + \"</td>\" + \"<td>\"\r\n                    + d.getDevicePattern() + \"</td>\";\r\n            if (d.getUserByKeepUser() != null\r\n                    && d.getUserByKeepUser().getCname() != null) {\r\n                s += \"<td>\" + d.getUserByKeepUser().getCname() + \"</td>\";\r\n            } else {\r\n                s += \"<td></td>\";\r\n            }\r\n            s += \"<td>\" + d.getDeviceFormat() + \"</td>\" + \"<td>\"\r\n                    + d.getDevicePrice() + \"</td>\";\r\n            if (d.getDeviceAddress() != null) {\r\n                s += \"<td>\" + d.getDeviceAddress() + \"</td>\";\r\n            } else {\r\n                s += \"<td></td>\";\r\n            }\r\n            s += \"<td><input type='checkbox' name='CK' value='\"\r\n                    + d.getDeviceNumber() + \"'/></td>\" + \"</tr>\";\r\n        }\r\n        s += \"<tr><td colspan='7'>\"\r\n                + \"<a href='javascript:void(0)' onclick='first(1);'>\" + \"首页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='previous(\"\r\n                + page\r\n                + \");'>\"\r\n                + \"上一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='next(\"\r\n                + page\r\n                + \",\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"下一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='last(\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"末页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"当前第\"\r\n                + page\r\n                + \"页&nbsp; 共\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \"页  \" + totalRecords + \"条记录\" + \"</td></tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存实验室设备 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomDevice\")\r\n    public ModelAndView saveLabRoomDevice(@RequestParam Integer roomId, @RequestParam int type, @RequestParam Integer deviceType,\r\n                                          String[] array) throws Exception {\r\n        ModelAndView mav = new ModelAndView();\r\n        // roomId对应的实验分室\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n        for (String i : array) {\r\n            // 设备编号对应的设备\r\n            SchoolDevice d = schoolDeviceService\r\n                    .findSchoolDeviceByPrimaryKey(i);\r\n            LabRoomDevice device = new LabRoomDevice();\r\n            device.setLabRoom(room);\r\n            device.setSchoolDevice(d);\r\n            //0是设备1是家具\r\n            device.setType(deviceType);\r\n            /*\r\n             * //默认为现场培训 CLabAccessType\r\n             * accessType=cLabAccessTypeDAO.findCLabAccessTypeById(1);\r\n             * device.setCLabAccessType(accessType); //默认为日历形式 CAppointmentType\r\n             * type=cAppointmentTypeDAO.findCAppointmentTypeById(2);\r\n             * device.setCAppointmentType(type);\r\n             */\r\n            device = labRoomDeviceService.save(device);\r\n            // 设备二维码\r\n            String url = shareService.getDimensionalCode(device);\r\n            device.setDimensionalCode(url);\r\n\r\n            // 设备置为正常使用\r\n            CDictionary cd = shareService.getCDictionaryByCategory(\"c_lab_room_device_status\", \"1\");\r\n            device.setCDictionaryByDeviceStatus(cd);\r\n\r\n            labRoomDeviceService.save(device);\r\n        }\r\n        mav.addObject(\"type\", type);\r\n        mav.addObject(\"deviceType\", deviceType);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存实验室软件 作者：周志辉 时间：2017-08-02\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomSoftware\")\r\n    public ModelAndView saveLabRoomSoftware(@RequestParam Integer roomId, @RequestParam int type,\r\n                                            int[] array) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // roomId对应的实验分室\r\n        LabRoom room = labRoomService.findLabRoomByPrimaryKey(roomId);\r\n        for (int i : array) {\r\n            // 设备编号对应的设备\r\n            Software d = softwareService.findSoftwareByPrimaryKey1(i);\r\n            SoftwareRoomRelated softwareRoomRelated = new SoftwareRoomRelated();\r\n            softwareRoomRelated.setLabRoom(room);\r\n            softwareRoomRelated.setSoftware(d);\r\n            softwareRoomRelated = softwareService\r\n                    .save(softwareRoomRelated);\r\n            softwareService.save(softwareRoomRelated);\r\n        }\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验室设备 作者：贺子龙 时间：2015-09-15\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomDeviceNew\")\r\n    public ModelAndView deleteLabRoomDeviceNew(@RequestParam Integer labDeviceId, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室物联管理员\r\n        LabRoomDevice device = labRoomDeviceDAO\r\n                .findLabRoomDeviceByPrimaryKey(labDeviceId);\r\n        labRoomDeviceDAO.remove(device);\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\"\r\n                + device.getLabRoom().getId() + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 批量删除仪器设备\r\n     * author 廖文辉\r\n     * 2018-12-24\r\n     */\r\n    @RequestMapping(\"/batchDeleteLabDevice\")\r\n    public ModelAndView batchDeleteLabDevice(@RequestParam int[] array, @RequestParam Integer roomId, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        for (int labDeviceId : array) {\r\n            // id对应的实验室物联管理员\r\n            LabRoomDevice device = labRoomDeviceDAO\r\n                    .findLabRoomDeviceByPrimaryKey(labDeviceId);\r\n            labRoomDeviceDAO.remove(device);\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验室软件 作者：周志辉 时间：2017-08-01\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomSoftware\")\r\n    public ModelAndView deleteLabRoomSoftware(@RequestParam Integer softwareId, @RequestParam int type,\r\n                                              @RequestParam Integer labRoomId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        Software software = softwareDAO.findSoftwareByPrimaryKey(softwareId);\r\n        List<SoftwareRoomRelated> softwareRoomRelateds = new ArrayList<>(\r\n                software.getSoftwareRoomRelateds());\r\n        for (SoftwareRoomRelated softwareRoomRelated : softwareRoomRelateds) {\r\n            int i = softwareRoomRelated.getLabRoom().getId();// 判断两个integer是否相等不能用==\r\n            if (labRoomId == i) {\r\n                softwareRoomRelatedDAO.remove(softwareRoomRelated);\r\n            }\r\n        }\r\n        mav.addObject(\"type\", type);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\"\r\n                + labRoomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 批量删除实验室软件\r\n     * author 廖文辉\r\n     * 2018-12-24\r\n     */\r\n    @RequestMapping(\"/batchDeleteLabRoomSoftWare\")\r\n    public ModelAndView batchDeleteLabRoomSoftWare(@RequestParam int[] array, @RequestParam Integer roomId, @RequestParam int type) {\r\n        ModelAndView mav = new ModelAndView();\r\n        for (int softwareId : array) {\r\n            Software software = softwareDAO.findSoftwareByPrimaryKey(softwareId);\r\n            List<SoftwareRoomRelated> softwareRoomRelateds = new ArrayList<>(\r\n                    software.getSoftwareRoomRelateds());\r\n            for (SoftwareRoomRelated softwareRoomRelated : softwareRoomRelateds) {\r\n                if (softwareRoomRelated.getLabRoom() != null) {\r\n                    if (roomId.intValue() == softwareRoomRelated.getLabRoom().getId().intValue()) {\r\n                        softwareRoomRelatedDAO.remove(softwareRoomRelated);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + roomId + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除家具 作者：方正\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomFurniture\")\r\n    public String deleteLabRoomFurniture(@RequestParam Integer i) {\r\n        LabRoomFurniture labRoomFurniture = labRoomFurnitureDAO\r\n                .findLabRoomFurnitureByPrimaryKey(i);\r\n        labRoomFurnitureService.deleteLabRoomFurniture(labRoomFurniture);\r\n        int t = labRoomFurniture.getLabRoom().getId();\r\n        return \"redirect:/labRoom/getLabRoom?currpage=1&id=\" + t;\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：添加家具家具 作者：贺子龙 时间：2015-09-21 15:05:43\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomFurniture\")\r\n    public String saveLabRoomFurniture(\r\n            @ModelAttribute LabRoomFurniture labRoomFurniture) {\r\n        int i = labRoomFurniture.getLabRoom().getId();\r\n        labRoomFurnitureService.saveLabRoomFurniture(labRoomFurniture);\r\n        return \"redirect:/labRoom/getLabRoom?currpage=1&id=\" + i;\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据设备名称、设备编号查询当前登录人所在学院的设备\r\n     * 作者：李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/appointment/openVideo\")\r\n    public ModelAndView openVideo(@RequestParam Integer agentId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        //物联设备\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(agentId);\r\n        Map<String,String> videoMap = new HashMap<>();\r\n        CommonServer commonServer= commonServerDAO.findCommonServerById(agent.getCommonServer().getId());\r\n        if (\"SRS-FLV\".equals(commonServer.getServerType())){\r\n            videoMap.put(\"pcUrlFlv\",visualizationService.getVideoUrl(VideoEnum.FLV,commonServer.getServerIp(),commonServer.getServerSn(),agent.getHardwareIp()));\r\n//            videoMap.put(\"pcUrlFlv\",\"http://192.168.1.195:8080/live/331.flv\");\r\n        } else if (\"SRS-RTMP\".equals(commonServer.getServerType())){\r\n            videoMap.put(\"pcUrl\",visualizationService.getVideoUrl(VideoEnum.RTMP,commonServer.getServerIp(),commonServer.getServerSn(),agent.getHardwareIp()));\r\n//            videoMap.put(\"pcUrl\",\"rtmp://192.168.1.195:19523/live/331\");\r\n            // 手机端视频播放地址\r\n            videoMap.put(\"mobileUrl\",visualizationService.getVideoUrl(VideoEnum.M3U8,commonServer.getServerIp(),commonServer.getServerSn(),agent.getHardwareIp()));\r\n        }\r\n        mav.addObject(\"videoMap\",videoMap);\r\n        // 流媒体服务器地址\r\n        String serverIp = agent.getCommonServer().getServerIp();\r\n        // 端口\r\n        String hardwarePort = agent.getCommonServer().getServerSn();\r\n\r\n        // 摄像头本身ip的 xxx.xxx.xxx.123   最后那个123\r\n        String lastFour = \"\";\r\n        // 192.168.0.sz\r\n        String hardWareIp = agent.getHardwareIp();\r\n        mav.addObject(\"hardWareIp\", hardWareIp);\r\n\r\n        mav.addObject(\"serverIp\", serverIp);\r\n        mav.addObject(\"serverPort\", hardwarePort);\r\n\r\n        if (commonServer.getReamark() != null && !\"\".equals(commonServer.getReamark()) && \"version3\".equals(commonServer.getReamark())) {\r\n            mav.addObject(\"newVersion\", true);\r\n        } else {\r\n            // split .有问题，所以替换成了 , 逗号\r\n            hardWareIp = hardWareIp.replace(\".\", \",\");\r\n            if (!EmptyUtil.isStringEmpty(hardWareIp)\r\n                    && !EmptyUtil.isObjectEmpty(hardWareIp.split(\",\"))\r\n                    && hardWareIp.split(\",\").length > 3\r\n            ) {\r\n                lastFour = hardWareIp.split(\",\")[2] + hardWareIp.split(\",\")[3];\r\n            }\r\n            mav.addObject(\"lastFour\", lastFour);\r\n            mav.addObject(\"newVersion\", false);\r\n        }\r\n\r\n        // 测试输出\r\n        System.out.println(\"rtmp://\" + serverIp + \":\" + hardwarePort + \"/live/\" + lastFour);\r\n        mav.setViewName(\"labroom/lab/labVideo.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据设备名称、设备编号查询当前登录人所在学院的设备\r\n     * 作者：李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/appointment/openVideoSet\")\r\n    public ModelAndView openVideoSet(@RequestParam Integer agentId) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(agentId);\r\n        // 流媒体服务器地址\r\n        String serverIp = agent.getCommonServer().getServerIp();\r\n        // 端口\r\n        String serverPort = agent.getCommonServer().getServerSn();\r\n        // 摄像头本身ip的 xxx.xxx.xxx.123   最后那个123\r\n        String lastFour = \"\";\r\n        // 192.168.0.sz\r\n        String hardWareIp = agent.getHardwareIp();\r\n        mav.addObject(\"hardWareIp\", hardWareIp);\r\n        // 判断监控设备版本\r\n        CommonServer commonServer = commonServerDAO.findCommonServerByPrimaryKey(agent.getCommonServer().getId());\r\n        if (commonServer.getReamark() != null && !\"\".equals(commonServer.getReamark()) && \"version3\".equals(commonServer.getReamark())) {\r\n            mav.addObject(\"newVersion\", true);\r\n        } else {\r\n            // split .有问题，所以替换成了 , 逗号\r\n            hardWareIp = hardWareIp.replace(\".\", \",\");\r\n            if (!EmptyUtil.isStringEmpty(hardWareIp)\r\n                    && !EmptyUtil.isObjectEmpty(hardWareIp.split(\",\"))\r\n                    && hardWareIp.split(\",\").length > 3\r\n            ) {\r\n                lastFour = hardWareIp.split(\",\")[3];\r\n            }\r\n            mav.addObject(\"lastFour\", lastFour);\r\n            mav.addObject(\"newVersion\", false);\r\n        }\r\n        mav.addObject(\"serverIp\", serverIp);\r\n        mav.addObject(\"serverPort\", serverPort);\r\n        // 测试输出\r\n        //System.out.println(\"rtmp://\"+serverIp+\":\"+hardwarePort+\"/live/\"+lastFour);\r\n        mav.setViewName(\"labroom/lab/videoHk.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：socket方法远程开门\r\n     * 作者：叶晨凯\r\n     * 时间：2018-08-13\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/openDoorPython\")\r\n    public @ResponseBody\r\n    String openDoorPython(@RequestParam Integer agentId, HttpServletResponse response) throws IOException, InterruptedException {\r\n        // 门禁设备\r\n        LabRoomAgent a = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(agentId);\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        String ip = a.getHardwareIp();\r\n        String sn = a.getSnNo();\r\n\r\n        if (\"zjcclims\".equals(pConfigDTO.PROJECT_NAME)) {\r\n            User user = shareService.getUser();//当前登陆人\r\n            List<LabRoomAgent> agentList = labRoomService.findLabRoomAgentAccessByRoomId(a.getLabRoom().getId());// 根据roomId查询该实验室的门禁\r\n            LabRoom labRoom = labRoomDAO.findLabRoomById(a.getLabRoom().getId());\r\n            Calendar time = Calendar.getInstance();\r\n            for (LabRoomAgent labRoomAgent : agentList) {\r\n                if (labRoomAgent.getCDictionary().getId() == 548) {\r\n                    RemoteOpenDoor rod = new RemoteOpenDoor();\r\n                    rod.setControllerId(labRoomAgent.getHardwareIp());\r\n                    rod.setDoorNo(labRoomAgent.getSnNo());\r\n                    rod.setCreaterName(user.getCname());\r\n                    rod.setCreaterUsername(user.getUsername());\r\n                    rod.setDeviceType(0);\r\n                    rod.setLabRoomId(labRoom.getId());\r\n                    rod.setLabRoomName(labRoom.getLabRoomName());\r\n                    rod.setStatus(0);\r\n                    rod.setRemoteAction(1);\r\n                    rod.setCreateTime(time);\r\n                    remoteOpenDoorDAO.store(rod);\r\n                }\r\n            }\r\n            String strUrl = \"http://\" + a.getCommonServer().getServerIp() + \":\"+a.getCommonServer().getServerSn()+\"/iot/acldoor/zjccopendoor\";\r\n            System.out.println(\"开始调用py接口：\"+ strUrl);\r\n            return HttpClientUtil.doPost(strUrl);\r\n        } else if (\"zisulims\".equals(pConfigDTO.PROJECT_NAME)) {\r\n            //卡号转换\r\n            String cardNo = shareService.getUserDetail().getCardno();\r\n            return HttpClientUtil.doPost(\"http://\" + a.getCommonServer().getServerIp() + \":85/opendoor?username='\" + cardNo + \"'&doorNum=\" + a.getDoorindex());\r\n        } else {\r\n            String port = \"\";// 端口\r\n            String ServIP = \"\";// 主机\r\n            String getURL = \"\";\r\n            if (a.getCommonServer() != null) {\r\n                String cmd = \"\";\r\n                // 现老版本的命令不同  老的是open  新的是opendoor\r\n                if (a.getCommonServer().getServerSn() != null\r\n                        && \"8080\".equals(a.getCommonServer().getServerSn())) {//  8080是IIS服务  8081是python服务\r\n                    cmd = \"open\";\r\n                } else {\r\n                    cmd = \"opendoor\";\r\n                }\r\n                String sysName = pConfigDTO.PROJECT_NAME;\r\n                String doorIndex = \"01\";\r\n                if (a.getDoorindex() != null) {\r\n                    doorIndex = \"0\" + a.getDoorindex().toString();\r\n                }\r\n                // 主机和端口\r\n                ServIP = a.getCommonServer().getServerIp();\r\n                if (a.getCommonServer().getServerSn() != null && !\"\".equals(a.getCommonServer().getServerSn())) {\r\n                    port = a.getCommonServer().getServerSn();\r\n                } else {//端口为空\r\n                    port = \"80\";\r\n                }\r\n\r\n                if (sysName.contains(\"jitsoft\")) {\r\n                    getURL = \"/services/ofthings/acldoor.asp?cmd=\" + cmd + \"&ip=\" + ip + \"&sn=\" + sn + \"&doorIndex=\" + doorIndex;\r\n                } else {\r\n                    getURL = \"/services/ofthings/acldoor.asp?cmd=\" + cmd + \"&ip=\" + ip + \"&sn=\" + sn;\r\n                }\r\n            }\r\n            SocketAddress addr = new InetSocketAddress(ServIP, Integer.parseInt(port));\r\n            //1、创建一个服务器端Socket\r\n            Socket sock = new Socket();\r\n            String[] result;\r\n            ByteArrayOutputStream baos = new ByteArrayOutputStream();\r\n            int len;\r\n            try {\r\n                sock.connect(addr);\r\n                StringBuilder headers = new StringBuilder(\"GET \" + getURL + \" HTTP/1.1\\r\\n\");\r\n                System.out.println(\"开门URL：\" + headers);\r\n                // 以下为请求头\r\n                headers.append(\"Host: \" + ServIP + \":\" + port + \"\\r\\n\");\r\n                headers.append(\"\\r\\n\");\r\n                //2、获取输出流，向服务器端发送信息\r\n                OutputStream out = sock.getOutputStream();\r\n                out.write(headers.toString().getBytes());\r\n                //3、获取输入流，并读取服务器端的响应信息\r\n                InputStream is = sock.getInputStream();\r\n                byte[] bytes = new byte[1024];\r\n                while ((len = is.read(bytes)) != -1) {\r\n                    baos.write(bytes, 0, len);\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                sock.close();\r\n            }\r\n            result = new String(baos.toByteArray()).split(\"\\r\\n\");\r\n            int length = result.length;\r\n            if (result[length - 1].contains(\"true\")) {\r\n                return \"success\";\r\n            } else {\r\n                return result[length - 1];\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Description 班牌开门{升达项目}\r\n     *\r\n     * @param agentId return\r\n     * @throws IOException\r\n     * @author 陈乐为 2021-5-6：修改接口调用及请求方式\r\n     */\r\n    @RequestMapping(\"/appointment/openScrPython\")\r\n    public @ResponseBody\r\n    String openScrPython(@RequestParam Integer agentId) throws IOException {\r\n        // 设备\r\n        LabRoomAgent labRoomAgent = labRoomAgentDAO.findLabRoomAgentById(agentId);\r\n        String s = \"\";\r\n        try {\r\n            // 班牌远程开门接口地址\r\n            String urlStr = \"http://%s:%s/iot/shengdaclasscard/opendoor?ip=%s\";\r\n            String url = String.format(urlStr, labRoomAgent.getCommonServer().getServerIp(), labRoomAgent.getCommonServer().getServerSn(),\r\n                    labRoomAgent.getHardwareIp());\r\n            System.out.println(\"调用地址:\" + url);\r\n\r\n            // 发送请求并获取返回信息\r\n            s = HttpClientUtil.doGet(url);\r\n            System.out.println(\"调用结果：\" + s);\r\n            com.alibaba.fastjson.JSONObject jsonObject = JSON.parseObject(s);\r\n            s = URLEncoder.encode(jsonObject.getString(\"message\"), \"UTF-8\");\r\n        } catch (UnsupportedEncodingException e) {\r\n            e.printStackTrace();\r\n        }\r\n        return s;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX返回刷新权限的结果 作者：李小龙\r\n     *\r\n     * @throws IOException\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/refreshPermissions\")\r\n    public @ResponseBody\r\n    String refreshPermissions(@RequestParam Integer roomId,\r\n                              HttpServletResponse response) throws IOException, InterruptedException {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        // 根据roomId查询该实验室的门禁\r\n        List<LabRoomAgent> agentList = labRoomService\r\n                .findLabRoomAgentAccessByRoomId(roomId);\r\n        LabRoomAgent a = new LabRoomAgent();\r\n        if (!agentList.isEmpty()) {\r\n            a = agentList.get(0);\r\n        }\r\n\r\n        if (\"zjcclims\".equals(pConfigDTO.PROJECT_NAME)) {\r\n            String strUrl = \"http://\" + a.getCommonServer().getServerIp() + \":\"+a.getCommonServer().getServerSn()+\"/iot/acldoor/zjccopendoor\";\r\n            System.out.println(\"开始调用py接口：\"+ strUrl);\r\n            return HttpClientUtil.doPost(strUrl);\r\n        } else if (\"zisulims\".equals(pConfigDTO.PROJECT_NAME)) {//浙外临时方法\r\n            // 实验室管理员&物联管理员\r\n            List<LabRoomAdmin> admins = new ArrayList<>();\r\n            admins.addAll(labRoomDeviceService.findLabRoomAdminByRoomId(roomId, 1));\r\n            admins.addAll(labRoomDeviceService.findLabRoomAdminByRoomId(roomId, 2));\r\n\r\n            String str = \"{\\\"Table1\\\":[\";\r\n            // 遍历实验室管理员\r\n            for (LabRoomAdmin admin : admins) {\r\n                // 遍历门禁\r\n                for (LabRoomAgent agent : agentList) {\r\n                    if (\"2\".equals(agent.getCDictionary().getCNumber())) {\r\n                        str += \"{\\\"IDNo\\\":\\\"\" + admin.getUser().getCardno() + \"\\\",\\\"DoorNum\\\":\" + agent.getDoorindex() + \"},\";\r\n                    }\r\n                }\r\n            }\r\n            if (str.length() > 11) {// 删除最后多余的“,”\r\n                str = str.substring(0, str.length() - 1);\r\n            }\r\n            str += \"]}\";\r\n\r\n            Map<String, String> params = new HashMap<>();\r\n            params.put(\"updatedata\", str);\r\n\r\n            HttpClientUtil.doPost(\"http://10.50.20.100:85/addManager\", params);\r\n\r\n            return \"success\";\r\n        } else {\r\n            String agentPort = labRoomService.findAgentPortByRoomId(roomId);\r\n            //1、创建一个服务器端Socket，指定主机和端口，并连接\r\n            String Host = a.getCommonServer().getServerIp();\r\n            int Port = Integer.parseInt(a.getCommonServer().getServerSn());\r\n            // 测试信息（便于后台查看）\r\n            System.out.println(\"Host: \" + Host + \":\" + Port + \"\\n\");\r\n            SocketAddress addr = new InetSocketAddress(Host, Port);\r\n            Socket socket = new Socket();\r\n            //2、获取输出流，向服务器端发送信息\r\n            PrintWriter pw = null;//将输出流包装成打印流\r\n            //3、获取输入流，并读取服务器端的响应信息\r\n            BufferedReader br = null;\r\n            String inputline = \"\";\r\n            String info = \"\"; // 返回值\r\n            try {\r\n                socket.connect(addr);\r\n                pw = new PrintWriter(socket.getOutputStream());\r\n                br = new BufferedReader(new InputStreamReader(socket.getInputStream()));\r\n                if (\"jitsoft\".equals(pConfigDTO.PROJECT_NAME)) {\r\n                    System.out.println(\"GET /services/ofthings/acldoor.asp?cmd=regcard&roomnumber=\" + agentPort + \" HTTP/1.1\\n\");\r\n                    pw.write(\"GET /services/ofthings/acldoor.asp?cmd=regcard&roomnumber=\" + agentPort + \" HTTP/1.1\\n\");\r\n                } else {\r\n                    System.out.println(\"GET /services/ofthings/acldoor.asp?cmd=regcard&roomnumber=\" + roomId + \" HTTP/1.1\\n\");\r\n                    pw.write(\"GET /services/ofthings/acldoor.asp?cmd=regcard&roomnumber=\" + roomId + \" HTTP/1.1\\n\");\r\n                }\r\n                pw.write(\"Content-type: application/x-java-serialized-object\\n\");\r\n                pw.write(\"Cache-control: no-cache\\n\");\r\n                pw.write(\"Pragma: no-cache\\n\");\r\n                pw.write(\"User-Agent: Sakai Java/1.7.0_111\\n\");\r\n                pw.write(\"Host: \" + Host + \":\" + Port + \"\\n\");\r\n                pw.write(\"Accept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\\n\");\r\n                pw.write(\"Connection: keep-alive\\n\");\r\n                pw.write(\"Content-Length:0\\n\");\r\n                pw.write(\"\\n\");\r\n                pw.flush();\r\n                int count = 0;\r\n                while ((inputline = br.readLine()) != null) {\r\n                    count++;\r\n                    System.out.println(\"return:\" + inputline);\r\n                    if (count == 5) {\r\n                        info += inputline;\r\n                    }\r\n                }\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } finally {\r\n                socket.close();\r\n                if (pw != null && br != null) {\r\n                    pw.close();\r\n                    br.close();\r\n                }\r\n            }\r\n            System.out.println(\"to js:\" + info);\r\n            return info;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Description 刷新权限-新版物联\r\n     *\r\n     * @param roomId 实验室id\r\n     *               return\r\n     *               author 陈乐为 2019-2-23\r\n     *               author 李涵 2019-10-21 修改为新版物联接口\r\n     */\r\n    @RequestMapping(\"/refreshPerm\")\r\n    public @ResponseBody\r\n    String refreshPerm(@RequestParam Integer roomId) {\r\n        return labRoomService.sendAgentInfoTodayToIOTTotal(roomId);\r\n    }\r\n\r\n    /**\r\n     * Description 远程开门-新版物联\r\n     *\r\n     * @param agentId\r\n     * @param doorIndex return\r\n     *                  author 陈乐为 2019-2-23\r\n     */\r\n    @RequestMapping(\"/openDoorNew\")\r\n    public @ResponseBody\r\n    String openDoorNew(@RequestParam Integer agentId, Integer doorIndex) {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        // 门禁设备\r\n        LabRoomAgent a = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(agentId);\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            User user = shareService.getUserDetail();\r\n            return iotService.sendOpenDoorInterfaceByJWT(agentId, doorIndex, user.getUsername());\r\n        } else if (\"zisulims\".equals(pConfigDTO.PROJECT_NAME)) {\r\n            //卡号转换\r\n            String cardNo = shareService.getUserDetail().getCardno();\r\n            return HttpClientUtil.doPost(\"http://\" + a.getCommonServer().getServerIp() + \":85/opendoor?username='\" + cardNo + \"'&doorNum=\" + a.getDoorindex());\r\n        }else {\r\n            return labRoomService.sendOpenDoorInterfaceByJWT(agentId, doorIndex);\r\n        }\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：判断所填写的编号是否与数据库中已有的可用状态实验室编号重复 作者：贺子龙 日期：2015-12-23\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/testDuplicated\")\r\n    public @ResponseBody\r\n    String testDuplicated(@RequestParam String labRoomNumber,\r\n                          HttpServletResponse response) {\r\n        Set<LabRoom> labRoomNumberDup = labRoomDAO\r\n                .findLabRoomByLabRoomNumber(labRoomNumber);// 根据所填写的labRoomNumber查找数据库中是否有重名\r\n        boolean isDuplicated = false;\r\n        if (!labRoomNumberDup.isEmpty()) {\r\n            for (LabRoom labRoom : labRoomNumberDup) {\r\n                if (labRoom.getIsUsed() == null\r\n                        || (labRoom.getIsUsed() != null && labRoom.getIsUsed()\r\n                        .equals(1))) {// 正常使用状态\r\n                    isDuplicated = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isDuplicated) {\r\n            return \"isDuplicated\";\r\n        } else {\r\n            return \"isNotDuplicated\";\r\n        }\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：门禁进出记录 作者：贺子龙 时间：2015-11-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/entranceManageForLab\")\r\n    public ModelAndView entranceManageForLab(@ModelAttribute LabRoom labRoom,\r\n                                             @RequestParam Integer page,\r\n                                             @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 获取当前用户\r\n        User user = shareService.getUser();\r\n        mav.addObject(\"user\", user);\r\n        // 查询表单的对象\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        // 设置分页变量并赋值为20\r\n        int pageSize = 15;\r\n        // 查询出来的总记录条数\r\n        int totalRecords = labRoomService.findLabRoomBySchoolAcademyDefault(\r\n                labRoom, 1, -1, 548, acno).size();\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 查询框中的实验室\r\n        List<LabRoom> labRoomListAll = labRoomService\r\n                .findLabRoomBySchoolAcademyDefault(labRoom, 1, -1, 548, acno);// 门禁--548\r\n        mav.addObject(\"labRoomListAll\", labRoomListAll);\r\n        // 页面显示的实验室\r\n        List<LabRoom> labRoomList = labRoomService\r\n                .findLabRoomBySchoolAcademyDefault(labRoom, page, pageSize,\r\n                        548, acno);// 门禁--548\r\n        mav.addObject(\"labRoomList\", labRoomList);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"labroom/lab/lab_record/listEntranceManageForLab.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*************************************************************************************\r\n     * @內容：开放实验室资源--门禁\r\n     * author 贺子龙\r\n     * date 2015-12-01\r\n     *************************************************************************************/\r\n    @RequestMapping(\"/entranceList\")\r\n    public ModelAndView entranceList(@RequestParam Integer id, Integer page,\r\n                                     @ModelAttribute CommonHdwlog commonHdwlog,\r\n                                     HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        String starttime = request.getParameter(\"starttime\");\r\n        String endtime = request.getParameter(\"endtime\");\r\n        mav.addObject(\"starttime\", starttime);\r\n        mav.addObject(\"endtime\", endtime);\r\n        mav.addObject(\"commonHdwlog\", commonHdwlog);\r\n\r\n        mav.addObject(\"id\", id);\r\n        // id对应的物联设备\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n        LabRoomAgent videoAgent = new LabRoomAgent();\r\n        Set<LabEntranceVideo> list = agent.getLabEntranceVideosForEntranceId();\r\n        for (LabEntranceVideo lev : list) {\r\n            videoAgent = lev.getLabRoomAgentByVideoId();\r\n        }\r\n        mav.addObject(\"videoAgentId\", videoAgent.getId());\r\n        System.out.println(videoAgent.getId());\r\n        mav.addObject(\"labRoomId\", agent.getLabRoom().getId());\r\n        String ip = agent.getHardwareIp();\r\n        String port = agent.getSnNo();\r\n        // 设置分页变量并赋值为20\r\n        // int pageSize = CommonConstantInterface.INT_PAGESIZE;\r\n        int pageSize = 30;\r\n        // 查询出来的总记录条数\r\n        int totalRecords = labRoomService.findLabRoomAccessByIpCount(\r\n                commonHdwlog, ip, port, request);\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 页面显示的实验室\r\n        List<LabAttendance> accessList = labRoomService.findLabRoomAccessByIp(\r\n                commonHdwlog, ip, port, page, pageSize, request);\r\n\r\n        mav.addObject(\"accessList\", accessList);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"labroom/lab/lab_record/listLabRoomEntrance.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*************************************************************************************\r\n     * @throws ParseException\r\n     * @內容：打开门禁视频监控\r\n     * author 周志辉\r\n     * date 2017-11-22\r\n     * @需要调试\r\n     *************************************************************************************/\r\n    @RequestMapping(\"/openVideoBack\")\r\n    public ModelAndView openVideoBack(@RequestParam Integer id, String time) throws ParseException {\r\n        ModelAndView mav = new ModelAndView();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-ddHH:mm:ss\");\r\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-ddHH:mm:ss\");\r\n        Date opentime = sdf.parse(time);\r\n        String str = format.format(opentime);\r\n        System.out.println(str);\r\n        mav.addObject(\"两天前的日期：\" + sdf.format(new Date(opentime.getTime() - 60 * 1000)));\r\n        // id对应的物联设备\r\n        String starTime = sdf.format(new Date(opentime.getTime() - 60 * 1000));\r\n        String endTime = sdf.format(new Date(opentime.getTime() + 60 * 1000));\r\n        StringBuilder stime = new StringBuilder(starTime);\r\n        StringBuilder etime = new StringBuilder(endTime);\r\n        stime.insert(10, \"T\");\r\n        etime.insert(10, \"T\");\r\n        mav.addObject(\"time\", time);\r\n        mav.addObject(\"startime\", stime);\r\n        mav.addObject(\"endtime\", etime);\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n        String ip = \"\";\r\n        String port = \"\";\r\n        if (agent != null) {\r\n            ip = agent.getCommonServer().getServerIp();\r\n            port = agent.getSnNo();\r\n        }\r\n        mav.addObject(\"id\", id);\r\n        mav.addObject(\"agent\", agent);\r\n        mav.addObject(\"ip\", ip);\r\n        mav.addObject(\"port\", port);\r\n        mav.setViewName(\"labroom/lab/videoback.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*************************************************************************************\r\n     * @throws ParseException\r\n     * @內容：打开门禁视频监控\r\n     * author 周志辉\r\n     * date 2017-11-22\r\n     * @暂时没用，需要调试\r\n     *************************************************************************************/\r\n    @RequestMapping(\"/openVideoBackByDurtime\")\r\n    public ModelAndView openVideoBackByDurtime(@RequestParam Integer id, String time, String durtime) throws ParseException {\r\n        ModelAndView mav = new ModelAndView();\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-ddHH:mm:ss\");\r\n        DateFormat format = new SimpleDateFormat(\"yyyy-MM-ddHH:mm:ss\");\r\n        Date opentime = sdf.parse(time);\r\n        String str = format.format(opentime);\r\n        System.out.println(str);\r\n        Integer duringTime = Integer.parseInt(durtime);\r\n\r\n        mav.addObject(\"两天前的日期：\" + sdf.format(new Date(opentime.getTime() - 60 * 1000)));\r\n        // id对应的物联设备\r\n        String starTime = \"\";\r\n        String endTime = \"\";\r\n        if (duringTime == 0) {\r\n            mav.addObject(\"durtime\", \"30秒\");\r\n            starTime = sdf.format(new Date(opentime.getTime() - 30 * 1000));\r\n            endTime = sdf.format(new Date(opentime.getTime() + 30 * 1000));\r\n        } else {\r\n            starTime = sdf.format(new Date(opentime.getTime() - duringTime * 60 * 1000));\r\n            endTime = sdf.format(new Date(opentime.getTime() + duringTime * 60 * 1000));\r\n            mav.addObject(\"durtime\", durtime + \"分钟\");\r\n        }\r\n        StringBuilder stime = new StringBuilder(starTime);\r\n        StringBuilder etime = new StringBuilder(endTime);\r\n        stime.insert(10, \"T\");\r\n        etime.insert(10, \"T\");\r\n        mav.addObject(\"time\", time);\r\n        mav.addObject(\"startime\", stime);\r\n        mav.addObject(\"endtime\", etime);\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n        String ip = \"\";\r\n        String port = \"\";\r\n        if (agent != null) {\r\n            ip = agent.getCommonServer().getServerIp();\r\n            port = agent.getSnNo();\r\n        }\r\n        mav.addObject(\"id\", id);\r\n        mav.addObject(\"agent\", agent);\r\n        mav.addObject(\"ip\", ip);\r\n        mav.addObject(\"port\", port);\r\n        mav.setViewName(\"labroom/lab/videoback.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据姓名、工号查询当前登录人所在学院的用户 作者：贺子龙 时间：2015-09-08\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/getLabRoomDetail\")\r\n    public @ResponseBody\r\n    String getLabRoomDetail(@RequestParam Integer roomId) {\r\n        // id对应的实验分室信息\r\n        LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(roomId);\r\n        // 根据分页信息查询出来的记录\r\n        String s = \"\";\r\n        s += \"<tr>\" + \"<td>实验室名称：\" + labRoom.getLabRoomName() + \"</td>\"\r\n                + \"<tr><td>实验室描述：\" + labRoom.getLabRoomIntroduction()\r\n                + \"</td><tr>\" + \"<tr><td>实验室注意事项：\"\r\n                + labRoom.getLabRoomAttentions() + \"</td><tr>\"\r\n                + \"<tr><td>实验室规章制度：\" + labRoom.getLabRoomRegulations()\r\n                + \"</td><tr>\" + \"<tr><td>实验室获奖信息：\"\r\n                + labRoom.getLabRoomPrizeInformation() + \"</td><tr>\" + \"</tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：修改实验分室 作者：李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/appointment/showLabRoom\")\r\n    public ModelAndView showLabRoom(@RequestParam Integer id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验分室\r\n        LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(id);\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        mav.setViewName(\"labroom/lab/lab_room/showLabRoom.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * Description 药品溶液管理-药品申购｛设置物品仓库信息｝\r\n     * author 郑昕茹\r\n     * date 2016-08-16\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/addAgent\")\r\n    public ModelAndView addAgent(@RequestParam int id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomDevice labRoomDevice = labRoomDeviceService\r\n                .findLabRoomDeviceByPrimaryKey(id);\r\n        mav.addObject(\"labRoomDevice\", labRoomDevice);\r\n        mav.addObject(\"listLabRoomAgents\", labRoomDevice.getLabRoomAgent());\r\n        if (labRoomDevice.getLabRoomAgent() == null) {\r\n            mav.addObject(\"flag\", 1);\r\n        } else {\r\n            mav.addObject(\"flag\", 0);\r\n        }\r\n        mav.addObject(\"listAgents\", labRoomAgentDAO.executeQuery(\r\n                \"select l from LabRoomAgent l where\" + \" 1=1 and l.labRoom.id=\"\r\n                        + labRoomDevice.getLabRoom().getId(), 0, -1));\r\n        // mav.addObject(\"listAgents\",labRoomAgentDAO.executeQuery(\"select l from LabRoomAgent l where\"\r\n        // +\r\n        // \" 1=1 and l.labRoom.id=\"+labRoomDevice.getLabRoom().getId()+\" and CDictionary.CNumber = 4\",\r\n        // 0, -1));\r\n        mav.addObject(\"id\", id);\r\n        mav.setViewName(\"labroom/lab/lab_room/editLabRoomDeviceAgent.jsp\");\r\n        return mav;\r\n\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * Description 药品溶液管理-药品申购｛设置物品仓库信息｝\r\n     * author 郑昕茹\r\n     * date 2016-08-16\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomDeviceAgent\")\r\n    public ModelAndView saveLabRoomDeviceAgent(@RequestParam int deviceId,\r\n                                               HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomDevice labRoomDevice = labRoomDeviceService\r\n                .findLabRoomDeviceByPrimaryKey(deviceId);\r\n        String agentId = request.getParameter(\"selectAgent\");\r\n        LabRoomAgent agent = labRoomAgentDAO.findLabRoomAgentById(Integer\r\n                .parseInt(agentId));\r\n        labRoomDevice.setLabRoomAgent(agent);\r\n        labRoomDeviceDAO.store(labRoomDevice);\r\n        mav.setViewName(\"redirect:/labRoom/addAgent?id=\" + deviceId);\r\n        return mav;\r\n\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * Description 药品溶液管理-药品申购｛设置物品仓库信息｝\r\n     * author 郑昕茹\r\n     * date 2016-08-16\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomDeviceAgent\")\r\n    public ModelAndView deleteLabRoomDeviceAgent(@RequestParam int deviceId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomDevice labRoomDevice = labRoomDeviceService\r\n                .findLabRoomDeviceByPrimaryKey(deviceId);\r\n        labRoomDevice.setLabRoomAgent(null);\r\n        labRoomDeviceDAO.store(labRoomDevice);\r\n        mav.setViewName(\"redirect:/labRoom/addAgent?id=\" + deviceId);\r\n        return mav;\r\n\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * Description 保存物联硬件\r\n     * author 周志辉\r\n     * date 2017-08-28\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/saveLabRoomDeviceAgentAjax\")\r\n    public ModelAndView saveLabRoomDeviceAgentAjax(@RequestParam int deviceId,\r\n                                                   @RequestParam int agentId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomDevice labRoomDevice = labRoomDeviceService\r\n                .findLabRoomDeviceByPrimaryKey(deviceId);\r\n        labRoomDevice.setLabRoomAgent(labRoomDeviceService\r\n                .findLabRoomAgentByPrimaryKey(agentId));\r\n        labRoomDeviceDAO.store(labRoomDevice);\r\n        mav.setViewName(\"redirect:/labRoom/addAgent?id=\" + deviceId);\r\n        return mav;\r\n\r\n    }\r\n\r\n    /**\r\n     * 实验室列表(App用)\r\n     *\r\n     * @throws IOException author hly 2015.07.28\r\n     */\r\n    @RequestMapping(\"/listLabRoomApp\")\r\n    public void listLabRoomApp(HttpServletResponse response) throws IOException {\r\n        JSONObject jsonObject = new JSONObject();\r\n        Configuration config = new Configuration().configure();\r\n        SessionFactory sf = config.buildSessionFactory();\r\n        Session session = sf.openSession();\r\n//        Transaction ts = session.beginTransaction();\r\n        response.setContentType(\"text/ html；charset=utf-8\");\r\n        response.setCharacterEncoding(\"utf-8\");\r\n        PrintWriter out = response.getWriter();\r\n        String sql = \" select id,lab_room_name, lab_room_number, lab_room_address, reservation_number from lab_room\"\r\n                + \" where is_used = 1 and lab_room_reservation = 1\";\r\n        SQLQuery queryList = session.createSQLQuery(sql); // 返回对象\r\n        queryList.setResultTransformer(CriteriaSpecification.ALIAS_TO_ENTITY_MAP);\r\n        @SuppressWarnings(\"unchecked\")\r\n        List<Map<String, Object>> results = queryList.list();\r\n        JsonConfig jsonConfig = new JsonConfig();\r\n        // 设置javabean中日期转换时的格式\r\n        jsonConfig.registerJsonValueProcessor(Date.class,\r\n                new JsonDateValueProcessor());\r\n        JSONArray jsonArray = JSONArray.fromObject(results, jsonConfig);\r\n        // out.println(jsonArray);\r\n        jsonObject.put(\"labRooms\", jsonArray);\r\n        out.print(jsonObject);\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * @throws ParseException\r\n     * Description：实验工作人员--实验室工作人员记录（导入实验室工作人员）\r\n     * author 郑昕茹\r\n     * date：2016-12-19\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/importLabWorker\")\r\n    public ModelAndView importLabWorker(HttpServletRequest request)\r\n            throws ParseException {\r\n        ModelAndView mav = new ModelAndView();\r\n        String fileName = shareService.getUpdateFilePath(request);\r\n        String logoRealPathDir = request.getSession().getServletContext()\r\n                .getRealPath(\"/\");\r\n        String filePath = logoRealPathDir + fileName;\r\n        System.out.println(filePath);\r\n        try {\r\n            if (filePath.endsWith(\"xls\") || filePath.endsWith(\"xlsx\")) {\r\n                labRoomService.importLabWorker(filePath);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/listLabWorker?currpage=1\");\r\n        return mav;\r\n    }\r\n    /***********************************************************************************\r\n     * @throws ParseException\r\n     * Description：验队伍管理--实验室人员培训进修登记记录（导入实验室人员培训进修登记）\r\n     * author 曹焕\r\n     * date：2021-01-16\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/importLabWorkerTraining\")\r\n    public String importLabWorkerTraining(HttpServletRequest request,Integer labWorkerId)\r\n            throws ParseException {\r\n        ModelAndView mav = new ModelAndView();\r\n        String fileName = shareService.getUpdateFilePath(request);\r\n        String logoRealPathDir = request.getSession().getServletContext()\r\n                .getRealPath(\"/\");\r\n        String filePath = logoRealPathDir + fileName;\r\n        System.out.println(filePath);\r\n        try {\r\n            if (filePath.endsWith(\"xls\") || filePath.endsWith(\"xlsx\")) {\r\n                labRoomService.importLabWorkerTraining(filePath,labWorkerId);\r\n            }\r\n        } catch (Exception e) {\r\n            e.printStackTrace();\r\n        }\r\n        return \"redirect:/labRoom/listLabWorkerTraining?currpage=1&labWorkerId=\" + labWorkerId;\r\n\r\n    }\r\n\r\n    /***********************************************************************************\r\n     * Description：实验工作人员--实验室工作人员记录（导入实验室工作人员钱的格式检查）\r\n     * author 郑昕茹\r\n     * date 2016-08-04\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/checkRegex\")\r\n    public @ResponseBody\r\n    String checkRegex(HttpServletRequest request) throws ParseException {\r\n        // 获取文件地址\r\n        String fileName = shareService.getUpdateFilePath(request);\r\n        // 获取服务器地址\r\n        String logoRealPathDir = request.getSession().getServletContext()\r\n                .getRealPath(\"/\");\r\n        // 获取文件全部地址\r\n        String filePath = logoRealPathDir + fileName;\r\n        return labRoomService.checkRegex(filePath);\r\n    }\r\n    /***********************************************************************************\r\n     * Description：实验队伍管理--实验室人员培训进修记录（导入实验室人员培训进修的格式检查）\r\n     * author 曹焕\r\n     * date 2021-01-16\r\n     * **********************************************************************************/\r\n    @RequestMapping(\"/checkRegexTraining\")\r\n    public @ResponseBody\r\n    String checkRegexTraining(HttpServletRequest request) throws ParseException {\r\n        // 获取文件地址\r\n        String fileName = shareService.getUpdateFilePath(request);\r\n        // 获取服务器地址\r\n        String logoRealPathDir = request.getSession().getServletContext()\r\n                .getRealPath(\"/\");\r\n        // 获取文件全部地址\r\n        String filePath = logoRealPathDir + fileName;\r\n        return labRoomService.checkRegexTraining(filePath);\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室开放预约-信誉积分修改\r\n     *\r\n     * author:余南新\r\n     * @param username(user表主键)\r\n     * date:2017.4.26\r\n     *****************************/\r\n    @RequestMapping(\"/modifyCredit\")\r\n    public ModelAndView modifyCredit(@RequestParam String username) {\r\n        ModelAndView mav = new ModelAndView();\r\n        User user = userDAO.findUserByPrimaryKey(username);\r\n        mav.addObject(\"user\", user);\r\n        //查询所有可用的扣分项\r\n        List<CreditOption> creditOptions = creditOptionService.findAllUseCreditOptionByQuery();\r\n        mav.addObject(\"creditOptions\", creditOptions);\r\n        //查询所有通过的预约根据username\r\n        List<LabReservation> labReservations = creditOptionService.findLabRoomReservstionByReserveUserAndStatus(user.getUsername());\r\n        mav.addObject(\"labReservations\", labReservations);\r\n        List<LabRoomDeviceReservation> labRoomDeviceReservations = creditOptionService.findLabDeviceReservstionByReserveUserAndStatus(user.getUsername());\r\n        mav.addObject(\"labRoomDeviceReservations\", labRoomDeviceReservations);\r\n        List<LabRoomStationReservation> labRoomStationReservations = creditOptionService.findLabRoomStationReservationByReserveUserAndStatus(user.getUsername());\r\n        mav.addObject(\"labRoomStationReservations\", labRoomStationReservations);\r\n        mav.setViewName(\"labroom/lab_room_reservation/modifyCredit.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室开放预约-信誉积分保存\r\n     *\r\n     * author:余南新\r\n     * @param\r\n     * date:2017.4.26\r\n     *****************************/\r\n    @RequestMapping(\"/saveCreditUser\")\r\n    public ModelAndView saveCreditUser(@ModelAttribute User user, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        User userTrue = userDAO.findUserByPrimaryKey(user.getUsername());\r\n        //获取预约的类型\r\n        String reservationsType = request.getParameter(\"reservationsType\");\r\n        //获取扣分项id\r\n        String reditOption = request.getParameter(\"sumDeduction\");\r\n        //扣分总数初始化\r\n        Integer sumDeduction = 0;\r\n        if (reservationsType != null && reditOption != null && !\"\".equals(reservationsType) && !\"\".equals(reditOption)) {\r\n            creditOptionService.saveDeductingRecord(reservationsType, reditOption, user.getUsername());\r\n            sumDeduction = creditOptionService.deductingRecordMark(reditOption);\r\n        }\r\n        if (userTrue.getCreditScore()!=null&&!\"\".equals(userTrue)) {\r\n            userTrue.setCreditScore(userTrue.getCreditScore() - sumDeduction);\r\n            userDAO.store(userTrue);\r\n        }\r\n        if (\"1\".equals(userTrue.getUserRole())) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoomTeacherCreditManage?page=1\");\r\n        } else if (\"0\".equals(userTrue.getUserRole())) {\r\n            mav.setViewName(\"redirect:/labRoom/listLabRoomStudentCreditManage?page=1\");\r\n        }\r\n        // mav.setViewName(\"redirect:/labRoom/listLabRoomStudentCreditManage?page=1\");\r\n        return mav;\r\n    }\r\n    /*****************************\r\n     * Description 实训室开放预约-信誉积分扣分前判断\r\n     *\r\n     * author:陈佳利 2021-12-01\r\n     *****************************/\r\n    @ResponseBody\r\n    @RequestMapping(\"/judgeCreditScore\")\r\n    public String judgeCreditScore(User user) {\r\n        User userTrue = userDAO.findUserByPrimaryKey(user.getUsername());\r\n        if (userTrue.getCreditScore() == null || \"\".equals(userTrue)) {\r\n            //用户无积分返回201\r\n            return \"201\";\r\n        } else {\r\n            //正常返回200\r\n            return \"200\";\r\n        }\r\n    }\r\n    /*****************************\r\n     * Description 实训室开放预约-预约提交前判断\r\n     *\r\n     * author:陈佳利 2021-12-01\r\n     *****************************/\r\n    @ResponseBody\r\n    @RequestMapping(\"/ReservationOrNoByCreditScore\")\r\n    public String ReservationOrNoByCreditScore(User user) {\r\n        User userTrue = userDAO.findUserByPrimaryKey(user.getUsername());\r\n        if (userTrue.getCreditScore()!=null && !\"\".equals(userTrue.getCreditScore()) && userTrue.getCreditScore() < 80) {\r\n            //用户启用信誉积分（即该字段不是空）并且积分小于80不允许预约，返回201，提示用户：“您的信誉积分低于80分，无法预约！”\r\n            return \"201\";\r\n        } else {\r\n            //用户积分未启用信誉积分或者信誉积分大于等于80可以预约，返回200\r\n            return \"200\";\r\n        }\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：实训室借用列表\r\n     *\r\n     * @param labRoomLending 实训室借用列表\r\n     * author：邵志峰\r\n     * date:2017-06-26\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/labRoomLendList\")\r\n    public ModelAndView labRoomLendList(\r\n            @ModelAttribute LabRoomLending labRoomLending, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 学期\r\n        List<SchoolTerm> terms = shareService.findAllSchoolTerms();\r\n        mav.addObject(\"terms\", terms);\r\n        mav.addObject(\"labRoomLending\", labRoomLending);\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.getReturnedLendingTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<LabRoomLending> labRoomLendList = labRoomService.findAllLending(\r\n                labRoomLending, page, pageSize);\r\n        mav.addObject(\"labRoomLendList\", labRoomLendList);\r\n\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n\r\n        // 当前登录人\r\n        User user = shareService.getUser();\r\n        // 判断当前登录人是否为实验教务或者超级管理员或者是本中心主任\r\n        /*\r\n         * if (user.getAuthorities().size() > 0) { for (Authority a :\r\n         * user.getAuthorities()) { if (a.getId() == 7 || a.getId() == 4 ||\r\n         * a.getId() == 11) { mav.addObject(\"ca\", true); } } }\r\n         */\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"/labroom/lab/lab_room/labRoomLendList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：实训室借用申请\r\n     *\r\n     * author：邵志峰\r\n     * date:2017-05-24\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/labRoomLendingApply\")\r\n    public ModelAndView labRoomLendingApply() {\r\n        ModelAndView mav = new ModelAndView();\r\n        mav.addObject(\"labRoomLending\", new LabRoomLending());// 新建申请单对象\r\n        // 查找可以预约的软件，暂时不做\r\n        mav.addObject(\"labRoomList\", systemService.getLabRoom());// 返回可用的实训室\r\n        // mav.addObject(\"lendingUserTypeList\",systemService.loadLendingUserTypes());//返回使用人类型\r\n        // mav.addObject(\"labRoomLendingTypeList\",systemService.loadLabRoomLendingTypes());//借用类型\r\n        mav.addObject(\"currUser\", shareService.getUser());// 返回当前用户\r\n        mav.addObject(\"user\", systemService.loadUser());// 返回所有实训室管理员\r\n        String key1 = clientDatabaseContext.getCurrentDataSourceDto().getSchoolName() + \":loadSchoolClassess\";\r\n        String hkey1 = \"schoolclasses:updatetime1:\" + operationItemJPA.findMaxUpdatedTimeForTable(\"school_classes\").get(\"Update_time\");\r\n        EasyCacheDTO cacheDTO = new EasyCacheDTO();\r\n        cacheDTO.setKey(key1);\r\n        cacheDTO.setHkey(hkey1);\r\n        mav.addObject(\"schoolClassess\", systemService.loadSchoolClassess(cacheDTO));// 返回所有班级\r\n        mav.setViewName(\"/labroom/lab/lab_room/labRoomLendApply.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * @throws ParseException\r\n     * Description：安全准入验证-工位预约\r\n     * author 李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(value = \"/securityAccess\", method = RequestMethod.POST)\r\n    public @ResponseBody\r\n    String securityAccess(@RequestParam Integer id, HttpServletRequest request) {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(id);\r\n//        if (labRoom.getLabRoomReservation() == null || labRoom.getLabRoomReservation() == 0) {\r\n//            return \"noReservation\";\r\n//        }\r\n//        if (!labRoomService.isSettingForLabRoom(id)) {\r\n//            return \"noSetting\";\r\n//        }\r\n        User user = shareService.getUser();\r\n        String data = labRoomService.securityAccess(user.getUsername(), id, request);\r\n//        boolean LabRoomStationGradedOrNot = shareService.getAuditOrNot(\"LabRoomStationGradedOrNot\");\r\n//        String grade = \"\";\r\n//        if(LabRoomStationGradedOrNot){\r\n//            grade = labRoom.getLabRoomLevel().toString();\r\n//            boolean audit = shareService.getExtendItem(grade + \"LabRoomStationGradedOrNot\");\r\n//            if (!audit) {\r\n//                data = \"noAudit\" + grade;\r\n//            }\r\n//        }\r\n        if (\"success\".equals(data)) {\r\n            //demo\r\n            boolean flag = false;\r\n            String[] RSWITCH = {\"on\", \"off\"};\r\n            String[] auditLevelName = {\"TEACHER\", \"CFO\", \"LABMANAGER\", \"EXCENTERDIRECTOR\", \"PREEXTEACHING\"};\r\n            String businessType = pConfigDTO.PROJECT_NAME + \"LabRoomReservation\" + labRoom.getLabCenter().getSchoolAcademy().getAcademyNumber();\r\n            if (request.getParameter(\"requestType\") != null && \"labRoomStation\".equals(request.getParameter(\"requestType\"))) {\r\n                businessType =  pConfigDTO.PROJECT_NAME + \"StationReservation\" + labRoom.getLabCenter().getSchoolAcademy().getAcademyNumber();\r\n            }\r\n\r\n            String s =JSON.toJSONString(auditServerFeign.getBusinessAuditConfigs(labRoom.getId().toString(), businessType));\r\n            com.alibaba.fastjson.JSONObject jsonObject = JSON.parseObject(s);\r\n            Map auditConfigs = JSON.parseObject(jsonObject.getString(\"data\"), Map.class);\r\n            if (auditConfigs != null && auditConfigs.size() != 0) {\r\n                for (int i = 0; i < auditConfigs.size(); i++) {\r\n                    String[] text = ((String) auditConfigs.get(i + 1)).split(\":\");\r\n                    if (text[0].equals(auditLevelName[0])) {\r\n                        flag = text[1].equals(RSWITCH[0]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (request.getParameter(\"requestType\") != null && \"labRoomStation\".equals(request.getParameter(\"requestType\"))) {\r\n                //判断是否需要选择导师\r\n                boolean isTeacher = false;\r\n                Set<Authority> authorities = user.getAuthorities();\r\n                for (Authority authority : authorities) {\r\n                    if (\"TEACHER\".equals(authority.getAuthorityName())) {\r\n                        isTeacher = true;\r\n                    }\r\n                }\r\n                if (flag && !isTeacher) {\r\n                    data = \"needTutor\";\r\n                } else {\r\n                    data = \"noNeedTutor\";\r\n                }\r\n            } else {\r\n                if (flag && \"ROLE_STUDENT\".equals(request.getSession().getAttribute(\"selected_role\"))) {\r\n                    data = \"needTutor\";\r\n                } else {\r\n                    data = \"noNeedTutor\";\r\n                }\r\n            }\r\n        }\r\n        return htmlEncode(data);\r\n    }\r\n\r\n    @RequestMapping(value = \"/CLWTest\", method = RequestMethod.GET)\r\n    public @ResponseBody\r\n    String CLWTest() {\r\n        return JSON.toJSONString(labRoomService.getReservationLabRoomListForWx(\"20150120\", \"\", 1, 200));\r\n//        return iotService.changeAgentInfoTodayToIOT(\"20150120\", 1511, \"147\", \"DEVICERES\", \"ADD\");\r\n//        return iotService.changeAgentInfoTodayToIOT(\"20150120\", 1282, \"571\", \"LABRES\", \"ADD\");\r\n    }\r\n\r\n    /****************************************************************************\r\n     * @throws ParseException\r\n     * Description：实验室预约安全准入验证\r\n     * @author Hezhaoyi 2019-4-14\r\n     * @author 陈乐为 2020-9-27 修改：预约的实验室如果存在门禁或电源控制器，则需要判断用户卡号是否有效，无效则不允许预约\r\n     ****************************************************************************/\r\n    @RequestMapping(value = \"/labSecurityAccess\", method = RequestMethod.POST)\r\n    public @ResponseBody\r\n    MessageDTO labSecurityAccess(@RequestParam Integer id, HttpServletRequest request) {\r\n        MessageDTO messageDTO = new MessageDTO();\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        String returnStr = \"success\";\r\n        LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(id);\r\n        if (labRoom.getLabRoomReservation() == null || labRoom.getLabRoomReservation() == 0) {\r\n            returnStr = \"noReservation\";\r\n        } else if (Boolean.FALSE.equals(labRoomService.isSettingForLabRoom(id))) {\r\n            returnStr = \"noSetting\";\r\n            //该实验室未作预约初始化设置，不可预约\r\n        } else {\r\n            User user = shareService.getUser();\r\n            String username = user.getUsername();\r\n\r\n            // 当前用户是否为实验室中心主任\r\n            String judge = \",\";\r\n            for (Authority authority : user.getAuthorities()) {\r\n                judge = judge + \",\" + authority.getId() + \",\";\r\n            }\r\n\r\n            CDictionary allowSecurityAccess = labRoom.getCDictionaryByAllowSecurityAccess();\r\n            if (allowSecurityAccess != null && allowSecurityAccess.getId() == 621) {//需要安全准入\r\n                // 中心主任或设备管理员不需要进行培训\r\n                if (judge.contains(\",4,\") ||\r\n                        (labRoom.getLabRoomAdmins() != null && labRoomService.getLabRoomAdminReturn(id, user))) {\r\n                    // do nothing\r\n                } else {\r\n                    if (labRoomService.findPermitUserByUsernameAndLab(username, id) == null) {\r\n                        returnStr = \"needAccess\";\r\n                        //您还未通过培训,点击确定进行预约培训\r\n                    }\r\n                }\r\n                //判断是否要进行考试\r\n                Integer isNeedExam = labRoom.getAccessIsExam();\r\n                if (isNeedExam != null && isNeedExam == 621) {\r\n                    //是否通过考试\r\n                    boolean isAccessTest = isPassExam(username, labRoom.getId());\r\n\r\n                    //需要考试\r\n                    if (isAccessTest) {\r\n                        returnStr = \"success\";\r\n                    } else { //未通过考试\r\n                        returnStr = \"unAccessTest\";\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 判断当前登录人卡号是否有效\r\n        if (\"success\".equals(returnStr)) {\r\n            // 当前实验室有关联的物联设备，则需要判断当前登录人的卡号是否有效\r\n            boolean haveAgent = false;\r\n            for (LabRoomAgent agent : labRoom.getLabRoomAgents()) {\r\n                if (\"c_agent_type\".equals(agent.getCDictionary().getCCategory())\r\n                        && (\"2\".equals(agent.getCDictionary().getCNumber()) || \"4\".equals(agent.getCDictionary().getCNumber()))) {\r\n                    haveAgent = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (haveAgent) {\r\n                // 存在门禁或电源控制器设备，继续判断卡号有效性\r\n                User user = shareService.getUserDetail();\r\n                if (user.getUserCards() == null || user.getUserCards().size() == 0) {\r\n                    // 干脆没有卡号数据\r\n                    returnStr = \"noCard\";\r\n                } else {\r\n                    // 遍历卡号记录\r\n                    for (UserCard userCard : user.getUserCards()) {\r\n                        // 只要存在无效卡号，返回'noCard'\r\n                        if (userCard.getEnabled() == null || !\"1\".equals(userCard.getEnabled())) {\r\n                            returnStr = \"noCard\";\r\n                            break;\r\n                        } else if (userCard.getCardNo() == null || \"88888888\".equals(userCard.getCardNo())) {\r\n                            returnStr = \"noCard\";\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // 判断是否需要教师审核{以及审核权限为教师&当前权限为学生=bingo}\r\n        if (\"success\".equals(returnStr)) {\r\n            //demo\r\n            boolean flag = false;\r\n            String[] RSWITCH = {\"on\", \"off\"};\r\n            String[] auditLevelName = {\"TEACHER\", \"CFO\", \"LABMANAGER\", \"EXCENTERDIRECTOR\", \"PREEXTEACHING\"};\r\n//            Map<String, String> params = new HashMap<>();\r\n//            params.put(\"businessUid\", labRoom.getId().toString());\r\n//            params.put(\"businessType\", pConfigDTO.PROJECT_NAME + \"LabRoomReservation\" + labRoom.getLabCenter().getSchoolAcademy().getAcademyNumber());\r\n//            String s = restTemplate.postForObject(pConfigDTO.apiGateWayHost + \"/auditserver/audit/getBusinessAuditConfigs\" +\r\n//                            \"?businessUid={businessUid}&businessType={businessType}\"\r\n//                    , null, String.class, params);\r\n            String s =JSON.toJSONString(auditServerFeign.getBusinessAuditConfigs(labRoom.getId().toString(),pConfigDTO.PROJECT_NAME + \"LabRoomReservation\" + labRoom.getLabCenter().getSchoolAcademy().getAcademyNumber()));\r\n            com.alibaba.fastjson.JSONObject jsonObject = JSON.parseObject(s);\r\n            Map auditConfigs = JSON.parseObject(jsonObject.getString(\"data\"), Map.class);\r\n            if (auditConfigs != null && auditConfigs.size() != 0) {\r\n                for (int i = 0; i < auditConfigs.size(); i++) {\r\n                    String[] text = ((String) auditConfigs.get(i + 1)).split(\":\");\r\n                    if (text[0].equals(auditLevelName[0])) {\r\n                        flag = text[1].equals(RSWITCH[0]);\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (flag && \"ROLE_STUDENT\".equals(request.getSession().getAttribute(\"selected_role\"))) {\r\n                returnStr = \"needTutor\";\r\n            } else {\r\n                returnStr = \"noNeedTutor\";\r\n            }\r\n        }\r\n        Set<LabRoomAdmin> labRoomAdmins = labRoom.getLabRoomAdmins();\r\n        StringBuilder sb = new StringBuilder();\r\n        if (labRoomAdmins!=null&&labRoomAdmins.size()>0) {\r\n            for (LabRoomAdmin labRoomAdmin : labRoomAdmins) {\r\n                if (labRoomAdmin.getTypeId().equals(1)) {\r\n                    sb.append(labRoomAdmin.getUser().getCname()).append(\" \");\r\n                }\r\n            }\r\n        }\r\n        //获取实验室注意事项\r\n        String labRoomAttentions = labRoom.getLabRoomAttentions();\r\n        //判断实验室是否可预约结果\r\n        messageDTO.setType(returnStr);\r\n        //选定实验室后实验室管理员中文名拼接字符串\r\n        messageDTO.setText(sb.toString());\r\n        //选定实验室后实验室注意事项\r\n        messageDTO.setAttentions(labRoomAttentions);\r\n        return messageDTO;\r\n    }\r\n\r\n    /**\r\n     * 是否通过考试\r\n     * 顾延钊\r\n     * 2019-08-29\r\n     */\r\n    public boolean isPassExam(String username, Integer Uid) {\r\n        boolean isPass = false;\r\n        List<ConfigExam> testList;\r\n        List<ConfigExamScore> userScoreList;\r\n        Integer examId = Uid;\r\n\r\n        if (examId != null) {\r\n            //考试列表\r\n            testList = labRoomService.findExamList(Uid);\r\n            if (!testList.isEmpty()) {\r\n                for (ConfigExam con : testList) {\r\n                    int uuid = con.getId();\r\n                    userScoreList = labRoomService.findExamScore(username, uuid);\r\n                    if (!userScoreList.isEmpty()) {\r\n                        for (ConfigExamScore sco : userScoreList) {\r\n                            if (sco.getScore() >= new Double(con.getAccessScore())) {\r\n                                isPass = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                isPass = false;\r\n            }\r\n        }\r\n\r\n        return isPass;\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：审核通过的实训室借用列表\r\n     *\r\n     * @param labRoomLending 实训室借用列表\r\n     * author：邵志峰\r\n     * date:2017-06-28\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/passLabRoomLendList\")\r\n    public ModelAndView passLabRoomLendList(\r\n            @ModelAttribute LabRoomLending labRoomLending, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 学期\r\n        List<SchoolTerm> terms = shareService.findAllSchoolTerms();\r\n        mav.addObject(\"terms\", terms);\r\n        mav.addObject(\"labRoomLending\", labRoomLending);\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.getPassLendingTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<LabRoomLending> labRoomLendList = labRoomService\r\n                .findAllPassLending(labRoomLending, page, pageSize);\r\n        mav.addObject(\"labRoomLendList\", labRoomLendList);\r\n\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n\r\n        // 当前登录人\r\n        User user = shareService.getUser();\r\n        // 判断当前登录人是否为实验教务或者超级管理员或者是本中心主任\r\n        /*\r\n         * if (user.getAuthorities().size() > 0) { for (Authority a :\r\n         * user.getAuthorities()) { if (a.getId() == 7 || a.getId() == 4 ||\r\n         * a.getId() == 11) { mav.addObject(\"ca\", true); } } }\r\n         */\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"/labroom/lab/lab_room/passLabRoomLendList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：审核未通过的实训室借用列表\r\n     *\r\n     * @param labRoomLending 实训室借用列表\r\n     * author：邵志峰\r\n     * date:2017-06-28\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/rejectLabRoomLendList\")\r\n    public ModelAndView rejectLabRoomLendList(\r\n            @ModelAttribute LabRoomLending labRoomLending, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 学期\r\n        List<SchoolTerm> terms = shareService.findAllSchoolTerms();\r\n        mav.addObject(\"terms\", terms);\r\n        mav.addObject(\"labRoomLending\", labRoomLending);\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.getRejectLendingTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<LabRoomLending> labRoomLendList = labRoomService\r\n                .findAllRejectLending(labRoomLending, page, pageSize);\r\n        mav.addObject(\"labRoomLendList\", labRoomLendList);\r\n\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n\r\n        // 当前登录人\r\n        User user = shareService.getUser();\r\n        // 判断当前登录人是否为实验教务或者超级管理员或者是本中心主任\r\n        /*\r\n         * if (user.getAuthorities().size() > 0) { for (Authority a :\r\n         * user.getAuthorities()) { if (a.getId() == 7 || a.getId() == 4 ||\r\n         * a.getId() == 11) { mav.addObject(\"ca\", true); } } }\r\n         */\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"/labroom/lab/lab_room/rejectLabRoomLendList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：未审核的实训室借用列表\r\n     *\r\n     * @param labRoomLending 实训室借用列表\r\n     * author：邵志峰\r\n     * date:2017-06-28\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/waitLabRoomLendList\")\r\n    public ModelAndView waitLabRoomLendList(\r\n            @ModelAttribute LabRoomLending labRoomLending, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 学期\r\n        List<SchoolTerm> terms = shareService.findAllSchoolTerms();\r\n        mav.addObject(\"terms\", terms);\r\n        mav.addObject(\"labRoomLending\", labRoomLending);\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.getWaitLendingTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<LabRoomLending> labRoomLendList = labRoomService\r\n                .findAllWaitLending(labRoomLending, page, pageSize);\r\n        mav.addObject(\"labRoomLendList\", labRoomLendList);\r\n\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n\r\n        // 当前登录人\r\n        User user = shareService.getUser();\r\n        // 判断当前登录人是否为系教学秘书或者超级管理员或者是实训部教学秘书\r\n        if (!user.getAuthorities().isEmpty()) {\r\n            for (Authority a : user.getAuthorities()) {\r\n                if (a.getId() == 22 || a.getId() == 9 || a.getId() == 11) {\r\n                    mav.addObject(\"ca\", true);\r\n                }\r\n            }\r\n        }\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"/labroom/lab/lab_room/waitLabRoomLendList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：审核实训室出借申请单\r\n     *\r\n     * author：邵志峰\r\n     * @ate：2017-06-28\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/auditLabRoomLending\")\r\n    public ModelAndView auditLabRoomLending(@RequestParam Integer idKey) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomLending lrdl = labRoomDeviceService\r\n                .findLabRoomLendingById(idKey);\r\n        mav.addObject(\"lrdl\", lrdl);\r\n        mav.addObject(\"idKey\", idKey);\r\n        mav.addObject(\"user\", shareService.getUser());\r\n        mav.addObject(\"result\", labRoomDeviceService.getAuditResultMap());\r\n        mav.addObject(\"lrdlr\", new LabRoomLendingResult());\r\n        mav.setViewName(\"/labroom/lab/lab_room/auditLabRoomLending.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：保存审核的实训室申请单\r\n     *\r\n     * author：邵志峰\r\n     * date：2017-06-28\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/saveAuditLabRoomLending\")\r\n    public String saveAuditDeviceLending(\r\n            @ModelAttribute LabRoomLendingResult lrdlr, Integer idKey) {\r\n        LabRoomLendingResult l = labRoomLendingResultDAO.store(lrdlr);\r\n        LabRoomLending lrdl = labRoomService.findLabRoomLendingById(idKey);\r\n\r\n        if (\"2\".equals(l.getCDictionary().getCNumber())) {// 字典表中2为审核通过\r\n            lrdl.setLendingStatus(3);// 3即为审核通过\r\n            labRoomLendingDAO.store(lrdl);\r\n        }\r\n        if (\"3\".equals(l.getCDictionary().getCNumber())) {// 字典表中3为审核拒绝\r\n            lrdl.setLendingStatus(2);// 2即为审核拒绝\r\n            labRoomLendingDAO.store(lrdl);\r\n        }\r\n        return \"redirect:/labRoom/labRoomLendList?page=1\";\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室教师信誉积分管理\r\n     *\r\n     * author:周志辉\r\n     * date:2017.8.14\r\n     *****************************/\r\n    @RequestMapping(\"/listLabRoomTeacherCreditManage\")\r\n    public ModelAndView listLabRoomTeacherCreditManage(@RequestParam int page,\r\n                                                       @ModelAttribute User user, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        int pageSize = 20;// 每页20条记录\r\n        // 查询出来的总记录条数\r\n        int totalRecords = labRoomReservationService\r\n                .getCountTeacherCreditWarningByQuery(user);\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<User> users = labRoomReservationService\r\n                .findTeacherCreditWarningByQuery(page, pageSize, user);\r\n        String currAuth = request.getSession().getAttribute(\"selected_role\").toString();\r\n        if (\"ROLE_STUDENT\".equals(currAuth)) {// 学生\r\n            // 查询出来的总记录条数\r\n            totalRecords = labRoomReservationService\r\n                    .getCountStudentCreditWarningByQuery(user,request);\r\n            // 分页信息\r\n            pageModel = shareService.getPage(page, pageSize,\r\n                    totalRecords);\r\n            // 根据分页信息查询出来的记录\r\n            users = labRoomReservationService\r\n                    .findStudentCreditWarningByQuery(page, pageSize, user, request);\r\n        }\r\n        User userDetail = shareService.getUser();\r\n        mav.addObject(\"me\", userDetail);\r\n        mav.addObject(\"users\", users);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        if (\"ROLE_STUDENT\".equals(currAuth)) {// 学生\r\n            mav.setViewName(\"labroom/lab_room_reservation/listLabRoomStudentCreditManage.jsp\");\r\n        } else {\r\n            mav.setViewName(\"labroom/lab_room_reservation/listLabRoomTeacherCreditManage.jsp\");\r\n        }\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 查询扣分纪录\r\n     *\r\n     * author:周志辉\r\n     * date:2017.10.9\r\n     *****************************/\r\n    @RequestMapping(\"/creditRecord\")\r\n    public ModelAndView creditRecord(@RequestParam String username) {\r\n        ModelAndView mav = new ModelAndView();\r\n        List<LabRoomDeviceReservationCredit> listLabRoomDeviceReservationCredit = labRoomDeviceReservationCreditService\r\n                .findCreditByUsername(username);\r\n        List<LabRoomStationReservationCredit> listLabRoomStationReservationCredit = labRoomReservationService\r\n                .findCreditByUsername(username);\r\n        List<LabRoomReservationCredit> listLabRoomReservationCredit = labReservationService.findCreditByUsername(username);\r\n        mav.addObject(\"listLabRoomDeviceReservationCredit\",\r\n                listLabRoomDeviceReservationCredit);\r\n        mav.addObject(\"listLabRoomStationReservationCredit\", listLabRoomStationReservationCredit);\r\n        mav.addObject(\"listLabRoomReservationCredit\", listLabRoomReservationCredit);\r\n        mav.setViewName(\"labroom/lab_room_reservation/userCreditRecord.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室教师信誉积分管理\r\n     *\r\n     * author:周志辉\r\n     * date:2017.8.14\r\n     *****************************/\r\n    @RequestMapping(\"/initializeTeacherCredit\")\r\n    public String initializeTeacherCredit(@RequestParam int page) {\r\n        List<User> users = labRoomReservationService.findTeacherByQuery();\r\n        for (User user : users) {\r\n            if (\"1\".equals(user.getUserRole())) {\r\n                user.setCreditScore(100);\r\n                userDAO.store(user);\r\n            }\r\n        }\r\n\r\n        return \"redirect:/labRoom/listLabRoomTeacherCreditManage?page=1\";\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室教师信誉积分管理\r\n     *\r\n     * author:周志辉\r\n     * date:2017.8.14\r\n     *****************************/\r\n    @RequestMapping(\"/initializeStudentCredit\")\r\n    public String initializeStudentCredit(@RequestParam int page) {\r\n        List<User> users = labRoomReservationService.findStudentByQuery();\r\n        for (User user : users) {\r\n            if (\"0\".equals(user.getUserRole())) {\r\n                user.setCreditScore(100);\r\n                userDAO.store(user);\r\n            }\r\n        }\r\n\r\n        return \"redirect:/labRoom/listLabRoomStudentCreditManage?page=1\";\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室教师信誉积分管理\r\n     *\r\n     * author:周志辉\r\n     * date:2017.8.14\r\n     *****************************/\r\n    @RequestMapping(\"/listLabRoomStudentCreditManage\")\r\n    public ModelAndView listLabRoomStudentCreditManage(@RequestParam int page,\r\n                                                       @ModelAttribute User user, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n\r\n        int pageSize = 20;// 每页20条记录\r\n        // 查询出来的总记录条数\r\n        int totalRecords = labRoomReservationService\r\n                .getCountStudentCreditWarningByQuery(user,request);\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<User> users = labRoomReservationService\r\n                .findStudentCreditWarningByQuery(page, pageSize, user, request);\r\n        mav.addObject(\"me\", shareService.getUser());\r\n        mav.addObject(\"users\", users);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"labroom/lab_room_reservation/listLabRoomStudentCreditManage.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 编辑机培训进修登记\r\n     *\r\n     * author:周志辉\r\n     * date:2017.8.16\r\n     *****************************/\r\n    @RequestMapping(\"/editLabWorkerTraining\")\r\n    public ModelAndView editLabWorkerTraining(@RequestParam int labWorkerId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        mav.addObject(\"labWorkerTraining\", new LabWorkerTraining());\r\n        List<CDictionary> trainingTypes = shareService\r\n                .getCDictionaryData(\"c_lab_room_training_type\");\r\n        mav.addObject(\"trainingTypes\", trainingTypes);\r\n        mav.addObject(\"labWorkerId\", labWorkerId);\r\n        mav.setViewName(\"labroom/lab/lab_room/editLabWorkerTraining.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 保存实验室队伍培训进修登记\r\n     * <p>\r\n     * author 周志辉 2017.08.16\r\n     */\r\n    @RequestMapping(\"/saveLabWorkerTraining\")\r\n    public String saveLabWorkerTraining(\r\n            @ModelAttribute LabWorkerTraining labWorkerTraining,\r\n            @RequestParam int labWorkerId) {\r\n\r\n        labWorkerTraining.setLabWorker(labWorkerDAO\r\n                .findLabWorkerById(labWorkerId));\r\n        labWorkerTrainingDAO.store(labWorkerTraining);\r\n        // 获取所有培训纪录取最后一次插入的数据\r\n        // List<LabWorkerTraining>\r\n        // labWorkerTrainings=labWorkerTrainingService.findAllLabWorkerTrainings(0,\r\n        // -1);\r\n        // LabWorkerTraining\r\n        // labWorkerTrainingDetail=labWorkerTrainings.get(labWorkerTrainings.size()-1);\r\n        return \"redirect:/labRoom/listLabWorkerTraining?currpage=1&labWorkerId=\" + labWorkerId;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：给实验室队伍培训进修上传文档\r\n     * author 周志辉\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/labWorkerTrainingDocumentUpload\")\r\n    public ModelAndView labWorkerTrainingDocumentUpload(HttpServletRequest request,\r\n                                                        HttpServletResponse response, BindException errors, Integer id)\r\n            throws Exception {\r\n        ModelAndView mav = new ModelAndView();\r\n        labWorkerTrainingService.labWorkerTrainingDocumentUpload(request,\r\n                response, id, 2);\r\n        mav.setViewName(\"redirect:/labRoom/labWorkerTrainingDetail?labWorkerTrainingId=\" + id + \"&flag=0\");\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 实训室队伍培训进修详情\r\n     *\r\n     * author:周志辉\r\n     * @param\r\n     * date:2018.08.21\r\n     *****************************/\r\n    @RequestMapping(\"/labWorkerTrainingDetail\")\r\n    public ModelAndView labWorkerTrainingDetail(\r\n            @RequestParam int labWorkerTrainingId, int flag) {\r\n        ModelAndView mav = new ModelAndView();\r\n        mav.addObject(\"flag\", flag);\r\n        mav.addObject(\"labWorkerTraining\", labWorkerTrainingService\r\n                .findLabWorkerTrainingDetailByPrimaryKey(labWorkerTrainingId));\r\n        mav.addObject(\"labWorkerId\", labWorkerTrainingService\r\n                .findLabWorkerTrainingDetailByPrimaryKey(labWorkerTrainingId)\r\n                .getLabWorker().getId());\r\n        mav.setViewName(\"labroom/lab/lab_room/labWorkerTrainingDetail.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************\r\n     * 功能：实验室管理--培训计划--已通过名单列表 作者：周志辉 日期：2017-08-21\r\n     ***************************************/\r\n    @RequestMapping(\"/managePermitUser\")\r\n    public ModelAndView managePermitUser(\r\n            @ModelAttribute LabRoomPermitUser labRoomPermitUser,\r\n            @RequestParam int labRoomId, int currpage) {\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = 20;\r\n        int totalRecords = 0;\r\n        if (labRoomService.findPermitUserByLabRoomId(labRoomPermitUser,\r\n                labRoomId, 1, -1) != null) {\r\n            totalRecords = labRoomService.findPermitUserByLabRoomId(labRoomId,\r\n                    1, -1).size();\r\n        }\r\n        mav.addObject(\"allStudents\",\r\n                labRoomService.findPermitUserByLabRoomId(labRoomId, 1, -1));\r\n        List<LabRoomPermitUser> students = labRoomService\r\n                .findPermitUserByLabRoomId(labRoomPermitUser, labRoomId,\r\n                        currpage, pageSize);\r\n        mav.addObject(\"students\", students);\r\n        mav.addObject(\"student\", new LabRoomPermitUser());\r\n\r\n        mav.addObject(\"labRoomId\", labRoomId);\r\n        mav.addObject(\"pageModel\",\r\n                shareService.getPage(currpage, pageSize, totalRecords));\r\n        mav.addObject(\"currpage\", currpage);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.setViewName(\"labroom/lab/lab_room/managePermitUser.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：已培训名单删除\r\n     * @param id\r\n     * author：廖文辉\r\n     * date:2018-09-29\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deletePermitUser\")\r\n    public ModelAndView deletePermitUser(@RequestParam int id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomPermitUser permitUser = labRoomPermitUserDAO.findLabRoomPermitUserById(id);\r\n        String username = permitUser.getUser().getUsername();\r\n        int labRoomId = permitUser.getLabRoom().getId();\r\n        if (permitUser.getFlag() == 2) {// 集训通过的人，如果删除的话需要将集训结果置为未通过并重新计算培训的通过率\r\n            LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(labRoomId);\r\n            for (LabRoomTraining training : labRoom.getLabRoomTrainings()) {\r\n                int trainingId = training.getId();\r\n                List<LabRoomTrainingPeople> peoples = labRoomDeviceService.findLabRoomTrainingPeoplesByTrainingId(trainingId);\r\n                for (LabRoomTrainingPeople labRoomTrainingPeople : peoples) {\r\n                    if (labRoomTrainingPeople.getUser().getUsername().equals(username)) {//是当前用户\r\n                        // 将集训结果置为未通过\r\n                        //CTrainingResult result = cTrainingResultDAO.findCTrainingResultByPrimaryKey(2);\r\n                        CDictionary result = shareService.getCDictionaryByCategory(\"c_training_result\", \"2\");\r\n                        labRoomTrainingPeople.setCDictionary(result);\r\n                        labRoomTrainingPeopleDAO.store(labRoomTrainingPeople);\r\n                    }\r\n                }\r\n\r\n                // 重新计算培训的通过率\r\n                if (training.getCDictionary().getId() == 2) {\r\n                    // 该培训的培训人\r\n                    Set<LabRoomTrainingPeople> trainingpeoples = training.getLabRoomTrainingPeoples();\r\n                    // 根据培训id查询培训通过的人\r\n                    List<LabRoomTrainingPeople> passPeoples = labRoomDeviceService.findPassLabRoomTrainingPeopleByTrainId(training.getId());\r\n                    // 计算通过率\r\n                    double a = passPeoples.size();\r\n                    double b = trainingpeoples.size();\r\n                    double c = a / b;\r\n                    // 获取格式化对象\r\n                    NumberFormat nt = NumberFormat.getPercentInstance();\r\n                    // 设置百分数精确度2即保留两位小数\r\n                    nt.setMinimumFractionDigits(2);\r\n                    String s = nt.format(c);\r\n                    training.setPassRate(s);\r\n                    labRoomTrainingDAO.store(training);\r\n                }\r\n            }\r\n        }\r\n        labRoomDeviceService.deleteLabRoomPermitUser(permitUser);\r\n        mav.setViewName(\"redirect:/labRoom/managePermitUser?labRoomId=\" + labRoomId + \"&currpage=1\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据姓名、工号查询当前登录人所在学院的用户 作者：周志辉\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/findStudentByCnameAndUsername\")\r\n    public @ResponseBody\r\n    String findStudentByCnameAndUsername(@RequestParam String cname,\r\n                                         String username, Integer page, Integer labRoomId) {\r\n\r\n        User u = shareService.getUser();\r\n        String academyNumber = \"\";\r\n        if (u.getSchoolAcademy() != null) {\r\n            academyNumber = u.getSchoolAcademy().getAcademyNumber();\r\n        }\r\n        User user = new User();\r\n        user.setCname(cname);\r\n        user.setUsername(username);\r\n\r\n        // 分页开始\r\n        int totalRecords = labRoomService.findStudentByCnameAndUsername(user,\r\n                academyNumber, labRoomId);\r\n        int pageSize = 20;\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<User> userList = labRoomService.findStudentByCnameAndUsername(\r\n                user, academyNumber, labRoomId, page, pageSize);\r\n        String s = \"\";\r\n        for (User d : userList) {\r\n            String academy = \"\";\r\n            if (d.getSchoolAcademy() != null) {\r\n                academy = d.getSchoolAcademy().getAcademyName();\r\n            }\r\n            s += \"<tr>\" + \"<td><input type='checkbox' name='CK_name' value='\"\r\n                    + d.getUsername() + \"'/></td>\" + \"<td>\" + d.getCname()\r\n                    + \"</td>\" + \"<td>\" + d.getUsername() + \"</td>\" + \"<td>\"\r\n                    + academy + \"</td>\" +\r\n\r\n                    \"</tr>\";\r\n        }\r\n\r\n        int previousPage;\r\n        int nextPage;\r\n        if (page == 1) {\r\n            previousPage = page;\r\n        } else {\r\n            previousPage = page - 1;\r\n        }\r\n\r\n        if (page == (totalRecords + pageSize - 1) / pageSize) {\r\n            nextPage = page;\r\n        } else {\r\n            nextPage = page + 1;\r\n        }\r\n        s += \"<tr><td colspan='6'>\"\r\n                + \"<a href='javascript:void(0)' onclick='addStudent(1);'>\"\r\n                + \"首页\" + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='addStudent(\"\r\n                + previousPage\r\n                + \");'>\"\r\n                + \"上一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='addStudent(\"\r\n                + nextPage\r\n                + \",\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"下一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='addStudent(\"\r\n                + (totalRecords + pageSize - 1) / pageSize\r\n                + \");'>\"\r\n                + \"末页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"当前第\"\r\n                + page\r\n                + \"页&nbsp; 共\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \"页  \"\r\n                + totalRecords\r\n                + \"条记录\"\r\n                + \"</td></tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：保存集中培训学生后门 作者：周志辉 日期：2017-08-21\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/savePermitUser\")\r\n    public ModelAndView savePermitUser(@RequestParam String usernameStr,\r\n                                       @RequestParam int labRoomId) {\r\n        String[] array = usernameStr.split(\";\");\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的培训\r\n        LabRoom labRoom = labRoomService.findLabRoomByPrimaryKey(labRoomId);\r\n        for (String i : array) {\r\n            // username对应的用户\r\n            LabRoomPermitUser student = new LabRoomPermitUser();\r\n            User u = userDAO.findUserByPrimaryKey(i);\r\n            student.setUser(u);\r\n            student.setLabRoom(labRoom);\r\n            student.setFlag(3);// 标记位（1 单独培训通过 2 集训通过 3 集训后门）\r\n            labRoomPermitUserDAO.store(student);\r\n        }\r\n        mav.setViewName(\"redirect:/labRoom/managePermitUser?labRoomId=\"\r\n                + labRoomId + \"&currpage=1\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * @throws UnsupportedEncodingException\r\n     * Description：删除培训进修登记文档\r\n     * author 周志辉\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabWorkerTrainingDocument\")\r\n    public ModelAndView deleteLabWorkerTrainingDocument(@RequestParam int id,\r\n                                                        int labWorkerTrainingId) {\r\n        // 新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的设备图片\r\n        CommonDocument doc = commonDocumentService\r\n                .findCommonDocumentByPrimaryKey(id);\r\n        commonDocumentService.deleteCommonDocument(doc);\r\n        mav.setViewName(\"redirect:/labRoom/labWorkerTrainingDetail?labWorkerTrainingId=\" + labWorkerTrainingId + \"&flag=0\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 实验室人员培训进修登记列表\r\n     * <p>\r\n     * author 周志辉 2017.08.29\r\n     */\r\n    @RequestMapping(\"/listLabWorkerTraining\")\r\n    public ModelAndView listLabWorkerTraining(@RequestParam int currpage, int labWorkerId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = CommonConstantInterface.INT_PAGESIZE;\r\n        int totalRecords = labRoomService.findAllLabWorkerTrainingByQuery(1, -1, labWorkerId).size();\r\n        mav.addObject(\"pageModel\",\r\n                shareService.getPage(currpage, pageSize, totalRecords));\r\n        mav.addObject(\"listLabWorkerTraining\", labRoomService\r\n                .findAllLabWorkerTrainingByQuery(currpage, pageSize, labWorkerId));\r\n        mav.addObject(\"labWorkerId\", labWorkerId);\r\n        mav.setViewName(\"labroom/lab/lab_worker/listLabWorkerTraining.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 删除实验室数据\r\n     * <p>\r\n     * author hly 2015.07.28\r\n     */\r\n    @RequestMapping(\"/deleteLabWorkerTraining\")\r\n    public String deleteLabWorkerTraining(@RequestParam int labWorkerTrainingId) {\r\n        LabWorkerTraining labWorkerTraining = labWorkerTrainingService\r\n                .findLabWorkerTrainingByPrimaryKey(labWorkerTrainingId);\r\n        labWorkerTrainingService.deleteLabWorkerTraining(labWorkerTraining);\r\n        // labRoomService.deleteLabRoom(labRoomId); 真删 由于和实验项目的外键关系，会报错删不掉\r\n\r\n        return \"redirect:/labRoom/listLabWorkerTraining?currpage=1\";\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：删除实验室设备 作者：贺子� 时间�015-09-15\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomDeviceNewV\")\r\n    public ModelAndView deleteLabRoomDeviceNewV(\r\n            @RequestParam Integer labDeviceId) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室物联管理�\r\n        LabRoomDevice device = labRoomDeviceDAO\r\n                .findLabRoomDeviceByPrimaryKey(labDeviceId);\r\n        int id = device.getLabRoom().getId();\r\n        labRoomDeviceDAO.remove(device);\r\n        mav.setViewName(\"redirect:/visualization/addLabRoomDevice?id=\" + id);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据设备名称、设备编号查询当前登录人所在学院的设备(可视化-实验室监控) 作者：李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/openVideoForV\")\r\n    public @ResponseBody\r\n    String openVideoForV(@RequestParam Integer roomId) {\r\n        String url = \"\";\r\n        // id对应的实验分室\r\n        LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(roomId);\r\n        // 物联设备\r\n        Set<LabRoomAgent> agents = labRoom.getLabRoomAgents();\r\n        LabRoomAgent agent = null;\r\n        for (LabRoomAgent a : agents) {\r\n//            CDictionary cDictionary = shareService.findCDictionaryByPrimaryKey(a.getCDictionary().getId());\r\n//            if (cDictionary.getCNumber().equals(\"3\") && cDictionary.getCCategory().equals(\"c_agent_type\")) {// 视频\r\n//                agent = a;\r\n//                break;\r\n//            }\r\n        }\r\n        if (agent != null) {\r\n            // LabRoomAgent\r\n            // agent=labRoomAgentDAO.findLabRoomAgentByPrimaryKey(id);\r\n            // 根据实验室判断实验室所属学院的视频为一期或者二期\r\n\r\n            /*\r\n             * if(time==2){//二期 System.out.println(\"-----\");\r\n             * url=\"http://\"+agent.\r\n             * getHardwareIp()+\":\"+agent.getHardwarePort()+\"/PageCam\"\r\n             * +agent.getHardwareRemark(); }else{//一期\r\n             * System.out.println(\"-++++\");\r\n             * url=\"http://\"+agent.getCommonServer()\r\n             * .getServerIp()+\"/webcu/index2.php?id=\"\r\n             * +agent.getHardwarePort()+\"&ip=\"+agent.getHardwareIp(); }\r\n             */\r\n            String[] ip = agent.getHardwareIp().split(\"\\\\.\");\r\n            String ip3 = ip[2] + ip[3];\r\n            url = \"rtmp://\" + agent.getCommonServer().getServerIp()\r\n                    + \":\" + agent.getCommonServer().getServerSn() + \"/live/\" + ip3;\r\n//\t\t\turl = \"http://\" + agent.getCommonServer().getServerIp()\r\n//\t\t\t\t\t+ \":8080/players/jwplayer6.html?stream=\" + ip3;\r\n\r\n            return htmlEncode(url);\r\n        } else {\r\n            return htmlEncode(url);\r\n        }\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：AJAX 根据设备名称、设备编号查询当前登录人所在学院的设备\r\n     * 作者：李小龙\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/appointment/openVideo2\")\r\n    public ModelAndView openVideo2(@RequestParam Integer id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验分室\r\n        LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(id);\r\n        // 物联设备\r\n        Set<LabRoomAgent> agents = labRoom.getLabRoomAgents();\r\n        LabRoomAgent agent = null;\r\n        for (LabRoomAgent a : agents) {\r\n            if (shareService.checkCDictionary(a.getCDictionary().getId(), \"3\", \"c_agent_type\")) {// 视频设备\r\n                agent = a;\r\n                break;\r\n            }\r\n        }\r\n        if (agent != null) {\r\n            String[] ip = agent.getHardwareIp().split(\"\\\\.\");\r\n            String ip3 = ip[3];\r\n            mav.addObject(\"agentPort\", agent.getCommonServer().getServerSn());\r\n            mav.addObject(\"agentIp\", agent.getCommonServer().getServerIp());\r\n            mav.addObject(\"agentRemark\", ip3);\r\n        }\r\n        mav.setViewName(\"labroom/lab/labVideo.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：下载文档\r\n     * author 周志辉\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/downloadLabWorkerTrainingDocument\")\r\n    public void downloadLabWorkerTrainingDocument(HttpServletRequest request,\r\n                                                  HttpServletResponse response, int id) {\r\n        // id对应的文档\r\n        CommonDocument doc = commonDocumentService\r\n                .findCommonDocumentByPrimaryKey(id);\r\n        softwareService.downloadFile(doc, request, response);\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：软件安装申请\r\n     *\r\n     *\r\n     ****************************************************************************/\r\n\r\n    @RequestMapping(\"/ceshi\")\r\n    public ModelAndView applyInstallSoftwares(@RequestParam int currPage,\r\n                                              @ModelAttribute Software software) {\r\n        ModelAndView mav = new ModelAndView();\r\n        mav.addObject(\"softwareReserve\", new SoftwareReserve());//新建申请单对象\r\n        int pageSize = 10;\r\n        int totalRecords = softwareService.findAllSoftwareByQuery(1, -1,\r\n                software).size();\r\n        List<Software> listSoftware = softwareService.findAllSoftwareByQuery(currPage, pageSize, software);\r\n        // 取实验室名称页面显示\r\n        Map<String, String> labRoomNames = new HashMap<>();\r\n        for (Software s : listSoftware) {\r\n            List<SoftwareRoomRelated> softwareRoomRelated = softwareService.findSoftwareRoomRelatedByRoomId(s.getId());\r\n            String labRoomName = \"\";\r\n            if (s.getLabRoom() != null && !\"\".equals(s.getLabRoom())) {\r\n                Query query = entityManager.createQuery(\"select l.labRoomName from LabRoom l where l.id =:labRoom\");\r\n                for (SoftwareRoomRelated  srr: softwareRoomRelated) {\r\n                    query.setParameter(\"labRoom\", Integer.valueOf(srr.getLabRoom().getId()));\r\n                }\r\n                List<String> labRooms = query.getResultList();\r\n                if (!labRooms.isEmpty()) {\r\n                    labRoomName = labRooms.get(0);\r\n                }\r\n            }\r\n            labRoomNames.put(s.getLabRoom(), labRoomName);\r\n        }\r\n        mav.addObject(\"labRoomNames\", labRoomNames);\r\n        //分页\r\n        mav.addObject(\"pageModel\", shareService.getPage(currPage, pageSize, totalRecords));\r\n        mav.addObject(\"listSoftware\", listSoftware);\r\n        mav.addObject(\"currPage\", currPage);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.addObject(\"pageModel\",\r\n                shareService.getPage(currPage, pageSize, totalRecords));\r\n        mav.addObject(\"softwareList\", systemService.loadSoftwares());\r\n//\t\tmav.addObject(\"termList\",systemService.loadSchoolTerms());//返回学期\r\n        mav.addObject(\"labList\", labRoomService.findLabRoomList());//返回实验室\r\n        mav.addObject(\"user\", shareService.getUser());//返回用户\r\n        mav.addObject(\"courses\", shareService.getMyCourse());//获取用户的课程列表\r\n        mav.setViewName(\"/labroom/lab/lab_room/applyInstallSoftwares.jsp\");\r\n        return mav;\r\n\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：软件申请列表\r\n     *\r\n     * @param labRoomLending 软件申请列表\r\n     * author:张愉\r\n     * date:2017-09-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/SoftwareReserveList\")\r\n    public ModelAndView softwareReserveList(\r\n            @ModelAttribute SoftwareReserve softwareReserve, Integer page, Integer isaudit, Integer tage,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 学期\r\n        List<SchoolTerm> terms = shareService.findAllSchoolTerms();\r\n        mav.addObject(\"terms\", terms);\r\n        mav.addObject(\"softwareReserve\", softwareReserve);\r\n        User user = shareService.getUserDetail();\r\n        // 查询出所有的设备设备预约记录\r\n        int pageSize = 10;// 每页10条记录\r\n        int totalRecords = labRoomService.findAllsoftwareLend(softwareReserve, page, pageSize, tage, isaudit).size();\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SoftwareReserve> softwareReserves = labRoomService.findAllsoftwareLend(softwareReserve, page, pageSize, tage, isaudit);\r\n        //判断所处审核阶段，关联到前端的按钮\r\n        if (softwareReserves != null) {\r\n            for (SoftwareReserve softwareReserve2 : softwareReserves) {\r\n                //先初始化为0\r\n                softwareReserve2.setButtonMark(0);\r\n                if (softwareReserve2.getState() != null) {\r\n                    //系主任审核阶段\r\n                    if (softwareReserve2.getState() == 2) {\r\n                        //当前登陆人是审核系主任\r\n                        List<User> deans = shareService.findDeansByAcademyNumber(user.getSchoolAcademy());\r\n                        if (deans != null) {\r\n                            for (User user2 : deans) {\r\n                                if (user2.getUsername().equals(softwareReserve2.getUser().getUsername())) {\r\n                                    softwareReserve2.setButtonMark(2);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    //实训室管理员审核阶段\r\n                    if (softwareReserve2.getState() == 3) {\r\n                        //当前登陆人是审核实训室管理员\r\n                        if (Boolean.TRUE.equals(labRoomDeviceService.getLabRoomAdmin(softwareReserve2.getLabRoom().getId(), user.getUsername()))) {\r\n                            softwareReserve2.setButtonMark(3);\r\n                        }\r\n                    }\r\n                    //实训中心主任审核阶段\r\n                    if (softwareReserve2.getState() == 4) {\r\n                        //当前登陆人是审核实验室中心主任\r\n                        if (user.getUsername().equals(softwareReserve2.getLabRoom().getLabCenter().getUserByCenterManager().getUsername())) {\r\n                            softwareReserve2.setButtonMark(4);\r\n                        }\r\n                    }\r\n                    //实训部主任审核阶段\r\n                    if (softwareReserve2.getState() == 5) {\r\n                        //当前登陆人是审核实训部主任\r\n                        List<User> labRoomCenterDirectors = shareService.findUsersByAuthorityId(3);\r\n                        if (labRoomCenterDirectors != null) {\r\n                            for (User user2 : labRoomCenterDirectors) {\r\n                                if (user.getUsername().equals(user2.getUsername())) {\r\n                                    softwareReserve2.setButtonMark(5);\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        mav.addObject(\"softwareReserves\", softwareReserves);\r\n\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.addObject(\"isAudit\", isaudit);\r\n        mav.addObject(\"tage\", tage);\r\n\r\n        // 判断当前登录人是否为实验教务或者超级管理员或者是本中心主任\r\n        /*\r\n         * if (user.getAuthorities().size() > 0) { for (Authority a :\r\n         * user.getAuthorities()) { if (a.getId() == 7 || a.getId() == 4 ||\r\n         * a.getId() == 11) { mav.addObject(\"ca\", true); } } }\r\n         */\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"/labroom/lab/lab_room/softwareLendList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：查看安装软件申请\r\n     *\r\n     * author：张愉\r\n     * date:2017-09-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/softwareReserveInfoList\")\r\n    public ModelAndView softwareReserveInfoList(int idKey, int flag, int step) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 附件分为两类（ 1 申请说明 2安装说明 ）\r\n        SoftwareReserve software = softwareService\r\n                .findSoftwareReserveById(idKey);\r\n        List<CommonDocument> commonDocuments1 = new ArrayList<>();\r\n        List<CommonDocument> commonDocuments2 = new ArrayList<>();\r\n        mav.addObject(\"commonDocuments1\", commonDocuments1);\r\n        mav.addObject(\"commonDocuments2\", commonDocuments2);\r\n        mav.addObject(\"softwareReserve\", software);\r\n        // 查找审核记录\r\n        List<SoftwareReserveAudit> softwareReserveAudits = operationService\r\n                .findAllSoftwareReserveAuditBysoftwareReserveId(software\r\n                        .getId());\r\n        mav.addObject(\"softwareReserveAudits\", softwareReserveAudits);\r\n        // 查找可以预约的软件，暂时不做\r\n        mav.addObject(\"softwareList\", systemService.loadSoftwares());\r\n        mav.addObject(\"termList\", systemService.loadSchoolTerms());// 返回学期\r\n        mav.addObject(\"labList\", systemService.loadLabRooms());// 返回实验室\r\n        mav.addObject(\"user\", shareService.getUser());// 返回用户\r\n        mav.addObject(\"courses\", shareService.getMyCourse());// 获取用户的课程列表\r\n        mav.addObject(\"id\", idKey);\r\n        // 审核阶段\r\n//        int labroomid = software.getLabRoom().getId();\r\n//        List<LabRoomAdmin> labRoomAdmins = labRoomService\r\n//                .findAllLabRoomAdminsByLabRoomId(labroomid);\r\n        mav.addObject(\"step\", step);\r\n        // flag1为查看，2为可审核\r\n        mav.addObject(\"flag\", flag);\r\n        mav.setViewName(\"labroom/lab/lab_room/viewsoftwareReserve.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：软件申请列表-审核通过\r\n     *\r\n     * @param  软件申请列表\r\n     * author:张愉\r\n     * date:2017-09-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/SoftwareReserveAuditedList\")\r\n    public ModelAndView SoftwareReserveAuditedList(\r\n            @ModelAttribute SoftwareReserve softwareReserve, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.softwareLendTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SoftwareReserve> softwareReserves = labRoomService\r\n                .findAllsoftwareLendAudit(softwareReserve, page, pageSize, 3);\r\n        mav.addObject(\"softwareReserves\", softwareReserves);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"/labroom/lab/software/softwareReserveAudited.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：软件申请列表-审核中\r\n     *\r\n     * @param  软件申请列表\r\n     * author:张愉\r\n     * date:2017-09-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/SoftwareReserveAuditingList\")\r\n    public ModelAndView SoftwareReserveAuditingList(\r\n            @ModelAttribute SoftwareReserve softwareReserve, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.softwareLendTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SoftwareReserve> softwareReserves = labRoomService\r\n                .findAllsoftwareLendAudit(softwareReserve, page, pageSize, 1);\r\n        mav.addObject(\"softwareReserves\", softwareReserves);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"/labroom/lab/software/softwareReserveAuditing.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：软件申请列表-审核拒绝\r\n     *\r\n     * @param  软件申请列表\r\n     * author:张愉\r\n     * date:2017-09-30\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/SoftwareReserveAuditRefuseList\")\r\n    public ModelAndView SoftwareReserveAuditRefuseList(\r\n            @ModelAttribute SoftwareReserve softwareReserve, Integer page,\r\n            @ModelAttribute(\"selected_academy\") String acno) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 查询出所有的设备设备预约记录\r\n        int totalRecords = labRoomService.softwareLendTotals();\r\n        int pageSize = 10;// 每页10条记录\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SoftwareReserve> softwareReserves = labRoomService\r\n                .findAllsoftwareLendAudit(softwareReserve, page, pageSize, 2);\r\n        mav.addObject(\"softwareReserves\", softwareReserves);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.setViewName(\"/labroom/lab/software/softwareReserveAuditRefuse.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*****************************\r\n     * Description 查询扣分标准\r\n     *\r\n     * author:张愉\r\n     * date:2017.11.26\r\n     *****************************/\r\n    @RequestMapping(\"/getCreditOption\")\r\n    public ModelAndView getCreditOption() {\r\n        ModelAndView mav = new ModelAndView();\r\n        Set<CreditOption> creditOptions = creditOptionDAO.findAllCreditOptions();\r\n        mav.addObject(\"creditOptions\", creditOptions);\r\n        mav.setViewName(\"labroom/lab_room_reservation/getCreditOption.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * 功能：根据实验室id查寻实验分室\r\n     * 作者：李小龙\r\n     * 时间：2014-07-29\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/appointment/findLabRoomByLabAnnexId\")\r\n    public ModelAndView findLabRoomByLabAnnexId(@ModelAttribute LabRoom labRoom, @RequestParam Integer id, Integer page) {\r\n        //新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        //System.out.println(\"session中的id=\"+cid);\r\n        //查询表单的对象\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        int pageSize = 10;//每页20条记录\r\n        //查询出来的总记录条数\r\n        int totalRecords = labAnnexService.findLabRoomByLabAnnexId(labRoom, id).size();\r\n        //分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(pageSize, page, totalRecords);\r\n        //根据分页信息查询出来的记录\r\n        List<LabRoom> listLabRoom = labAnnexService.findLabRoomByLabAnnexId(labRoom, id, page, pageSize);\r\n        mav.addObject(\"listLabRoom\", listLabRoom);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        //实验室id\r\n        mav.addObject(\"id\", id);\r\n        mav.setViewName(\"labroom/lab/lab_room/labRoomList.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description:实验室管理--查看当前实验室下的阅读设备预约注意事项的人\r\n     * author: 贺子龙\r\n     * date: 2017-04-23\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/labRoom/viewLabRoomAttentionRecord\")\r\n    public ModelAndView viewLabRoomAttentionRecord(@RequestParam Integer labId, int page) {\r\n        // 新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = 20;// 每页20条记录\r\n        // 查询出来的总记录条数\r\n        int totalRecords = labRoomService.countLabRoomAttentionByLab(labId);\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(pageSize, page, totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<LabRoomAttention> attentions = labRoomService.findLabRoomAttentionByLab(labId, page, pageSize);\r\n        mav.addObject(\"attentions\", attentions);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n\r\n        mav.setViewName(\"labroom/lab/lab_room/viewLabRoomAttentionRecord.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description:实验室管理--查看当前实验室下的阅读设备预约注意事项的人(设备预约界面)\r\n     * author: 贺子龙\r\n     * date: 2017-04-23\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/viewLabRoomAttentionRecordDevice\")\r\n    public ModelAndView viewLabRoomAttentionRecordDevice(@RequestParam String deviceNumber, int page) {\r\n        // 新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        int pageSize = 20;// 每页20条记录\r\n        // 找到实验室设备\r\n        LabRoomDevice device = labRoomDeviceService.findLabRoomDeviceByDeviceNumber(deviceNumber);\r\n        // 找到学校设备\r\n        SchoolDevice schoolDevice = device.getSchoolDevice();\r\n        // 定义空list\r\n        List<LabRoomAttention> attentions;\r\n        // 定义总记录数并初始化为0\r\n        int totalRecords = 0;\r\n        // 如果设备没有注意事项，则按照设备显示；否则，按实验室显示\r\n        if (!EmptyUtil.isStringEmpty(device.getApplicationAttentions())) {\r\n            // 查询出来的总记录条数\r\n            totalRecords = labRoomService.countLabRoomAttentionByDevice(schoolDevice.getDeviceNumber());\r\n            // 根据分页信息查询出来的记录\r\n            attentions = labRoomService.findLabRoomAttentionByDevice(deviceNumber, page, pageSize);\r\n        } else {\r\n            // 找到实验室\r\n            int labId = device.getLabRoom().getId();\r\n            // 查询出来的总记录条数\r\n            totalRecords = labRoomService.countLabRoomAttentionByLab(labId);\r\n            // 根据分页信息查询出来的记录\r\n            attentions = labRoomService.findLabRoomAttentionByLab(labId, page, pageSize);\r\n        }\r\n        mav.addObject(\"attentions\", attentions);\r\n        // 分页信息\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize, totalRecords);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.addObject(\"totalRecords\", totalRecords);\r\n        mav.addObject(\"page\", page);\r\n        mav.addObject(\"pageSize\", pageSize);\r\n        mav.addObject(\"deviceNumber\", deviceNumber);\r\n\r\n        mav.setViewName(\"labroom/lab/lab_room/viewLabRoomAttentionRecord.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * Description\r\n     *\r\n     * @param name\r\n     * @param number\r\n     * @param deviceAddress\r\n     * @param page\r\n     * @param acno\r\n     * @param roomId        return\r\n     * @throws UnsupportedEncodingException\r\n     */\r\n    @RequestMapping(\"/findSchoolDeviceForLab\")\r\n    public @ResponseBody\r\n    String findSchoolDeviceForLab(@RequestParam String name, String number, String deviceAddress, Integer page,Integer type,\r\n                                  @ModelAttribute(\"selected_academy\") String acno, Integer roomId) {\r\n        SchoolDevice schoolDevice = new SchoolDevice();\r\n        schoolDevice.setDeviceName(name);\r\n        schoolDevice.setDeviceNumber(number);\r\n        schoolDevice.setDeviceAddress(deviceAddress);\r\n        // 分页开始\r\n        int totalRecords = schoolDeviceService.findSchoolDeviceForLabCount(schoolDevice, roomId,type);\r\n        int pageSize = 10;\r\n        Map<String, Integer> pageModel = shareService.getPage(page, pageSize,\r\n                totalRecords);\r\n        // 根据分页信息查询出来的记录\r\n        List<SchoolDevice> deviceList = schoolDeviceService\r\n                .findSchoolDeviceForLab(schoolDevice, roomId, page, pageSize,type);\r\n        String s = \"\";\r\n        for (SchoolDevice d : deviceList) {\r\n            s += \"<tr>\" + \"<td>\" + d.getDeviceNumber() + \"</td>\" + \"<td>\"\r\n                    + d.getDeviceName() + \"</td>\" + \"<td>\"\r\n                    + d.getDevicePattern() + \"</td>\";\r\n            if (d.getUserByKeepUser() != null\r\n                    && d.getUserByKeepUser().getCname() != null) {\r\n                s += \"<td>\" + d.getUserByKeepUser().getCname() + \"</td>\";\r\n            } else {\r\n                s += \"<td></td>\";\r\n            }\r\n            s += \"<td>\" + d.getDeviceFormat() + \"</td>\" + \"<td>\"\r\n                    + d.getDevicePrice() + \"</td>\";\r\n            if (d.getDeviceAddress() != null) {\r\n                s += \"<td>\" + d.getDeviceAddress() + \"</td>\";\r\n            } else {\r\n                s += \"<td></td>\";\r\n            }\r\n            s += \"<td><input type='checkbox' name='CK' value='\"\r\n                    + d.getDeviceNumber() + \"'/></td>\" + \"</tr>\";\r\n        }\r\n        s += \"<tr><td colspan='7'>\"\r\n                + \"<a href='javascript:void(0)' onclick='firstForLab(\"\r\n                + 1\r\n                + \",\"\r\n                + type\r\n                + \");'>\"\r\n                + \"首页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='previousForLab(\"\r\n                + page\r\n                + \",\"\r\n                + type\r\n                + \");'>\"\r\n                + \"上一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='nextForLab(\"\r\n                + page\r\n                + \",\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \",\"\r\n                + type\r\n                + \");'>\"\r\n                + \"下一页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"<a href='javascript:void(0)' onclick='lastForLab(\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \");'>\"\r\n                + \"末页\"\r\n                + \"</a>&nbsp;\"\r\n                + \"当前第\"\r\n                + page\r\n                + \"页&nbsp; 共\"\r\n                + pageModel.get(\"totalPage\")\r\n                + \"页  \" + totalRecords + \"条记录\" + \"</td></tr>\";\r\n        return htmlEncode(s);\r\n    }\r\n\r\n    /**\r\n     * Description 电源控制器远程开关\r\n     *\r\n     * @param flag   0 关电源，1 开电源\r\n     * @param insUid 硬件id\r\n     *               return\r\n     * @throws IOException author 陈乐为 2018-9-10\r\n     */\r\n    @ResponseBody\r\n    @RequestMapping(\"/openAgent\")\r\n    public String openAgent(@RequestParam Integer flag, String insUid) throws IOException {\r\n        return labRoomService.syncSmartAgent(flag, insUid);\r\n    }\r\n\r\n    /**\r\n     * Description 新版物联-电源控制器-开关电源\r\n     *\r\n     * @param flag    1开，0关\r\n     * @param agentId 硬件id\r\n     *                return\r\n     * @throws IOException author 陈乐为 2019-3-5\r\n     */\r\n    @RequestMapping(\"/openAgentNew\")\r\n    public @ResponseBody\r\n    String openAgentNew(@RequestParam Integer flag, Integer agentId) throws IOException {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            return URLEncoder.encode(iotService.sendPowerBoxInterfaceByJWT(flag, agentId), \"utf-8\");\r\n//            return URLEncoder.encode(iotService.sendOpenAgentInterfaceByJWT(flag,agentId),\"utf-8\");\r\n        } else {\r\n            return labRoomService.sendOpenAgentInterfaceByJWT(flag, agentId);\r\n        }\r\n    }\r\n\r\n    /***\r\n     * Description 新版物联-智能电源盒子-开关电源\r\n     * @param flag 1:开 0：关\r\n     * @param agentId 设备Id\r\n     * return\r\n     * @throws IOException\r\n     * author chenjiasen 2019-12-09\r\n     */\r\n    @RequestMapping(value = \"/openPowerBoxNew\", method = RequestMethod.POST)\r\n    public @ResponseBody\r\n    String openPowerBoxNew(@RequestParam Integer flag, Integer agentId) throws IOException {\r\n        return URLEncoder.encode(iotService.sendPowerBoxInterfaceByJWT(flag, agentId), \"utf-8\");\r\n    }\r\n\r\n    /***\r\n     * Description 新版物联-智能开关盒子-开门\r\n     * @param agentId 设备Id\r\n     * return\r\n     * author chenjiasen 2019-12-09\r\n     */\r\n    @RequestMapping(value = \"/openBoxNew\", method = RequestMethod.POST)\r\n    public @ResponseBody\r\n    String openBoxNew(@RequestParam Integer agentId) {\r\n        return iotService.sendBoxInterfaceByJWT(agentId);\r\n    }\r\n\r\n    @RequestMapping(value = \"/viewProjectors/{ctrl_ip}/{idKey}\")\r\n    public ModelAndView viewProjectors(@PathVariable String ctrl_ip, @PathVariable Integer idKey) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 实验室\r\n        LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(idKey);\r\n        mav.addObject(\"labRoom\", labRoom);\r\n        StringBuilder hql = new StringBuilder(\"select * from lab_projector c where 1=1\");\r\n        hql.append(\" and c.ctrl_ip= ?1\");\r\n        Query queryList = entityManager.createNativeQuery(hql.toString());\r\n        queryList.setParameter(1, ctrl_ip);\r\n        mav.addObject(\"queryHQLs\", queryList.getResultList());\r\n\r\n        mav.setViewName(\"labroom/lab/lab_room/viewProjectors.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**************************************************************************************\r\n     * description：导入物联和实验室管理员\r\n     * @throws ParseException\r\n     * author：廖文辉\r\n     * date：2018-12-25\r\n     **************************************************************************************/\r\n    @RequestMapping(\"/importLabRoomAdmin\")\r\n    public @ResponseBody\r\n    String[] importLabRoomAdmin(HttpServletRequest request, @RequestParam Integer roomId, @RequestParam int type, @RequestParam Integer typeId) throws IOException {\r\n        //获取文件地址\r\n        String fileName = labRoomService.adminUpload(request);\r\n        //获取服务器地址\r\n        String logoRealPathDir = request.getSession().getServletContext().getRealPath(\"/\");\r\n        //获取文件全部地址\r\n        String filePath = logoRealPathDir + fileName;\r\n        if (filePath.endsWith(\"xls\") || filePath.endsWith(\"xlsx\")) {\r\n            return labRoomService.importLabRoomAdmin(filePath, roomId, typeId);\r\n        } else {\r\n            return new String[]{};\r\n        }\r\n    }\r\n\r\n    /**************************************************************************************\r\n     * description：导入仪器设备\r\n     * @throws ParseException\r\n     * author：廖文辉\r\n     * date：2018-12-26\r\n     **************************************************************************************/\r\n    @RequestMapping(\"/importLabRoomDevice\")\r\n    public @ResponseBody\r\n    String[] importLabRoomDevice(HttpServletRequest request, @RequestParam Integer roomId, @RequestParam int type) throws Exception {\r\n        //获取文件地址\r\n        String fileName = labRoomService.adminUpload(request);\r\n        //获取服务器地址\r\n        String logoRealPathDir = request.getSession().getServletContext().getRealPath(\"/\");\r\n        //获取文件全部地址\r\n        String filePath = logoRealPathDir + fileName;\r\n        if (filePath.endsWith(\"xls\") || filePath.endsWith(\"xlsx\")) {\r\n            return labRoomService.importLabRoomDevice(filePath, roomId);\r\n        } else {\r\n            return new String[]{};\r\n        }\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：删除授权名单\r\n     * author 廖文辉\r\n     * date 2019-01-10\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/deleteLabRoomAuthorizeUser\")\r\n    public ModelAndView deleteLabRoomAuthorizeUser(@RequestParam Integer id, @RequestParam int type) {\r\n        // 新建ModelAndView对象；\r\n        ModelAndView mav = new ModelAndView();\r\n        LabRoomAdmin authUser = labRoomAdminDAO.findLabRoomAdminByPrimaryKey(id);\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        if (\"newest\".equals(pConfigDTO.newServer) || \"version3\".equals(pConfigDTO.newServer)) {\r\n            //删除授权名单时，判断当前时间若处于权限时间内，则删除该授权名单权限\r\n            if (authUser.getStartDate().before(Calendar.getInstance()) && authUser.getEndDate().after(Calendar.getInstance())) {\r\n                iotService.changeAgentInfoTodayToIOT(shareService.getCurrUsername(), authUser.getLabRoom().getId(), authUser.getId().toString(), \"REFRESHAUTH\", \"DELETE\");\r\n            }\r\n        }\r\n\r\n        labRoomAdminDAO.remove(authUser);\r\n        mav.setViewName(\"redirect:/labRoom/getLabRoom?currpage=1&id=\" + authUser.getLabRoom().getId() + \"&type=\" + type);\r\n        return mav;\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：保存授权名单\r\n     * author 廖文辉\r\n     * date 2019-01-10\r\n     ****************************************************************************/\r\n    @ResponseBody\r\n    @RequestMapping(\"/saveLabRoomAuthorized\")\r\n    public String saveLabRoomAuthorized(@ModelAttribute LabRoomAdmin labRoomAdmin, @RequestParam String[] array, @RequestParam Integer roomId, HttpServletRequest request) {\r\n        for (String username : array) {\r\n            // id对应的实验室\r\n            labRoomAdmin=new LabRoomAdmin();\r\n            LabRoom labRoom = labRoomDAO.findLabRoomByPrimaryKey(roomId);\r\n            if (request != null) {\r\n                Calendar calendarStartDate = Calendar.getInstance();\r\n                Calendar calendarEndDate = Calendar.getInstance();\r\n                Calendar calendarStartTime = Calendar.getInstance();\r\n                Calendar calendarEndTime = Calendar.getInstance();\r\n                String startDate = request.getParameter(\"startDate\");\r\n                String endDate = request.getParameter(\"endDate\");\r\n                String startTime = request.getParameter(\"startTime\");\r\n                String endTime = request.getParameter(\"endTime\");\r\n                SimpleDateFormat sdf = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                SimpleDateFormat sdf1 = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n                SimpleDateFormat sdf2 = new SimpleDateFormat(\"HH:mm\");\r\n                SimpleDateFormat sdf3 = new SimpleDateFormat(\"HH:mm\");\r\n                try {\r\n                    Date startDateTime = sdf.parse(startDate);\r\n                    calendarStartDate.setTime(startDateTime);\r\n                    Date endDateTime = sdf1.parse(endDate);\r\n                    calendarEndDate.setTime(endDateTime);\r\n                    Date startTimeTime = sdf2.parse(startTime);\r\n                    calendarStartTime.setTime(startTimeTime);\r\n                    Date endTimeTime = sdf3.parse(endTime);\r\n                    calendarEndTime.setTime(endTimeTime);\r\n                    labRoomAdmin.setStartDate(calendarStartDate);\r\n                    labRoomAdmin.setEndDate(calendarEndDate);\r\n                    labRoomAdmin.setStartTime(calendarStartTime);\r\n                    labRoomAdmin.setEndTime(calendarEndTime);\r\n                } catch (ParseException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n            labRoomAdmin.setUser(userDAO.findUserByUsername(username));\r\n            labRoomAdmin.setTypeId(3);\r\n            labRoomAdmin.setLabRoom(labRoom);\r\n            labRoomAdmin = labRoomAdminDAO.store(labRoomAdmin);\r\n            labRoomAdminDAO.flush();\r\n            iotService.changeAgentInfoTodayToIOT(shareService.getCurrUsername(), roomId, labRoomAdmin.getId().toString(),\"REFRESHAUTH\",\"ADD\");\r\n        }\r\n        return \"success\";\r\n    }\r\n\r\n    /****************************************************************************\r\n     * Description：保存授权名单\r\n     * author 廖文辉\r\n     * date 2019-01-10\r\n     ****************************************************************************/\r\n    @RequestMapping(\"/updateLabRoomAuthorizeUser\")\r\n    public ModelAndView updateLabRoomAuthorizeUser(@RequestParam Integer id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // id对应的实验室物联硬件\r\n        LabRoomAdmin labRoomAdmin = labRoomAdminDAO.findLabRoomAdminByPrimaryKey(id);\r\n        mav.addObject(\"labRoomAdmin\", labRoomAdmin);\r\n        mav.addObject(\"id\", id);\r\n        User user = shareService.getUser();\r\n        mav.addObject(\"user\", user);\r\n        mav.setViewName(\"labroom/lab/lab_room/updateLabRoomAuthorizeUser.jsp\");\r\n\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * 门禁进出列表页面\r\n     *\r\n     * @param username    用户名\r\n     * @param cname       用户姓名\r\n     * @param startDate   起始门禁刷卡时间\r\n     * @param endDate     结束门禁刷卡时间\r\n     * @param labRoomName 实验室名称\r\n     * @param request     请求\r\n     *                    return 页面\r\n     *                    author 黄保钱 2019-3-4\r\n     */\r\n    @RequestMapping(\"/listLabDoorRecord\")\r\n    public ModelAndView listLabDoorRecord(Integer currpage, String username, String cname, String startDate,\r\n                                          String endDate, String labRoomName, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        mav.addObject(\"username\", username);\r\n        mav.addObject(\"cname\", cname);\r\n        mav.addObject(\"startDate\", startDate);\r\n        mav.addObject(\"endDate\", endDate);\r\n        mav.addObject(\"labRoomName\", labRoomName);\r\n        List<Object[]> listLabDoorRecords = labRoomService.getLabDoorRecords(username, cname, startDate, endDate, labRoomName);\r\n        mav.addObject(\"listLabDoorRecords\", listLabDoorRecords);\r\n        // 分页\r\n        int pageSize = 10;\r\n        int totalRecords = labRoomService.getLabDoorRecordsNum(username, cname, startDate, endDate, labRoomName);\r\n        Map<String, Integer> pageModel = shareService.getPage(currpage, pageSize, totalRecords);\r\n        mav.addObject(\"pageModel\", pageModel);\r\n        mav.setViewName(\"/labroom/lab/lab_room/listLabDoorRecord.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * Description 保存批量设置实验室管理员/物联管理员\r\n     *\r\n     * @param request return\r\n     *                author 陈乐为 2019-4-3\r\n     */\r\n    @RequestMapping(\"/saveMultipleManager\")\r\n    @ResponseBody\r\n    public String[] saveMultipleManager(HttpServletRequest request) {\r\n        int type_code = Integer.parseInt(request.getParameter(\"type_code\"));\r\n        String[] labtwo = request.getParameterValues(\"labtwo[]\");\r\n        String[] peopletwo = request.getParameterValues(\"peopletwo[]\");\r\n        String str = labRoomService.saveMultipleManager(type_code, labtwo, peopletwo);\r\n        return new String[]{str};\r\n    }\r\n\r\n    /**\r\n     * Description 工训调用接口{判断排课导入时的实验室是否存在}\r\n     *\r\n     * @param lab_name return\r\n     *                 author 陈乐为 2019年4月24日\r\n     */\r\n    @RequestMapping(\"/existLabRoom\")\r\n    public @ResponseBody\r\n    String existLabRoom(@RequestParam String lab_name) {\r\n        LabRoom labRoom = labRoomService.findLabRoomByLabRoomName(lab_name);\r\n        if (labRoom != null) {\r\n            return \"success\";\r\n        } else {\r\n            return \"fail\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Description 弹出框--项目列表\r\n     * return\r\n     * author 陈乐为 2019-7-2\r\n     */\r\n    @RequestMapping(\"/layerOperationItemLims\")\r\n    public ModelAndView layerOperationItemLims(Integer lab_id) {\r\n        ModelAndView mav = new ModelAndView();\r\n        User user = shareService.getUserDetail();\r\n        // 所有的实验项目卡\r\n        List<OperationItem> items = null;\r\n        if (user.getSchoolAcademy() != null && user.getSchoolAcademy().getAcademyNumber() != null) {\r\n            items = labRoomService.findAllOperationItem(user.getSchoolAcademy().getAcademyNumber());\r\n        } else {\r\n            items = labRoomService.findAllOperationItem(\"-1\");\r\n        }\r\n        mav.addObject(\"listOperationItem\", items);\r\n        mav.addObject(\"lab_id\", lab_id);\r\n\r\n        mav.setViewName(\"labroom/lab/lab_room/layerOperationItems.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * Description 弹出层--用户列表\r\n     *\r\n     * @param lab_id\r\n     * @param acno   return\r\n     *               author 陈乐为 2019-7-2\r\n     */\r\n    @RequestMapping(\"/layerAddLabRoomAuthorized\")\r\n    public ModelAndView layerAddLabRoomAuthorized(Integer lab_id, @ModelAttribute(\"selected_academy\") String acno, int currpage, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        int pagesize = 20;\r\n        String search = request.getParameter(\"search\");\r\n        //查询所有可用用户\r\n        List<User> userList = shareService.findUsersByStatus(\"1\",currpage,pagesize,search);\r\n        mav.addObject(\"userList\", userList);\r\n        mav.addObject(\"lab_id\", lab_id);\r\n        mav.addObject(\"user\", new User());\r\n        int totalRecords = shareService.countUsersByStatus(\"1\");\r\n        mav.addObject(\"pageModel\", shareService.getPage(currpage, pagesize, totalRecords));\r\n        mav.setViewName(\"labroom/lab/lab_room/layerAddLabRoomAuthorized.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /**\r\n     * Description 弹出层--批量设置管理员\r\n     *\r\n     * @param acno\r\n     * @param request return\r\n     *                author 陈乐为 2019-7-4\r\n     */\r\n    @RequestMapping(\"/layerSetLabManagers\")\r\n    public ModelAndView layerSetLabManagers(@ModelAttribute(\"selected_academy\") String acno, HttpServletRequest request) {\r\n        ModelAndView mav = new ModelAndView();\r\n        // 本学院所有在校教师及近5年学生\r\n        List<User> userList = labRoomService.findUserByacno(acno, null, 1, -1);\r\n        mav.addObject(\"userList\", userList);\r\n        // 本学院所有可用实验室-批量添加管理员\r\n        List<LabRoom> labRoomList = labRoomService.findLabRoomByLabCenter(null, null, 1, null, 9, request, acno);\r\n        mav.addObject(\"labRoomList\", labRoomList);\r\n\r\n        mav.setViewName(\"labroom/lab/lab_room/layerSetLabManagers.jsp\");\r\n        return mav;\r\n    }\r\n\r\n    /*\r\n     * 获取所有实验室信息接口\r\n     * 顾延钊\r\n     * */\r\n    @ResponseBody\r\n    @RequestMapping(\"/getAllLabRoom\")\r\n    public List<LabRoomVo> apiLabRoomList(HttpServletRequest request,Integer currpage,Integer pageSize) {\r\n        return labRoomService.getAllLabRoomInfo(request,currpage,pageSize);\r\n    }\r\n\r\n\r\n    /*\r\n     * 根据实验室id获取实验室设备信息接口\r\n     * 顾延钊\r\n     * */\r\n    @ResponseBody\r\n    @RequestMapping(\"/getLabRoomDevice\")\r\n    public List<LabRoomDeviceVo> apiLabRoomDeviceList(Integer id) {\r\n        return labRoomService.getAllLabRoomDeviceInfo(id);\r\n    }\r\n        /*public RestResult apiLabRoomDeviceList(Integer id){\r\n        RestResult result=new RestResult(success);\r\n        List<LabRoomDeviceVo> allLabRoomDeviceInfo=labRoomService.getAllLabRoomDeviceInfo(id);\r\n        result.setData(JSON.toJSONString(allLabRoomDeviceInfo));\r\n        return result;\r\n    }*/\r\n\r\n    /**\r\n     * Description 班牌数据推送--课程发布后调用--推送当天上课的数据\r\n     *\r\n     * @param timetableParamVO return\r\n     */\r\n    @ResponseBody\r\n    @Transactional\r\n    @RequestMapping(\"/sendLabScheduleToIOT\")\r\n    public String sendLabScheduleToIOT(@RequestBody TimetableParamVO timetableParamVO) {\r\n        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();\r\n        // 教务排课\r\n        if (timetableParamVO.getCourseNo() != null && !\"\".equals(timetableParamVO.getCourseNo())) {\r\n            // 下发当天上课数据到物联\r\n            labRoomService.sendTimetableScheduleToIOT(timetableParamVO.getCourseNo(), \"TIMETABLE\", timetableParamVO.getTimetableStyle());\r\n        } else {// 自主排课\r\n            // 下发当天上课数据到物联\r\n            labRoomService.sendTimetableScheduleToIOT(String.valueOf(timetableParamVO.getSelfId()), \"SELFTIMETABLE\", timetableParamVO.getTimetableStyle());\r\n            // 同步课程项目数据到项目服务\r\n        }\r\n\r\n        return \"success\";\r\n    }\r\n\r\n    /**\r\n     * Description 查看门锁状态\r\n     *\r\n     * @param return\r\n     */\r\n    @ResponseBody\r\n    @RequestMapping(\"/doorStatus\")\r\n    public String checkDoorStatus(Integer agentId, Integer doorIndex) {\r\n        return iotService.checkDoorStatus(agentId.toString(), doorIndex);\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gvsun-business/independent/limsproduct/src/main/java/net/gvsun/lims/web/labroom/lab/LabRoomController.java b/gvsun-business/independent/limsproduct/src/main/java/net/gvsun/lims/web/labroom/lab/LabRoomController.java
--- a/gvsun-business/independent/limsproduct/src/main/java/net/gvsun/lims/web/labroom/lab/LabRoomController.java	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/gvsun-business/independent/limsproduct/src/main/java/net/gvsun/lims/web/labroom/lab/LabRoomController.java	(date 1641563323898)
@@ -2231,11 +2231,41 @@
             //卡号转换
             String cardNo = shareService.getUserDetail().getCardno();
             return HttpClientUtil.doPost("http://" + a.getCommonServer().getServerIp() + ":85/opendoor?username='" + cardNo + "'&doorNum=" + a.getDoorindex());
-        }else {
+        } else {
             return labRoomService.sendOpenDoorInterfaceByJWT(agentId, doorIndex);
         }
     }
 
+    /**
+     * Description 桌牌-云地开关
+     *
+     * @param deviceId
+     * return
+     * author 王清欢 2022-01-06
+     */
+    @RequestMapping("/openTableCard")
+    public @ResponseBody
+    String openTableCard(@RequestParam String deviceId) {
+        String resUrl = "";
+        PConfigDTO pConfigDTO = shareService.getCurrentDataSourceConfiguration();
+        // 上大项目桌牌IP为deviceId
+        Set<LabRoomAgent> labRoomAgentSet = labRoomAgentDAO.findLabRoomAgentByHardwareIp(deviceId);
+        if (labRoomAgentSet.size() > 0) {
+            User user = shareService.getUserDetail();
+            CommonServer commonServer = labRoomAgentSet.iterator().next().getCommonServer();
+            resUrl = "http://172.16.1.88:999"
+                    + "/iot/tablecard/openpower?iotmac="
+                    + commonServer.getServerMac() + "&deviceid="
+                    + deviceId + "&cname="
+                    + user.getCname() + "&username="
+                    + user.getUsername();
+        }
+        else {
+
+        }
+        return HttpClientUtil.doPost(resUrl);
+    }
+
     /****************************************************************************
      * 功能：判断所填写的编号是否与数据库中已有的可用状态实验室编号重复 作者：贺子龙 日期：2015-12-23
      ****************************************************************************/
Index: gvsun-business/provider-api/usercenter-front/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 8080\r\n  servlet:\r\n    context-path: /teacherInformationCenter\r\n\r\nspring:\r\n  flyway:\r\n    baseline-on-migrate: true\r\n    enabled: false\r\n    encoding: UTF-8\r\n    validate-on-migrate: false\r\n  redis:\r\n    host: ${redis_host:localhost}\r\n    port: ${redis_port:6379}\r\n    password: ${redis_password:123465}\r\n  main:\r\n    allow-bean-definition-overriding: true\r\n  #  datasource:\r\n  #    url: jdbc:mysql://${db_host:localhost}/${db_name:teacher_info_center}?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai\r\n  #    username: ${db_user:root}\r\n  #    password: ${db_pwd:gengshang}\r\n  #    driver-class-name: com.mysql.cj.jdbc.Driver\r\n  jpa:\r\n    show-sql: false\r\n    open-in-view: false\r\n  thymeleaf:\r\n    prefix: classpath:/templates\r\n    suffix: .html\r\n    encoding: UTF-8\r\n    mode: HTML\r\n    servlet:\r\n      content-type: text/html\r\n    cache: false\r\n  servlet:\r\n    multipart:\r\n      max-file-size: 50MB\r\n      max-request-size: 60MB\r\n\r\nauthorization:\r\n  siteEnName: GvsunUserCenter\r\n  siteSecret: MisjTDa^ZintCniukj^eP5WQF!PYLjnrOmj%0tbMX#rxp646#eRYHYpaCK7H@2v3!5I6tzKxmExH!k&N^%$#BkH&RiOJwojun15FBg%Go@pAeS&5hxTz4RNB$gyI9R@#\r\n\r\n#管理员下放权限给教师（教师自己给自己配置栏目）\r\ndelegation: false\r\n\r\napiGateWayHost: ${apiGateWay_host:http://localhost:8760}\r\niotHost: ${iot_host:http://192.168.1.11:9523}\r\napiGateWayHostTest: ${apiGateWay_host:http://test.lubanlou.com/api}\r\n#apiGateWayHost: ${apiGateWay_host:http://zuultest.gvsun.net}\r\n#apiGateWayHost: ${apiGateWay_host:http://gateway.gvsun.net}\r\n#apiGateWayHost: ${apiGateWay_host:http://dev.gvsun.com/api}\r\n\r\n#资源容器的地址，注意不是网关上的地址，上传大文件不走网关\r\nresourceContainerHostForUpload: ${resource_host:http://localhost:8162}\r\nlogo: logotext_gvsun.png\r\ndataSource: true\r\n\r\n\r\n\r\n#oauth2Host: ${oauth2_Host:http://www.lubanlou.com/uaa}\r\n#oauth2Host: ${oauth2_Host:http://localhost:8765/uaa}\r\noauth2Host: ${oauth2_Host:http://test.lubanlou.com/uaa}\r\n#此处需要配置教学地址\r\nteachHost: ${teach_Host:http://www.lubanlou.com/api}\r\n#此处需要配置获取iot相关数据的地址\r\niotWebSocketHost: ${iot_websocket_host:http://localhost:9191/api/websocket}\r\n#此处需要配置datashare地址\r\ndatashareHost: ${datashare_host:http://localhost:9096/datashare}\r\n#此处需要配置device地址\r\ndeviceHost: ${device_host:http://localhost:8844/device/}\r\n#此处需要配置作业微服务地址\r\ngvsunWork: ${gvsun_work:http://localhost:8001/gvsunWork/}\r\n#此处需要配置考试微服务地址\r\ngvsunExam: ${gvsun_exam:http://localhost:8000/gvsunExam}\r\n#此处需要配置准入微服务access地址\r\naccessHost: ${access_host:http://localhost:9093/access}\r\n#此处需要配置limsproduct地址\r\nlimsproductHost: ${limsproduct_host:http://localhost:8763/limsproduct}\r\n#此处需要配置appointment地址\r\nappointmentHost: ${apiGateWayHost}/appointment\r\n#此处需要配置timetablelabRoom空间管理地址\r\nlabroomHost: ${apiGateWayHost}/timetable\r\n#此处需要配置usercenter用户中心地址 ${apiGateWayHost}/usercenter ${http://localhost:8762}\r\nusercenterHost: ${apiGateWayHost}/usercenter\r\n#此处需要配置timetablelabRoom空间管理地址\r\nauditserverHost: ${apiGateWayHost}/auditserver\r\nsecurity:\r\n  oauth2:\r\n    host: ${oauth2Host}\r\n    client:\r\n      clientId: GvsunUserCenter\r\n      clientSecret: MisjTDa^ZintCniukj^eP5WQF!PYLjnrOmj%0tbMX#rxp646#eRYHYpaCK7H@2v3!5I6tzKxmExH!k&N^%$#BkH&RiOJwojun15FBg%Go@pAeS&5hxTz4RNB$gyI9R@#\r\n      accessTokenUri: ${oauth2Host}/oauth/token\r\n      userAuthorizationUri: ${oauth2Host}/oauth/authorize\r\n      logoutOAuth2Uri: ${oauth2Host}/oauth/logout\r\n      logoutCallback: ${logout_callback:http://www.lubanlou.com/teacherInformationCenter}\r\n    resource:\r\n      userInfoUri: ${oauth2Host}/user/me\r\n\r\ndatasource:\r\n  projectName: usercenter-front\r\n  enableExecuteFlywayOnMultiDatasource: false\r\n\r\nusession:\r\n  project-name: ${datasource.projectName}\r\n  redis:\r\n    host: ${spring.redis.host}\r\n    port: ${spring.redis.port}\r\n    password: ${spring.redis.password}\r\n\r\n#统一身份认证-开始\r\nuia:\r\n  url: ${uia_host:http://test.lubanlou.com/uia}\r\n  #  url: ${uia_host:http://localhost:8550/uia}\r\n  #是否使用统一身份认证 true or false\r\n  isUia: ${isUia:true}\r\n  #统一身份认证登录路\r\n  loginUrl: ${uia.url}/signon\r\n  #统一身份认证退出路径\r\n  logoutUrl: ${uia.url}/signout\r\n  #密匙\r\n  secretKey: gvsun\r\napp:\r\n  #  本地\r\n  url: ${appurl:http://test.lubanlou.com/teacherInformationCenter}\r\n  #  url: ${appurl:http://localhost:8080/teacherInformationCenter}\r\n\r\n  #统一身份认证登录后回调地址\r\n  redirectUrl: ${app.url}/webapp/login\r\n  #统一身份认证退出后返回地址\r\n  #  本地\r\n  outUrl: ${appouturl:http://test.lubanlou.com/teacherInformationCenter/login}\r\n  #时效（以秒为单位）\r\n  timeDiff: ${timeDiff:600}\r\n#统一身份认证-结束\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gvsun-business/provider-api/usercenter-front/src/main/resources/application.yml b/gvsun-business/provider-api/usercenter-front/src/main/resources/application.yml
--- a/gvsun-business/provider-api/usercenter-front/src/main/resources/application.yml	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/gvsun-business/provider-api/usercenter-front/src/main/resources/application.yml	(date 1641561229900)
@@ -12,7 +12,7 @@
   redis:
     host: ${redis_host:localhost}
     port: ${redis_port:6379}
-    password: ${redis_password:123465}
+    password: ${redis_password:123456}
   main:
     allow-bean-definition-overriding: true
   #  datasource:
@@ -45,7 +45,7 @@
 
 apiGateWayHost: ${apiGateWay_host:http://localhost:8760}
 iotHost: ${iot_host:http://192.168.1.11:9523}
-apiGateWayHostTest: ${apiGateWay_host:http://test.lubanlou.com/api}
+apiGateWayHostTest: ${apiGateWay_host:http://www.lubanlou.com/api}
 #apiGateWayHost: ${apiGateWay_host:http://zuultest.gvsun.net}
 #apiGateWayHost: ${apiGateWay_host:http://gateway.gvsun.net}
 #apiGateWayHost: ${apiGateWay_host:http://dev.gvsun.com/api}
@@ -58,8 +58,8 @@
 
 
 #oauth2Host: ${oauth2_Host:http://www.lubanlou.com/uaa}
-#oauth2Host: ${oauth2_Host:http://localhost:8765/uaa}
-oauth2Host: ${oauth2_Host:http://test.lubanlou.com/uaa}
+oauth2Host: ${oauth2_Host:http://localhost:8765/uaa}
+#oauth2Host: ${oauth2_Host:http://test.lubanlou.com/uaa}
 #此处需要配置教学地址
 teachHost: ${teach_Host:http://www.lubanlou.com/api}
 #此处需要配置获取iot相关数据的地址
@@ -110,7 +110,7 @@
 
 #统一身份认证-开始
 uia:
-  url: ${uia_host:http://test.lubanlou.com/uia}
+  url: ${uia_host:http://www.lubanlou.com/uia}
   #  url: ${uia_host:http://localhost:8550/uia}
   #是否使用统一身份认证 true or false
   isUia: ${isUia:true}
@@ -122,8 +122,8 @@
   secretKey: gvsun
 app:
   #  本地
-  url: ${appurl:http://test.lubanlou.com/teacherInformationCenter}
-  #  url: ${appurl:http://localhost:8080/teacherInformationCenter}
+  #  url: ${appurl:http://test.lubanlou.com/teacherInformationCenter}
+  url: ${appurl:http://localhost:8080/teacherInformationCenter}
 
   #统一身份认证登录后回调地址
   redirectUrl: ${app.url}/webapp/login
Index: gvsun-business/provider-api/usercenter-front/src/main/resources/static/modules/configcenter/static/commonResource.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var contextPath = \"\";\r\n// var evaluationHost = \"\";\r\n\r\n$(document).ready(function () {\r\n    contextPath = $(\"#pageContext\").val();\r\n    // evaluationHost =$(\"#zuulServerUrl\").val()+\"/configcenter/\";\r\n    // 初始化资源\r\n    resourceContainer.initResourceContainer({\r\n        oauth2Host: oauth2Host,\r\n        resourceContainerHost: resourceContainerHost + \"/gvsunResource\",\r\n        directoryEngineHost: resourceContainerHost + \"/gvsunDirectory\",\r\n        siteName: \"配置中心\",\r\n        authorizationURL: resourceContainerHost + \"/shareApi/getAuthorization\",\r\n        username: currentUsername,\r\n        resourceContainerHostForUpload: resourceContainerHostForUpload\r\n    });\r\n\r\n\r\n    //读取资源，返回文件存放路径\r\n    $.each($(\".resource-img\"),function (index,obj) {\r\n        if($(obj).attr(\"state\")==1){\r\n            if($(obj).attr(\"data\").indexOf(\"/\")==-1){\r\n                getFile({\r\n                    fileId:$(obj).attr(\"data\"),\r\n                    success:function (data) {\r\n                        if(!data.code){\r\n                            $(obj).attr(\"src\",data.data.url);\r\n                            $(obj).load();\r\n                        }\r\n\r\n                    }\r\n                });\r\n            }else{\r\n                $(obj).attr(\"src\",$(obj).attr(\"data\"));\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\nfunction getAuthorization(jsonData) {\r\n    $.ajax({\r\n        type: \"Get\",\r\n        async: (jsonData.async == null ? true : jsonData.async),\r\n        url: contextPath+\"/shareApi/getAuthorization\",\r\n        success: function (data) {\r\n            jsonData.success(data);\r\n        }\r\n    });\r\n};\r\n\r\n// 读取资源\r\nfunction getFile(jsonData) {\r\n    getAuthorization({\r\n        async:jsonData.async,\r\n        success:function(authorization){\r\n            $.ajax({\r\n                url: $(\"#resourceContainerHost\").val()+\"/gvsunResource/getFileById?id=\"+jsonData.fileId,\r\n                type:\"Get\",\r\n                dataType:\"json\",\r\n                async:(jsonData.async==null?true:jsonData.async),\r\n                headers:{\r\n                    Authorization:authorization\r\n                },\r\n                success:function (data) {\r\n                    switch(data.url){\r\n                        case \"NoFileUrl\":\r\n                            if(jsonData.error!=null)\r\n                                jsonData.error();\r\n                            break;\r\n                        case \"AuthorizationOutOfTime\":\r\n                            if(jsonData.authorizationOutOfTime!=null)\r\n                                jsonData.authorizationOutOfTime();\r\n                            break;\r\n                        case \"NotAllowedRequest\":\r\n                            if(jsonData.notAllowedRequest!=null)\r\n                                jsonData.notAllowedRequest();\r\n                            break;\r\n                        default:\r\n                            if(jsonData.success!=null)\r\n                                jsonData.success(data);\r\n                            break;\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    });\r\n};\r\n\r\nfunction openUploadWindowByPath(path,index,step) {\r\n    resourceContainer.initUploadFileWindow({\r\n        afterUploadSuccess: function (data) {\r\n            //data包含fileIds(文件id数组)、files(文件数组)、path(上传路径)\r\n            var fileIds = data.fileIds;\r\n            var files = data.files;\r\n            var targetTitle = data.path;\r\n            let configFiles = '';\r\n            for (var i = 0; i < fileIds.length; i++) {\r\n                var fd = new FormData();\r\n                var fileName = files[i].name;\r\n                var fileSize = resourceContainer.transformSize(files[i].size);\r\n                var fileId = fileIds[i];\r\n                var url = \"\";\r\n                var timetableResultId = $('#timetableResultId').val();\r\n                // var d1 = configResultList[0];\r\n                // var configResult = d1[$('#configName').val()];\r\n                if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"业务流程记录\"){\r\n                    configFiles += fileId+'_'+fileName+',';\r\n                }else if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"建制管理\"){\r\n                    configFiles += fileId+'_'+fileName+',';\r\n                }else if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"学业导师\"){\r\n                    let fileInput = $('#fileUpload'+index+'_'+step).val();\r\n                    if(fileInput!=null && fileInput!=''){\r\n                        configFiles += fileInput + ',' +fileId+'_'+fileName+',';\r\n                    }else{\r\n                        configFiles += fileId+'_'+fileName+',';\r\n                    }\r\n\r\n                }\r\n            }\r\n            if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"业务流程记录\"){\r\n                configFiles = (configFiles.substring(configFiles.length - 1) == ',') ? configFiles.substring(0, configFiles.length - 1) : configFiles\r\n                $('#fileUpload'+index+'_'+step).val(configFiles);\r\n            }else if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"建制管理\" || targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"学业导师\"){\r\n                configFiles = (configFiles.substring(configFiles.length - 1) == ',') ? configFiles.substring(0, configFiles.length - 1) : configFiles\r\n                $('#fileUpload'+index+'_'+step).val(configFiles);\r\n            }else if(targetTitle.split(\"/\")[targetTitle.split(\"/\").length-2]==\"项目库管理\"){\r\n                $.ajax({\r\n                    url: `${timetableHost}api/operation/saveOperationItemEnclosure?operationItemId=${targetTitle.split(\"/\")[targetTitle.split(\"/\").length-1]}&enclosureIds=${fileIds.join(',')}`,\r\n                    type: 'post',\r\n                    async: false,\r\n                    success: function (res) {\r\n                     if(res.data.code === 0){\r\n                         location.reload();\r\n                     }else{\r\n                         layer.msg('啊哦,后台出错了');\r\n                     }\r\n                    }\r\n                })\r\n            }\r\n            resourceContainer.showUploadWindow(false);\r\n        },\r\n        path: path,\r\n        uploadFail: function (reason) {\r\n                alert('上传失败：' + reason);\r\n        },\r\n        fileTags: ['我的文件'],\r\n        multiple: true//是否启用多文件上传\r\n    });\r\n    resourceContainer.showUploadWindow(true);\r\n};\r\nfunction fileInit(tableEachIndex) {\r\n    var download = '.file_download';\r\n    var show = '.file_show';\r\n    if(tableEachIndex){\r\n        download = '.file_download_table'+tableEachIndex;\r\n        show = '.file_show_table'+tableEachIndex;\r\n    }\r\n    $.each($(download), function (index, obj) {\r\n        $(obj).click(function(){\r\n            resourceContainer.downLoadFile({\r\n                fileId: $(obj).attr(\"data\")\r\n            })\r\n        });\r\n    });\r\n    $.each($(show), function (index, obj) {\r\n        $(obj).click(function(){\r\n            resourceContainer.getFileById({\r\n                success:function(result){\r\n                    layer.confirm('下载/预览?<br>doc,docx,ppt,pptx,xls,xlsx<font color=\"red\">最大可预览大小为10M</font>', {\r\n                        btn: ['下载','预览'] //按钮\r\n                        , offset: ['150px', '40%']\r\n                    }, function(index){\r\n                        resourceContainer.downLoadFile({\r\n                            fileId: $(obj).attr(\"data\")\r\n                        })\r\n                        layer.close(index);\r\n                    }, function(index){\r\n                        if(isPdf(result.fileName)){\r\n                            layer.open({\r\n                                type: 2,\r\n                                area: ['1000px', '650px'],\r\n                                fixed: false, //不固定\r\n                                maxmin: true,\r\n                                content: result.url\r\n                            });\r\n                        }else if(isMp4(result.fileName)){\r\n                            layer.open({\r\n                                type: 2,\r\n                                area: ['1000px', '650px'],\r\n                                fixed: false, //不固定\r\n                                maxmin: true,\r\n                                content: result.url\r\n                            });\r\n                        }else if(isDoc(result.fileName)){\r\n                            window.open(\"http://view.officeapps.live.com/op/view.aspx?src=\"+escape(result.url),'_blank');\r\n                        }else{\r\n                            // layer.msg('不是pdf,暂不支持预览谢谢!');\r\n                            layer.confirm('对不起,暂不支持该文件格式预览!<br><font color=\"red\">支持的格式:pdf,mp4,doc,docx,ppt,pptx,xls,xlsx</font>', {\r\n                                btn: ['下载','关闭'] //按钮\r\n                                , offset: ['150px', '40%']\r\n                            }, function(index){\r\n                                resourceContainer.downLoadFile({\r\n                                    fileId: $(obj).attr(\"data\")\r\n                                })\r\n                                layer.close(index);\r\n                            }, function(index){\r\n                                layer.close(index);\r\n                            });\r\n                        }\r\n                    });\r\n                    // $('#photo_img').attr(\"src\", result.url);\r\n                },\r\n                fail:function(){\r\n                    alert('文件获取失败！');\r\n                    // $('#photo_img').attr(\"src\",'');\r\n                },\r\n                fileId:$(obj).attr(\"data\"),\r\n                needToken:true\r\n            })\r\n        });\r\n    });\r\n}\r\n// 资源下载\r\nfunction downLoadFile(fileId) {\r\n    resourceContainer.downLoadFile({\r\n        fileId:fileId,\r\n        fail: function (reason) {\r\n            alert('下载失败:' + reason);\r\n        }\r\n    })\r\n}\r\n\r\n//删除系统图片\r\nfunction deleteSystemPic(id,fileId) {\r\n    f({\r\n        id: id,\r\n        fileId:fileId,\r\n    });\r\n}\r\nfunction f(jsonData) {\r\n    getAuthorization({\r\n        async:jsonData.async,\r\n        success:function(authorization){\r\n            jsonData.needToken = authorization;\r\n            jsonData.fail = function(){}\r\n            jsonData.success = function(){\r\n                $.ajax({\r\n                    url:contextPath+\"/system/deleteSystemPic?id=\"+jsonData.id,\r\n                    type:\"POST\",\r\n                    success:function () {\r\n                        alert(\"删除图片成功\");\r\n                        location.reload(true);\r\n                    }})\r\n            }\r\n            resourceContainer.deleteFileById(jsonData)\r\n        }\r\n    })\r\n}\r\n\r\nwindow.isPdf = function (fileName) {\r\n    let regExp = /\\.(PDF)$/i;\r\n    if (fileName && fileName.search(regExp) !== -1) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\nwindow.isMp4 = function (fileName) {\r\n    let regExp = /\\.(MP4)$/i;\r\n    if (fileName && fileName.search(regExp) !== -1) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};\r\nwindow.isDoc = function (fileName) {\r\n    let regExp = /\\.(DOC|DOCX|XLSX|XLS|PPT|PPTX)$/i;\r\n    if (fileName && fileName.search(regExp) !== -1) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n};
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gvsun-business/provider-api/usercenter-front/src/main/resources/static/modules/configcenter/static/commonResource.js b/gvsun-business/provider-api/usercenter-front/src/main/resources/static/modules/configcenter/static/commonResource.js
--- a/gvsun-business/provider-api/usercenter-front/src/main/resources/static/modules/configcenter/static/commonResource.js	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/gvsun-business/provider-api/usercenter-front/src/main/resources/static/modules/configcenter/static/commonResource.js	(date 1641561229953)
@@ -120,7 +120,7 @@
             if(targetTitle.split("/")[targetTitle.split("/").length-2]=="业务流程记录"){
                 configFiles = (configFiles.substring(configFiles.length - 1) == ',') ? configFiles.substring(0, configFiles.length - 1) : configFiles
                 $('#fileUpload'+index+'_'+step).val(configFiles);
-            }else if(targetTitle.split("/")[targetTitle.split("/").length-2]=="建制管理" || targetTitle.split("/")[targetTitle.split("/").length-2]=="学业导师"){
+            }else if(targetTitle.split("/")[targetTitle.split("/").length-2]=="建制管理"){
                 configFiles = (configFiles.substring(configFiles.length - 1) == ',') ? configFiles.substring(0, configFiles.length - 1) : configFiles
                 $('#fileUpload'+index+'_'+step).val(configFiles);
             }else if(targetTitle.split("/")[targetTitle.split("/").length-2]=="项目库管理"){
Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
new file mode 100644
--- /dev/null	(date 1641561229968)
+++ b/pom.xml	(date 1641561229968)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project xmlns="http://maven.apache.org/POM/4.0.0"
+         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+
+    <groupId>org.example</groupId>
+    <artifactId>lubanlou</artifactId>
+    <version>1.0-SNAPSHOT</version>
+
+    <properties>
+        <maven.compiler.source>8</maven.compiler.source>
+        <maven.compiler.target>8</maven.compiler.target>
+    </properties>
+
+    <modules>
+        <module>lubanlou-master</module>
+        <module>gvsun-business/provider-api/es</module>
+    </modules>
+</project>
\ No newline at end of file
Index: gvsun-business/independent/limsproduct/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>##################################################自定义配置开始##################################################\r\n#统一域名\r\nserverHost: ${server_host:http://localhost}\r\n#资源容器地址\r\nresourceContainerHost: ${resource_host:http://localhost:8162}\r\n#网关\r\napiGateWayHost: ${apiGateWay_host:${serverHost}/api}\r\n#apiGateWayHost: http://localhost:8760\r\n#oauth2\r\noauth2Host: ${oauth2_host:${serverHost}/uaa}\r\nReferer: ${Refer:localhost}\r\n#实验室登录成功后跳转回门户（老版门户-盐城）进行登录,如果不是老版门户，就不填\r\ncmsToLoginUrl: ${CmsToLoginUrl:}\r\n##################################################自定义配置结束##################################################\r\nserver:\r\n  port: 8763\r\n  servlet:\r\n    context-path: /limsproduct\r\n    jsp:\r\n      init-parameters:\r\n        development: true\r\n    session:\r\n      timeout: ${session_timeout:1800}\r\n\r\neureka:\r\n  instance:\r\n    #以IP地址注册到服务中心，相互注册使用IP地址\r\n    prefer-ip-address: true\r\n    status-page-url: http://localhost:${server.port}/swagger-ui.html\r\n  client:\r\n    serviceUrl:\r\n      defaultZone: ${eureka_host:http://localhost:8888/eureka/}\r\n\r\nspring:\r\n  application:\r\n    name: limsproduct\r\n  resources:\r\n    static-locations: classpath:/static/\r\n  mvc:\r\n    view:\r\n      prefix: /WEB-INF/pages/\r\n    static-path-pattern: /**\r\n  servlet:\r\n    multipart:\r\n      enabled: true\r\n      max-file-size: 100MB\r\n      max-request-size: 100MB\r\n  messages:\r\n    basename: bundles/i18n\r\n    encoding: UTF-8\r\n  redis:\r\n    host: ${redis_host:127.0.0.1}\r\n    port: ${redis_port:6379}\r\n    password: ${redis_password:123456}\r\n  jackson:\r\n    date-format: yyyy-MM-dd HH:mm:ss\r\n    time-zone: Asia/Chongqing\r\n  flyway:\r\n    # 当迁移时发现目标schema非空，而且带有没有元数据的表时，是否自动执行基准迁移，默认false\r\n    baseline-on-migrate: true\r\n    # 是否开启flywary，默认true\r\n    enabled: true\r\n    encoding: UTF-8\r\n    # 迁移时是否校验，默认为true\r\n    validate-on-migrate: false\r\n  kafka:\r\n    bootstrap-servers: ${boot_strap_servers:127.0.0.1:9092}\r\n    consumer:\r\n      group-id: limsproduct\r\n      auto-startup: true\r\n\r\n###############################################默认配置（一般不改）开始################################################\r\nauthorization:\r\n  siteEnName: ${site_EnName:GvsunLims}\r\n  siteSecret: ${site_secret:*Yq9g1Exze#9rV1@&75foh#zT@&J9ASD326Ks1x4%DQ4iziN^m98nGyWZMhx3CeScO@xv1nSJYfry9i0Sd9UG8w7gvv3JFGyWCx4oYqWYUcA0Vz07mYbjNE7MM7OIbdO}\r\n\r\n# 系统标识（对应redis的key值，如实验室：limsproduct，教学：gsteach）\r\ndatasource:\r\n  strictMode: ${datasource_strict_mode:true}\r\n  projectName: ${project_name:limsproduct}\r\n  enableExecuteFlywayOnMultiDatasource: true\r\n  # 数据源标识（如庚商：limsproduct，哈工大：hitszlims）\r\n  schoolName: ${school_name:limsproduct}\r\nusession:\r\n  project-name: ${datasource.projectName}\r\n  redis:\r\n    host: ${spring.redis.host}\r\n    port: ${spring.redis.port}\r\n    password: ${spring.redis.password}\r\n\r\n\r\n#统一身份认证-开始\r\nuia:\r\n  url: ${uia_host:${serverHost}/uia}\r\n  #是否使用统一身份认证 true or false\r\n  isUia: ${isUia:false}\r\n  #统一身份认证登录路径\r\n  loginUrl: ${uia.url}/signon\r\n  #统一身份认证退出路径\r\n  logoutUrl: ${uia.url}/signout\r\n  #密匙\r\n  secretKey: gvsun\r\n\r\napp:\r\n  # 本地\r\n  url: ${appurl:${serverHost}/limsproduct}\r\n  #统一身份认证登录后回调地址\r\n  redirectUrl: ${app.url}/webapp/login\r\n  #统一身份认证退出后返回地址（如果这里是返回首页，就填首页地址；如果是返回实验室系统，要记得加/login）\r\n  outUrl: ${app_outUrl:${serverHost}/limsproduct/login}\r\n  #时效（以秒为单位）\r\n  timeDiff: ${timeDiff:120}\r\n#统一身份认证-结束\r\n\r\nEasyCache:\r\n  redis:\r\n    host: ${spring.redis.host}\r\n    port: ${spring.redis.port}\r\n    password: ${spring.redis.password}\r\n    database: 1\r\n###########F####################################默认配置（一般不改）结束################################################
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gvsun-business/independent/limsproduct/src/main/resources/application.yml b/gvsun-business/independent/limsproduct/src/main/resources/application.yml
--- a/gvsun-business/independent/limsproduct/src/main/resources/application.yml	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/gvsun-business/independent/limsproduct/src/main/resources/application.yml	(date 1641561229974)
@@ -29,7 +29,7 @@
     status-page-url: http://localhost:${server.port}/swagger-ui.html
   client:
     serviceUrl:
-      defaultZone: ${eureka_host:http://localhost:8888/eureka/}
+      defaultZone: ${eureka_host:http://localhost:8761/eureka/}
 
 spring:
   application:
@@ -67,7 +67,7 @@
     bootstrap-servers: ${boot_strap_servers:127.0.0.1:9092}
     consumer:
       group-id: limsproduct
-      auto-startup: true
+      auto-startup: false
 
 ###############################################默认配置（一般不改）开始################################################
 authorization:
@@ -76,7 +76,7 @@
 
 # 系统标识（对应redis的key值，如实验室：limsproduct，教学：gsteach）
 datasource:
-  strictMode: ${datasource_strict_mode:true}
+  strictMode: ${datasource_strict_mode:false}
   projectName: ${project_name:limsproduct}
   enableExecuteFlywayOnMultiDatasource: true
   # 数据源标识（如庚商：limsproduct，哈工大：hitszlims）
Index: gvsun-business/provider-api/usercenter-front/src/main/resources/templates/configcenter/registration/editAcademicStudentWorkAchievement.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html lang=\"zh-CN\"\r\n\t  xmlns:th=\"http://www.thymeleaf.org\">\r\n<head>\r\n\t<meta charset=\"UTF-8\">\r\n\t<title>列表</title>\r\n\t<meta name=\"renderer\" content=\"webkit\">\r\n\t<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n\t<meta name=\"viewport\"\r\n\t\t  content=\"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0\">\r\n\t<link rel=\"stylesheet\" th:href=\"@{/layui/css/layui.css}\" media=\"all\">\r\n\t<link media=\"all\" rel=\"stylesheet\" th:href=\"@{/modules/configcenter/static/css/admin.css}\">\r\n\t<link rel=\"stylesheet\" th:href=\"@{/modules/configcenter/registration/css/expand.css}\" media=\"all\">\r\n\t<link th:href=\"@{/css/font-awesome.css}\" rel=\"stylesheet\" type=\"text/css\"/>\r\n\t<script th:src=\"@{/js/jquery-1.11.0.min.js}\"></script>\r\n\t<script th:src=\"@{${session.oauth2}+'/oauth/OAuth2.js'}\" ></script>\r\n\t<script th:src=\"@{/js/initOAuth2.js}\"></script>\r\n\t<script th:src=\"@{/js/jquery.textareafullscreen.js}\"></script>\r\n\t<script th:src=\"@{/js/jquery.cookie.js}\"></script>\r\n\t<script th:src=\"@{/layui/layui.js}\"></script>\r\n\t<!--    <script type=\"text/javascript\" th:src=\"@{${session.oauth2} + '/oauth/OAuth2.js'}\"></script>-->\r\n\t<link rel=\"stylesheet\" th:href=\"@{${session.resourceContainerHostForUpload} + '/shareApi/resourceContainer.css'}\" media=\"all\">\r\n\t<script type=\"text/javascript\" th:src=\"@{${session.resourceContainerHostForUpload} + '/shareApi/resourceContainer.js'}\"></script>\r\n\r\n\t<script th:inline=\"javascript\">\r\n\t\tvar userCenterHost = [[${session.userCenterHost}]];\r\n\t\tvar currentUsername = [[${session.user.username}]];\r\n\t\tvar currentCname = [[${session.user.cname}]];\r\n\t\tvar apiGateWayHost = [[${session.apiGateWayHost}]];\r\n\t\tvar apiGateWayHostTest = [[${session.apiGateWayHostTest}]];\r\n\t\tvar encryptUsername=[[${session.encryptUsername}]];\r\n\t\tvar currentsiteEnName = [[${session.siteEnName}]];\r\n\t\tvar currentsiteSecret = [[${session.siteSecret}]];\r\n\t\tvar oauth2Host = [[${session.oauth2}]];\r\n\t\tvar oauth2 = [[${session.oauth2}]];\r\n\t\tvar dataSource = [[${session.dataSource}]];\r\n\t\tvar configType = [[${session.configType}]];\r\n\t\tvar resourceContainerHost = [[${resourceContainerHost}]];\r\n\t\tvar resourceContainerHostForUpload = [[${resourceContainerHostForUpload}]];\r\n\t\tvar task;\r\n\t\tvar username = [[${username}]];\r\n\t\tvar type = [[${type}]];\r\n\t</script>\r\n\t<script th:src=\"@{/modules/configcenter/static/commonResource.js}\"></script>\r\n\t<link rel=\"stylesheet\" th:href=\"@{/modules/configcenter/process/css/commonList.css}\">\r\n\t\t<style>\r\n\t\t\t.layui-form-label {\r\n\t\t\t\twidth: 65px;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t.layui-input-block {\r\n\t\t\t\tmargin-left: 65px;\r\n\t\t\t}\r\n\r\n\t\t\t.case_box {\r\n\t\t\t\tmargin-top: 10px;\r\n\t\t\t}\r\n\t\t</style>\r\n\t</head>\r\n\r\n\t<body>\r\n\t\t<div id=\"resource-container\"></div>\r\n\t\t<div class=\"main_content_box\">\r\n\t\t\t<!--主体开始-->\r\n\t\t\t<div class=\"full_box\">\r\n\t\t\t\t<form class=\"layui-form lesson_card\" action=\"\" lay-filter=\"editacademicstudentworkachievementbox\" id=\"editacademicstudentworkachievementbox\">\r\n<!--\t\t\t\t\t<blockquote class=\"layui-elem-quote layui-quote-nm tag_box\">-->\r\n<!--\t\t\t\t\t\t<fieldset class=\"layui-elem-field layui-field-title\">-->\r\n<!--\t\t\t\t\t\t\t<legend>-->\r\n<!--\t\t\t\t\t\t\t\t这里显示项目的名称-->\r\n<!--\t\t\t\t\t\t\t\t<div class=\"li_cell_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t<div class=\"li_cell\"><i class=\"layui-icon layui-icon-console\"></i>开始时间：2021-11-18 08:00:00</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t<div class=\"li_cell\"><i class=\"layui-icon layui-icon-component\"></i>范围：全校</div>-->\r\n<!--\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t</legend>-->\r\n<!--\t\t\t\t\t\t\t&lt;!&ndash;<div class=\"breadcrumb_top breadcrumb_division\">-->\r\n<!--\t\t\t\t\t\t\t\t<a class=\"breadcrumb_select\">test1</a>-->\r\n<!--\t\t\t\t\t\t\t\t<a>test2</a>-->\r\n<!--\t\t\t\t\t\t\t</div>&ndash;&gt;-->\r\n<!--\t\t\t\t\t\t</fieldset>-->\r\n<!--\t\t\t\t\t\t<div class=\"field_btn_box layui-col-lg9\">-->\r\n<!--\t\t\t\t\t\t\t要求：这里显示要求/这里显示要求/这里显示要求/这里显示要求/这里显示要求-->\r\n<!--\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t<div class=\"layui-col-lg3\">-->\r\n<!--\t\t\t\t\t\t\t<select name=\"template\" lay-search=\"\">-->\r\n<!--\t\t\t\t\t\t\t\t<option value=\"\">可切换项目</option>-->\r\n<!--\t\t\t\t\t\t\t\t<option value=\"1\">项目1</option>-->\r\n<!--\t\t\t\t\t\t\t\t<option value=\"2\">项目2</option>-->\r\n<!--\t\t\t\t\t\t\t\t<option value=\"3\">项目3</option>-->\r\n<!--\t\t\t\t\t\t\t</select>-->\r\n<!--\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t<div class=\"clearboth\"></div>-->\r\n<!--\t\t\t\t\t</blockquote>-->\r\n\t\t\t\t\t<div class=\"layui-card\">\r\n\t\t\t\t\t\t<div th:if=\"${type!='TEACHER'}\" class=\"layui-card-header\"><span>学生工作管理</span>\r\n\t\t\t\t\t\t\t<label style=\"margin-left: 15px;\" data=\"0\" class=\"layui-icon layui-icon-edit layui-btn-green header_btn editachievementboxbtn\">新增工作成果</label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"layui-card-body\">\r\n\t\t\t\t\t\t\t<div class=\"layui-tab layui-tab-brief\" lay-filter=\"docDemoTabBrief\">\r\n\t\t\t\t\t\t\t\t<ul th:if=\"${type!='TEACHER'}\" class=\"layui-tab-title\">\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a th:href=\"@{/configcenter/registration/academicTutorList}\" th:name=\"@{/configcenter/registration/academicTutorList}\" target=\"i\">导师名单</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t\t\t\t<a th:href=\"@{/configcenter/registration/editAcademicStudentWorkLog}\" th:name=\"@{/configcenter/registration/editAcademicStudentWorkLog}\" target=\"i\">我的工作日志</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t<li class=\"layui-this\">\r\n\t\t\t\t\t\t\t\t\t\t<a>我的工作成果</a>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t<div class=\"layui-tab-content\">\r\n\t\t\t\t\t\t\t\t\t<div class=\"layui-tab-item layui-show layui-row layui-col-space10\" id=\"work_contents\">\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"showachievementbox\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_box\">\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_main_tit\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-input readinputbtn\" name=\"name\" autocomplete=\"off\" disabled=\"disabled\" readonly=\"readonly\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav_tit\">简介</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-input readinputbtn\" name=\"info\" autocomplete=\"off\" disabled=\"disabled\" readonly=\"readonly\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav_tit\">团队介绍</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-input readinputbtn\" name=\"teaminfo\" autocomplete=\"off\" disabled=\"disabled\" readonly=\"readonly\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"case_nav_tit\">文件资料-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-inline font_normal mt0-5\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-btn layui-btn-xs\" value=\"全部下载\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-btn layui-btn-xs layui-btn-green\" value=\"所选文件下载\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"startvalue\" hidden=\"\" placeholder=\"shift键选择\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"text\" class=\"ivalue\" hidden=\"\" placeholder=\"ctrl键选择\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<font class=\"font_grey\">(可按住ctrl键点选或按住shift键连选)</font>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_box opacity_box mt10\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"音频.mp3\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/audio.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">音频.mp3</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"视频.mp4\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/video.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">视频.mp4</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"图片.jpg\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/picture.png}\" >-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">图片.jpg</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"txt文档.txt\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/txt.png}\" >-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">txt文档.txt</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"未知文档.xxx\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/unknow.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">未知文档.xxx</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"我是文件夹\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/folder.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">我是文件夹</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"word文档.docx\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/word.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">word文档.docx</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"excel表格.xlsx\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/excel.png}\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">excel表格.xlsx</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"ppt演示文档.pptx\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/ppt.png}\" >-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">ppt演示文档.pptx</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"pdf文档.pdf\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/pdf.png}\" >-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">pdf文档.pdf</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pictext_net opacity1\" title=\"压缩文档.rar\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img_box\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_img\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<img th:src=\"@{/modules/configcenter/static/images/rar.png}\" >-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"pn_info\">压缩文档.rar</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div class=\"editachievementbox hide\">\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"fill_box\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-row layui-col-space10\">\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-col-lg12\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"layui-form-label\">名称</label>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-input-block\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"layui-input\" name=\"name\" autocomplete=\"on\" lay-verify=\"required\" placeholder=\"请输入工作成果名称\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-col-lg12\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"layui-form-label\">简介</label>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-input-block\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input class=\"layui-input\" name=\"info\" autocomplete=\"on\" lay-verify=\"required\" placeholder=\"请输入工作成果简介\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-col-lg12\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"layui-form-label\">团队介绍</label>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-input-block\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<textarea class=\"layui-textarea\" name=\"teaminfo\" autocomplete=\"on\" lay-verify=\"required\" placeholder=\"请输入工作成果的团队介绍\"></textarea>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t&lt;!&ndash;上传开始&ndash;&gt;-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-col-md12\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label class=\"layui-form-label\">上传文件</label>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-input-block\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"mix_uploadbox\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-upload\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-upload-drag\" id=\"projectbook\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"layui-icon\">\uE67C</i>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p>点击选择文件，或将文件拖拽到此处</p>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"layui-upload-list\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<table class=\"layui-table\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<thead>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tr>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>文件名</th>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>大小</th>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>状态</th>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<th>操作</th>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</thead>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<tbody id=\"pblist\"></tbody>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</table>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"upload_btn\">-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-btn\" id=\"uploadfilesbtn\" value=\"开始上传文件\" />-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n<!--\t\t\t\t\t\t\t\t\t\t\t\t\t</div>-->\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<!--上传结束-->\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div class=\"tc mt10\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-btn\" lay-filter=\"saveachievementboxbtn\" id=\"saveachievementboxbtn\" lay-submit value=\"提交成果\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input type=\"button\" class=\"layui-btn layui-btn-red cancelachievementboxbtn\" value=\"取消\" />\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<!--主体结束-->\r\n\t\t</div>\r\n\t\t<!--右侧栏开始-->\r\n\t\t<div class=\"quick_line blueside_quick_line\">\r\n\t\t\t<!--<a href=\"#\"><br/></a>-->\r\n\t\t\t<div class=\"top layui-icon layui-icon-top\"></div>\r\n\t\t</div>\r\n\t\t<!--右侧栏结束-->\r\n\t\t<script th:src=\"@{/modules/configcenter/static/global.js}\"></script>\r\n\t\t<script type=\"text/javascript\" th:src=\"@{/modules/configcenter/process/templateSP.js}\"></script>\r\n\t\t<script th:src=\"@{/modules/configcenter/registration/editAcademicStudentWorkAchievement.js}\"></script>\r\n\t</body>\r\n\r\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/gvsun-business/provider-api/usercenter-front/src/main/resources/templates/configcenter/registration/editAcademicStudentWorkAchievement.html b/gvsun-business/provider-api/usercenter-front/src/main/resources/templates/configcenter/registration/editAcademicStudentWorkAchievement.html
--- a/gvsun-business/provider-api/usercenter-front/src/main/resources/templates/configcenter/registration/editAcademicStudentWorkAchievement.html	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/gvsun-business/provider-api/usercenter-front/src/main/resources/templates/configcenter/registration/editAcademicStudentWorkAchievement.html	(date 1641561229986)
@@ -21,7 +21,7 @@
 	<!--    <script type="text/javascript" th:src="@{${session.oauth2} + '/oauth/OAuth2.js'}"></script>-->
 	<link rel="stylesheet" th:href="@{${session.resourceContainerHostForUpload} + '/shareApi/resourceContainer.css'}" media="all">
 	<script type="text/javascript" th:src="@{${session.resourceContainerHostForUpload} + '/shareApi/resourceContainer.js'}"></script>
-
+	<script th:src="@{/modules/configcenter/static/commonResource.js}"></script>
 	<script th:inline="javascript">
 		var userCenterHost = [[${session.userCenterHost}]];
 		var currentUsername = [[${session.user.username}]];
@@ -32,7 +32,6 @@
 		var currentsiteEnName = [[${session.siteEnName}]];
 		var currentsiteSecret = [[${session.siteSecret}]];
 		var oauth2Host = [[${session.oauth2}]];
-		var oauth2 = [[${session.oauth2}]];
 		var dataSource = [[${session.dataSource}]];
 		var configType = [[${session.configType}]];
 		var resourceContainerHost = [[${resourceContainerHost}]];
@@ -41,7 +40,9 @@
 		var username = [[${username}]];
 		var type = [[${type}]];
 	</script>
-	<script th:src="@{/modules/configcenter/static/commonResource.js}"></script>
+	<!--    <script th:src="@{/modules/common.js}"></script>-->
+	<!--    <script th:src="@{/modules/configcenter/static/common.js}"></script>-->
+	<!--    <script th:src="@{/modules/configcenter/static/global.js}"></script>-->
 	<link rel="stylesheet" th:href="@{/modules/configcenter/process/css/commonList.css}">
 		<style>
 			.layui-form-label {
@@ -229,60 +230,60 @@
 										<div class="editachievementbox hide">
 											<div class="fill_box">
 												<div class="layui-row layui-col-space10">
-<!--													<div class="layui-col-lg12">-->
-<!--														<label class="layui-form-label">名称</label>-->
-<!--														<div class="layui-input-block">-->
-<!--															<input class="layui-input" name="name" autocomplete="on" lay-verify="required" placeholder="请输入工作成果名称" />-->
-<!--														</div>-->
-<!--													</div>-->
-<!--													<div class="layui-col-lg12">-->
-<!--														<label class="layui-form-label">简介</label>-->
-<!--														<div class="layui-input-block">-->
-<!--															<input class="layui-input" name="info" autocomplete="on" lay-verify="required" placeholder="请输入工作成果简介" />-->
-<!--														</div>-->
-<!--													</div>-->
-<!--													<div class="layui-col-lg12">-->
-<!--														<label class="layui-form-label">团队介绍</label>-->
-<!--														<div class="layui-input-block">-->
-<!--															<textarea class="layui-textarea" name="teaminfo" autocomplete="on" lay-verify="required" placeholder="请输入工作成果的团队介绍"></textarea>-->
-<!--														</div>-->
-<!--													</div>-->
-<!--													&lt;!&ndash;上传开始&ndash;&gt;-->
-<!--													<div class="layui-col-md12">-->
-<!--														<label class="layui-form-label">上传文件</label>-->
-<!--														<div class="layui-input-block">-->
-<!--															<div class="mix_uploadbox">-->
-<!--																<div class="layui-upload">-->
-<!--																	<div class="layui-upload-drag" id="projectbook">-->
-<!--																		<i class="layui-icon"></i>-->
-<!--																		<p>点击选择文件，或将文件拖拽到此处</p>-->
-<!--																	</div>-->
-<!--																	<div class="layui-upload-list">-->
-<!--																		<table class="layui-table">-->
-<!--																			<thead>-->
-<!--																				<tr>-->
-<!--																					<th>文件名</th>-->
-<!--																					<th>大小</th>-->
-<!--																					<th>状态</th>-->
-<!--																					<th>操作</th>-->
-<!--																				</tr>-->
-<!--																			</thead>-->
-<!--																			<tbody id="pblist"></tbody>-->
-<!--																		</table>-->
-<!--																		<div class="upload_btn">-->
-<!--																			<input type="button" class="layui-btn" id="uploadfilesbtn" value="开始上传文件" />-->
-<!--																		</div>-->
-<!--																	</div>-->
-<!--																</div>-->
-<!--															</div>-->
+													<div class="layui-col-lg12">
+														<label class="layui-form-label">名称</label>
+														<div class="layui-input-block">
+															<input class="layui-input" name="name" autocomplete="on" lay-verify="required" placeholder="请输入工作成果名称" />
+														</div>
+													</div>
+													<div class="layui-col-lg12">
+														<label class="layui-form-label">简介</label>
+														<div class="layui-input-block">
+															<input class="layui-input" name="info" autocomplete="on" lay-verify="required" placeholder="请输入工作成果简介" />
+														</div>
+													</div>
+													<div class="layui-col-lg12">
+														<label class="layui-form-label">团队介绍</label>
+														<div class="layui-input-block">
+															<textarea class="layui-textarea" name="teaminfo" autocomplete="on" lay-verify="required" placeholder="请输入工作成果的团队介绍"></textarea>
+														</div>
+													</div>
+													<!--上传开始-->
+													<div class="layui-col-md12">
+														<label class="layui-form-label">上传文件</label>
+														<div class="layui-input-block">
+															<div class="mix_uploadbox">
+																<div class="layui-upload">
+																	<div class="layui-upload-drag" id="projectbook">
+																		<i class="layui-icon"></i>
+																		<p>点击选择文件，或将文件拖拽到此处</p>
+																	</div>
+																	<div class="layui-upload-list">
+																		<table class="layui-table">
+																			<thead>
+																				<tr>
+																					<th>文件名</th>
+																					<th>大小</th>
+																					<th>状态</th>
+																					<th>操作</th>
+																				</tr>
+																			</thead>
+																			<tbody id="pblist"></tbody>
+																		</table>
+																		<div class="upload_btn">
+																			<input type="button" class="layui-btn" id="uploadfilesbtn" value="开始上传文件" />
+																		</div>
+																	</div>
+																</div>
+															</div>
 
-<!--														</div>-->
-<!--													</div>-->
+														</div>
+													</div>
 													<!--上传结束-->
 												</div>
 											</div>
 											<div class="tc mt10">
-												<input type="button" class="layui-btn" lay-filter="saveachievementboxbtn" id="saveachievementboxbtn" lay-submit value="提交成果" />
+												<input type="button" class="layui-btn saveachievementboxbtn" value="提交成果" />
 												<input type="button" class="layui-btn layui-btn-red cancelachievementboxbtn" value="取消" />
 											</div>
 										</div>
Index: lubanlou-master/lubanlou-gateway/src/main/resources/application.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server:\r\n  port: 8760\r\nspring:\r\n  flyway:\r\n    baseline-on-migrate: true\r\n    enabled: true\r\n    encoding: UTF-8\r\n    validate-on-migrate: false\r\n  application:\r\n    name: ZUUL-SERVICE\r\n  datasource:\r\n    url: jdbc:mysql://${db_host:localhost}/${db_name:zuul}?useUnilocalhostcode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai\r\n    username: ${db_user:root}\r\n    password: ${db_pwd:gengshang}\r\n  jpa:\r\n    show-sql: false\r\n    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect\r\n    hibernate:\r\n      ddl-auto: none\r\n    open-in-view: false\r\n    properties:\r\n      hibernate:\r\n        enable_lazy_load_no_trans: true\r\n        event:\r\n          merge:\r\n            entity_copy_observer: allow\r\n\r\neureka:\r\n  instance:\r\n    prefer-ip-address: true\r\n    lease-expiration-duration-in-seconds: 90 # 过期时间\r\n    lease-renewal-interval-in-seconds: 30 # 续约时间\r\n  client:\r\n    serviceUrl:\r\n      defaultZone: ${eureka_host:http://localhost:8761/eureka/}\r\n    register-with-eureka: true\r\n    fetch-registry: true\r\n\r\nmanagement:\r\n  endpoints:\r\n    web:\r\n      exposure:\r\n        include: '*'\r\n\r\n\r\nhystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: ${timeout_in_milliseconds:120000}\r\nribbon:\r\n  ReadTimeout: ${read_timeout:20000}\r\n  ConnectTimeout: ${connect_timeout:20000}\r\n\r\nzuul:\r\n  sensitive-headers:\r\n  ignored-headers:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lubanlou-master/lubanlou-gateway/src/main/resources/application.yml b/lubanlou-master/lubanlou-gateway/src/main/resources/application.yml
--- a/lubanlou-master/lubanlou-gateway/src/main/resources/application.yml	(revision a41c62394f31ca8412ecdebe065fe44e3abe26dc)
+++ b/lubanlou-master/lubanlou-gateway/src/main/resources/application.yml	(date 1641561229992)
@@ -11,7 +11,7 @@
   datasource:
     url: jdbc:mysql://${db_host:localhost}/${db_name:zuul}?useUnilocalhostcode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&transformedBitIsBoolean=true&useSSL=false&autoReconnect=true&serverTimezone=Asia/Shanghai
     username: ${db_user:root}
-    password: ${db_pwd:gengshang}
+    password: ${db_pwd:0822}
   jpa:
     show-sql: false
     database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
